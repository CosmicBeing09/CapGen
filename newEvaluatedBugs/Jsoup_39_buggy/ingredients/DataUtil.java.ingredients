void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	427:433	19:19	java.util.regex.Pattern	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	443:478	19:19	"(?i)\\bcharset=\\s*\"?([^\\s;\"]*)"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.regex.Pattern	Expression	class spoon.support.reflect.code.CtInvocationImpl	427:479	19:19	java.util.regex.Pattern.compile("(?i)\\bcharset=\\s*\"?([^\\s;\"]*)")	[java.util.regex.Pattern:compile]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	523:529	20:20	"UTF-8"	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	621:627	21:21	131072	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1072:1075	34:34	null	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1045:1076	34:34	java.io.FileInputStream inStream = null	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.FileInputStream	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	1104:1111	36:36	inStream	[]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.File	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1135:1136	36:36	in	[]	[java.io.File:in]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.FileInputStream	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1115:1137	36:36	new java.io.FileInputStream(in)	[]	[java.io.File:in]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	1104:1138	36:36	inStream = new java.io.FileInputStream(in)	[]	[java.io.File:in, java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.FileInputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1191:1198	37:37	inStream	[]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	1174:1199	37:37	org.jsoup.helper.DataUtil.readToByteBuffer(inStream)	[java.nio.ByteBuffer:readToByteBuffer]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1152:1200	37:37	java.nio.ByteBuffer byteData = org.jsoup.helper.DataUtil.readToByteBuffer(inStream)	[java.nio.ByteBuffer:readToByteBuffer]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1235:1242	38:38	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1245:1255	38:38	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1258:1264	38:38	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1267:1272	38:38	org.jsoup.parser.Parser	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Parser	Expression	class spoon.support.reflect.code.CtInvocationImpl	1267:1285	38:38	org.jsoup.parser.Parser.htmlParser()	[org.jsoup.parser.Parser:htmlParser]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtInvocationImpl	1221:1286	38:38	org.jsoup.helper.DataUtil.parseByteData(byteData, charsetName, baseUri, org.jsoup.parser.Parser.htmlParser())	[org.jsoup.nodes.Document:parseByteData, org.jsoup.parser.Parser:htmlParser]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData, java.lang.String:baseUri]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1214:1287	38:38	return org.jsoup.helper.DataUtil.parseByteData(byteData, charsetName, baseUri, org.jsoup.parser.Parser.htmlParser())	[org.jsoup.nodes.Document:parseByteData, org.jsoup.parser.Parser:htmlParser]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData, java.lang.String:baseUri]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.FileInputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1325:1332	40:40	inStream	[]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1337:1340	40:40	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1325:1340	40:40	inStream != null	[]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.FileInputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1359:1366	41:41	inStream	[]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1359:1375	41:41	inStream.close()	[void:close]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1321:1375	40:41	if (inStream != null)    inStream.close();	[void:close]	[java.io.FileInputStream:inStream]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	1086:1385	35:42	try {    inStream = new java.io.FileInputStream(in);    java.nio.ByteBuffer byteData = org.jsoup.helper.DataUtil.readToByteBuffer(inStream);    return org.jsoup.helper.DataUtil.parseByteData(byteData, charsetName, baseUri, org.jsoup.parser.Parser.htmlParser());} finally {    if (inStream != null)        inStream.close();}	[void:close, java.nio.ByteBuffer:readToByteBuffer, org.jsoup.nodes.Document:parseByteData, org.jsoup.parser.Parser:htmlParser]	[java.lang.String:charsetName, java.io.File:in, java.io.FileInputStream:inStream, java.nio.ByteBuffer:byteData, java.lang.String:baseUri]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.InputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1865:1866	54:54	in	[]	[java.io.InputStream:in]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	1848:1867	54:54	org.jsoup.helper.DataUtil.readToByteBuffer(in)	[java.nio.ByteBuffer:readToByteBuffer]	[java.io.InputStream:in]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1826:1868	54:54	java.nio.ByteBuffer byteData = org.jsoup.helper.DataUtil.readToByteBuffer(in)	[java.nio.ByteBuffer:readToByteBuffer]	[java.io.InputStream:in]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1899:1906	55:55	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1909:1919	55:55	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1922:1928	55:55	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1931:1936	55:55	org.jsoup.parser.Parser	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Parser	Expression	class spoon.support.reflect.code.CtInvocationImpl	1931:1949	55:55	org.jsoup.parser.Parser.htmlParser()	[org.jsoup.parser.Parser:htmlParser]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtInvocationImpl	1885:1950	55:55	org.jsoup.helper.DataUtil.parseByteData(byteData, charsetName, baseUri, org.jsoup.parser.Parser.htmlParser())	[org.jsoup.nodes.Document:parseByteData, org.jsoup.parser.Parser:htmlParser]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData, java.lang.String:baseUri]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1878:1951	55:55	return org.jsoup.helper.DataUtil.parseByteData(byteData, charsetName, baseUri, org.jsoup.parser.Parser.htmlParser())	[org.jsoup.nodes.Document:parseByteData, org.jsoup.parser.Parser:htmlParser]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData, java.lang.String:baseUri]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.InputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2546:2547	68:68	in	[]	[java.io.InputStream:in]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	2529:2548	68:68	org.jsoup.helper.DataUtil.readToByteBuffer(in)	[java.nio.ByteBuffer:readToByteBuffer]	[java.io.InputStream:in]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2507:2549	68:68	java.nio.ByteBuffer byteData = org.jsoup.helper.DataUtil.readToByteBuffer(in)	[java.nio.ByteBuffer:readToByteBuffer]	[java.io.InputStream:in]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2580:2587	69:69	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2590:2600	69:69	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2603:2609	69:69	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Parser	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2612:2617	69:69	parser	[]	[org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtInvocationImpl	2566:2618	69:69	org.jsoup.helper.DataUtil.parseByteData(byteData, charsetName, baseUri, parser)	[org.jsoup.nodes.Document:parseByteData]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData, java.lang.String:baseUri, org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2559:2619	69:69	return org.jsoup.helper.DataUtil.parseByteData(byteData, charsetName, baseUri, parser)	[org.jsoup.nodes.Document:parseByteData]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData, java.lang.String:baseUri, org.jsoup.parser.Parser:parser]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2940:2954	75:75	java.lang.String docData	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2979:2982	76:76	null	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2964:2983	76:76	org.jsoup.nodes.Document doc = null	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2997:3007	77:77	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	3012:3015	77:77	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2997:3015	77:77	charsetName == null	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3201:3207	79:79	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3211:3217	79:79	java.nio.charset.Charset	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3227:3240	79:79	org.jsoup.helper.DataUtil.defaultCharset	[]	[java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.charset.Charset	Expression	class spoon.support.reflect.code.CtInvocationImpl	3211:3241	79:79	java.nio.charset.Charset.forName(org.jsoup.helper.DataUtil.defaultCharset)	[java.nio.charset.Charset:forName]	[java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3250:3257	79:79	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.CharBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	3211:3258	79:79	java.nio.charset.Charset.forName(org.jsoup.helper.DataUtil.defaultCharset).decode(byteData)	[java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.nio.ByteBuffer:byteData, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3211:3269	79:79	java.nio.charset.Charset.forName(org.jsoup.helper.DataUtil.defaultCharset).decode(byteData).toString()	[java.lang.String:forName, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.nio.ByteBuffer:byteData, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3201:3270	79:79	docData = java.nio.charset.Charset.forName(org.jsoup.helper.DataUtil.defaultCharset).decode(byteData).toString()	[java.lang.String:forName, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.lang.String:docData, java.nio.ByteBuffer:byteData, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3284:3286	80:80	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Parser	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3290:3295	80:80	parser	[]	[org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3308:3314	80:80	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3317:3323	80:80	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtInvocationImpl	3290:3324	80:80	parser.parseInput(docData, baseUri)	[org.jsoup.nodes.Document:parseInput]	[java.lang.String:docData, java.lang.String:baseUri, org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3284:3325	80:80	doc = parser.parseInput(docData, baseUri)	[org.jsoup.nodes.Document:parseInput]	[java.lang.String:docData, org.jsoup.nodes.Document:doc, java.lang.String:baseUri, org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3354:3356	81:81	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3365:3410	81:81	"meta[http-equiv=content-type], meta[charset]"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.select.Elements	Expression	class spoon.support.reflect.code.CtInvocationImpl	3354:3411	81:81	doc.select("meta[http-equiv=content-type], meta[charset]")	[org.jsoup.select.Elements:select]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	3354:3419	81:81	doc.select("meta[http-equiv=content-type], meta[charset]").first()	[org.jsoup.select.Elements:select, org.jsoup.nodes.Element:select]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3339:3420	81:81	org.jsoup.nodes.Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first()	[org.jsoup.select.Elements:select, org.jsoup.nodes.Element:select]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3438:3441	82:82	meta	[]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	3446:3449	82:82	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3438:3449	82:82	meta != null	[]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3541:3544	83:83	meta	[]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3554:3565	83:83	"http-equiv"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3541:3566	83:83	meta.hasAttr("http-equiv")	[boolean:hasAttr]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3596:3599	83:83	meta	[]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3606:3614	83:83	"content"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3596:3615	83:83	meta.attr("content")	[java.lang.String:attr]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3570:3616	83:83	org.jsoup.helper.DataUtil.getCharsetFromContentType(meta.attr("content"))	[java.lang.String:getCharsetFromContentType, java.lang.String:attr]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3620:3623	83:83	meta	[]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3630:3638	83:83	"charset"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3620:3639	83:83	meta.attr("charset")	[java.lang.String:attr]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtConditionalImpl	3541:3639	83:83	meta.hasAttr("http-equiv")) ? org.jsoup.helper.DataUtil.getCharsetFromContentType(meta.attr("content")) : meta.attr("charset"	[boolean:hasAttr, java.lang.String:getCharsetFromContentType, java.lang.String:attr]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3519:3640	83:83	java.lang.String foundCharset = (meta.hasAttr("http-equiv")) ? org.jsoup.helper.DataUtil.getCharsetFromContentType(meta.attr("content")) : meta.attr("charset")	[boolean:hasAttr, java.lang.String:getCharsetFromContentType, java.lang.String:attr]	[org.jsoup.nodes.Element:meta]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3662:3673	84:84	foundCharset	[]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	3678:3681	84:84	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3662:3681	84:84	foundCharset != null	[]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3686:3697	84:84	foundCharset	[]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	3686:3706	84:84	foundCharset.length()	[int:length]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	3711:3711	84:84	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3686:3711	84:84	(foundCharset.length()) != 0	[int:length]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3662:3711	84:84	(foundCharset != null) && ((foundCharset.length()) != 0)	[int:length]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3717:3728	84:84	foundCharset	[]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3737:3750	84:84	org.jsoup.helper.DataUtil.defaultCharset	[]	[java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3717:3751	84:84	foundCharset.equals(org.jsoup.helper.DataUtil.defaultCharset)	[boolean:equals]	[java.lang.String:foundCharset, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	3716:3751	84:84	!(foundCharset.equals(org.jsoup.helper.DataUtil.defaultCharset))	[boolean:equals]	[java.lang.String:foundCharset, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3662:3751	84:84	(foundCharset != null) && ((foundCharset.length()) != 0)) && (!(foundCharset.equals(org.jsoup.helper.DataUtil.defaultCharset))	[int:length, boolean:equals]	[java.lang.String:foundCharset, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3797:3807	85:85	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3811:3822	85:85	foundCharset	[]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3797:3823	85:85	charsetName = foundCharset	[]	[java.lang.String:charsetName, java.lang.String:foundCharset]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3845:3852	86:86	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.Buffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	3845:3862	86:86	byteData.rewind()	[java.nio.Buffer:rewind]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3884:3890	87:87	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3894:3900	87:87	java.nio.charset.Charset	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3910:3921	87:87	foundCharset	[]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.charset.Charset	Expression	class spoon.support.reflect.code.CtInvocationImpl	3894:3922	87:87	java.nio.charset.Charset.forName(foundCharset)	[java.nio.charset.Charset:forName]	[java.lang.String:foundCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3931:3938	87:87	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.CharBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	3894:3939	87:87	java.nio.charset.Charset.forName(foundCharset).decode(byteData)	[java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.nio.ByteBuffer:byteData, java.lang.String:foundCharset]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3894:3950	87:87	java.nio.charset.Charset.forName(foundCharset).decode(byteData).toString()	[java.lang.String:forName, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.nio.ByteBuffer:byteData, java.lang.String:foundCharset]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3884:3951	87:87	docData = java.nio.charset.Charset.forName(foundCharset).decode(byteData).toString()	[java.lang.String:forName, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.lang.String:docData, java.nio.ByteBuffer:byteData, java.lang.String:foundCharset]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3973:3975	88:88	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	3979:3982	88:88	null	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3973:3983	88:88	doc = null	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	3658:4001	84:89	if (((foundCharset != null) && ((foundCharset.length()) != 0)) && (!(foundCharset.equals(org.jsoup.helper.DataUtil.defaultCharset)))) {    charsetName = foundCharset;    byteData.rewind();    docData = java.nio.charset.Charset.forName(foundCharset).decode(byteData).toString();    doc = null;}	[int:length, java.lang.String:forName, boolean:equals, java.nio.Buffer:rewind, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.lang.String:charsetName, java.lang.String:docData, org.jsoup.nodes.Document:doc, java.nio.ByteBuffer:byteData, java.lang.String:foundCharset, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	3434:4015	82:90	if (meta != null) {    java.lang.String foundCharset = (meta.hasAttr("http-equiv")) ? org.jsoup.helper.DataUtil.getCharsetFromContentType(meta.attr("content")) : meta.attr("charset");    if (((foundCharset != null) && ((foundCharset.length()) != 0)) && (!(foundCharset.equals(org.jsoup.helper.DataUtil.defaultCharset)))) {        charsetName = foundCharset;        byteData.rewind();        docData = java.nio.charset.Charset.forName(foundCharset).decode(byteData).toString();        doc = null;    }}	[int:length, boolean:hasAttr, java.lang.String:getCharsetFromContentType, java.lang.String:forName, boolean:equals, java.nio.Buffer:rewind, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName, java.lang.String:attr]	[java.lang.String:charsetName, java.lang.String:docData, org.jsoup.nodes.Document:doc, java.nio.ByteBuffer:byteData, java.lang.String:foundCharset, org.jsoup.nodes.Element:meta, java.lang.String:defaultCharset]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4108:4115	92:92	org.jsoup.helper.Validate	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4126:4136	92:92	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	4139:4238	92:92	"Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	4108:4240	92:92	org.jsoup.helper.Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML")	[void:notEmpty]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	4254:4260	93:93	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4264:4270	93:93	java.nio.charset.Charset	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4280:4290	93:93	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.charset.Charset	Expression	class spoon.support.reflect.code.CtInvocationImpl	4264:4291	93:93	java.nio.charset.Charset.forName(charsetName)	[java.nio.charset.Charset:forName]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4300:4307	93:93	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.CharBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	4264:4308	93:93	java.nio.charset.Charset.forName(charsetName).decode(byteData)	[java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	4264:4319	93:93	java.nio.charset.Charset.forName(charsetName).decode(byteData).toString()	[java.lang.String:forName, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.lang.String:charsetName, java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	4254:4320	93:93	docData = java.nio.charset.Charset.forName(charsetName).decode(byteData).toString()	[java.lang.String:forName, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName]	[java.lang.String:charsetName, java.lang.String:docData, java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2993:4330	77:94	if (charsetName == null) {    docData = java.nio.charset.Charset.forName(org.jsoup.helper.DataUtil.defaultCharset).decode(byteData).toString();    doc = parser.parseInput(docData, baseUri);    org.jsoup.nodes.Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();    if (meta != null) {        java.lang.String foundCharset = (meta.hasAttr("http-equiv")) ? org.jsoup.helper.DataUtil.getCharsetFromContentType(meta.attr("content")) : meta.attr("charset");        if (((foundCharset != null) && ((foundCharset.length()) != 0)) && (!(foundCharset.equals(org.jsoup.helper.DataUtil.defaultCharset)))) {            charsetName = foundCharset;            byteData.rewind();            docData = java.nio.charset.Charset.forName(foundCharset).decode(byteData).toString();            doc = null;        }    }}else {    org.jsoup.helper.Validate.notEmpty(charsetName, "Must set charset arg to character set of file to parse. Set to null to attempt to detect from HTML");    docData = java.nio.charset.Charset.forName(charsetName).decode(byteData).toString();}	[boolean:hasAttr, org.jsoup.select.Elements:select, org.jsoup.nodes.Element:select, boolean:equals, java.nio.charset.Charset:forName, java.nio.CharBuffer:forName, int:length, java.lang.String:getCharsetFromContentType, java.lang.String:forName, java.nio.Buffer:rewind, org.jsoup.nodes.Document:parseInput, void:notEmpty, java.lang.String:attr]	[java.lang.String:charsetName, java.lang.String:docData, org.jsoup.nodes.Document:doc, java.nio.ByteBuffer:byteData, java.lang.String:baseUri, java.lang.String:foundCharset, org.jsoup.nodes.Element:meta, org.jsoup.parser.Parser:parser, java.lang.String:defaultCharset]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4344:4346	95:95	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	4351:4354	95:95	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4344:4354	95:95	doc == null	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4642:4648	99:99	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4657:4657	99:99	0	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
char	Expression	class spoon.support.reflect.code.CtInvocationImpl	4642:4658	99:99	docData.charAt(0)	[char:charAt]	[java.lang.String:docData]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4663:4667	99:99	65279	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4642:4667	99:99	(docData.charAt(0)) == 65279	[char:charAt]	[java.lang.String:docData]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	4686:4692	100:100	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4696:4702	100:100	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4714:4714	100:100	1	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	4696:4715	100:100	docData.substring(1)	[java.lang.String:substring]	[java.lang.String:docData]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	4686:4716	100:100	docData = docData.substring(1)	[java.lang.String:substring]	[java.lang.String:docData]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	4638:4716	99:100	if ((docData.charAt(0)) == 65279)    docData = docData.substring(1);	[char:charAt, java.lang.String:substring]	[java.lang.String:docData]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	4731:4733	102:102	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Parser	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4737:4742	102:102	parser	[]	[org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4755:4761	102:102	docData	[]	[java.lang.String:docData]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4764:4770	102:102	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtInvocationImpl	4737:4771	102:102	parser.parseInput(docData, baseUri)	[org.jsoup.nodes.Document:parseInput]	[java.lang.String:docData, java.lang.String:baseUri, org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	4731:4772	102:102	doc = parser.parseInput(docData, baseUri)	[org.jsoup.nodes.Document:parseInput]	[java.lang.String:docData, org.jsoup.nodes.Document:doc, java.lang.String:baseUri, org.jsoup.parser.Parser:parser]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4786:4788	103:103	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document.OutputSettings	Expression	class spoon.support.reflect.code.CtInvocationImpl	4786:4805	103:103	doc.outputSettings()	[org.jsoup.nodes.Document.OutputSettings:outputSettings]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4815:4825	103:103	charsetName	[]	[java.lang.String:charsetName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document.OutputSettings	Expression	class spoon.support.reflect.code.CtInvocationImpl	4786:4827	103:103	doc.outputSettings().charset(charsetName)	[org.jsoup.nodes.Document.OutputSettings:outputSettings]	[org.jsoup.nodes.Document:doc, java.lang.String:charsetName]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	4340:4837	95:104	if (doc == null) {    if ((docData.charAt(0)) == 65279)        docData = docData.substring(1);    doc = parser.parseInput(docData, baseUri);    doc.outputSettings().charset(charsetName);}	[org.jsoup.nodes.Document.OutputSettings:outputSettings, char:charAt, java.lang.String:substring, org.jsoup.nodes.Document:parseInput]	[org.jsoup.nodes.Document:doc, java.lang.String:docData, java.lang.String:charsetName, java.lang.String:baseUri, org.jsoup.parser.Parser:parser]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4854:4856	105:105	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4847:4857	105:105	return doc	[]	[org.jsoup.nodes.Document:doc]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	4976:4979	109:109	byte	[]	[]	[spoon.support.reflect.reference.CtArrayTypeReferenceImpl, spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	4981:4990	109:109	org.jsoup.helper.DataUtil.bufferSize	[]	[int:bufferSize]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
byte[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	4972:4991	109:109	new byte[org.jsoup.helper.DataUtil.bufferSize]	[]	[int:bufferSize]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4956:4992	109:109	byte[] buffer = new byte[org.jsoup.helper.DataUtil.bufferSize]	[]	[int:bufferSize]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	5062:5071	110:110	org.jsoup.helper.DataUtil.bufferSize	[]	[int:bufferSize]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.ByteArrayOutputStream	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	5036:5072	110:110	new java.io.ByteArrayOutputStream(org.jsoup.helper.DataUtil.bufferSize)	[]	[int:bufferSize]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	5002:5073	110:110	java.io.ByteArrayOutputStream outStream = new java.io.ByteArrayOutputStream(org.jsoup.helper.DataUtil.bufferSize)	[]	[int:bufferSize]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	5083:5085	111:111	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	5083:5091	111:111	int read	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	5107:5110	112:112	true	[]	[]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	5127:5130	113:113	read	[]	[int:read]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.InputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5135:5142	113:113	inStream	[]	[java.io.InputStream:inStream]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
byte[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5149:5154	113:113	buffer	[]	[byte[]:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	5135:5155	113:113	inStream.read(buffer)	[int:read]	[java.io.InputStream:inStream, byte[]:buffer]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	5127:5156	113:113	read = inStream.read(buffer)	[int:read]	[java.io.InputStream:inStream, byte[]:buffer, int:read]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5174:5177	114:114	read	[]	[int:read]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	5183:5183	114:114	1	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	5182:5183	114:114	-1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	5174:5183	114:114	read == (-1)	[]	[int:read]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	5186:5191	114:114	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtBreakImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	5170:5191	114:114	if (read == (-1))    break;	[]	[int:read]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.ByteArrayOutputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5205:5213	115:115	outStream	[]	[java.io.ByteArrayOutputStream:outStream]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
byte[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5221:5226	115:115	buffer	[]	[byte[]:buffer]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	5229:5229	115:115	0	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5232:5235	115:115	read	[]	[int:read]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	5205:5237	115:115	outStream.write(buffer, 0, read)	[void:write]	[byte[]:buffer, java.io.ByteArrayOutputStream:outStream, int:read]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtWhileImpl	Statement	class spoon.support.reflect.code.CtWhileImpl	5101:5247	112:116	while (true) {    read = inStream.read(buffer);    if (read == (-1))        break;    outStream.write(buffer, 0, read);} 	[void:write, int:read]	[java.io.InputStream:inStream, byte[]:buffer, int:read, java.io.ByteArrayOutputStream:outStream]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	5279:5288	117:117	java.nio.ByteBuffer	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.ByteArrayOutputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5295:5303	117:117	outStream	[]	[java.io.ByteArrayOutputStream:outStream]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
byte[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	5295:5317	117:117	outStream.toByteArray()	[byte[]:toByteArray]	[java.io.ByteArrayOutputStream:outStream]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtInvocationImpl	5279:5318	117:117	java.nio.ByteBuffer.wrap(outStream.toByteArray())	[java.nio.ByteBuffer:wrap, byte[]:toByteArray]	[java.io.ByteArrayOutputStream:outStream]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	5257:5319	117:117	java.nio.ByteBuffer byteData = java.nio.ByteBuffer.wrap(outStream.toByteArray())	[java.nio.ByteBuffer:wrap, byte[]:toByteArray]	[java.io.ByteArrayOutputStream:outStream]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.nio.ByteBuffer	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5336:5343	118:118	byteData	[]	[java.nio.ByteBuffer:byteData]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	5329:5344	118:118	return byteData	[]	[java.nio.ByteBuffer:byteData]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5727:5737	128:128	contentType	[]	[java.lang.String:contentType]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	5742:5745	128:128	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	5727:5745	128:128	contentType == null	[]	[java.lang.String:contentType]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	5755:5758	128:128	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	5748:5759	128:128	return null	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	5723:5759	128:128	if (contentType == null)    return null;	[]	[java.lang.String:contentType]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.regex.Pattern	Expression	class spoon.support.reflect.code.CtFieldReadImpl	5781:5794	129:129	org.jsoup.helper.DataUtil.charsetPattern	[]	[java.util.regex.Pattern:charsetPattern]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5804:5814	129:129	contentType	[]	[java.lang.String:contentType]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.regex.Matcher	Expression	class spoon.support.reflect.code.CtInvocationImpl	5781:5815	129:129	org.jsoup.helper.DataUtil.charsetPattern.matcher(contentType)	[java.util.regex.Matcher:matcher]	[java.lang.String:contentType, java.util.regex.Pattern:charsetPattern]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	5769:5816	129:129	java.util.regex.Matcher m = org.jsoup.helper.DataUtil.charsetPattern.matcher(contentType)	[java.util.regex.Matcher:matcher]	[java.lang.String:contentType, java.util.regex.Pattern:charsetPattern]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.regex.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5830:5830	130:130	m	[]	[java.util.regex.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	5830:5837	130:130	m.find()	[boolean:find]	[java.util.regex.Matcher:m]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.regex.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	5861:5861	131:131	m	[]	[java.util.regex.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	604:606	21:21	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	5869:5869	131:131	1	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	5861:5870	131:131	m.group(1)	[java.lang.String:group]	[java.util.regex.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	5861:5877	131:131	m.group(1).trim()	[java.lang.String:group]	[java.util.regex.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	5891:5896	131:131	java.util.Locale	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Locale	Expression	class spoon.support.reflect.code.CtFieldReadImpl	5891:5904	131:131	java.util.Locale.ENGLISH	[]	[java.util.Locale:ENGLISH]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	5861:5905	131:131	m.group(1).trim().toUpperCase(java.util.Locale.ENGLISH)	[java.lang.String:group]	[java.util.regex.Matcher:m, java.util.Locale:ENGLISH]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	5854:5906	131:131	return m.group(1).trim().toUpperCase(java.util.Locale.ENGLISH)	[java.lang.String:group]	[java.util.regex.Matcher:m, java.util.Locale:ENGLISH]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	5826:5916	130:132	if (m.find()) {    return m.group(1).trim().toUpperCase(java.util.Locale.ENGLISH);}	[boolean:find, java.lang.String:group]	[java.util.regex.Matcher:m, java.util.Locale:ENGLISH]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	5933:5936	133:133	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	5926:5937	133:133	return null	[]	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
