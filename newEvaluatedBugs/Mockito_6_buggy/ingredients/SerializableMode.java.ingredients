org.mockito.Incubating	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	95:105	8:8	@org.mockito.Incubating	[]	[]	[spoon.support.reflect.declaration.CtEnumImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
org.mockito.mock.SerializableMode	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	143:187	11:14	new org.mockito.mock.SerializableMode()	[]	[]	[spoon.support.reflect.declaration.CtEnumValueImpl, spoon.support.reflect.declaration.CtEnumImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
org.mockito.mock.SerializableMode	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	195:293	16:19	new org.mockito.mock.SerializableMode()	[]	[]	[spoon.support.reflect.declaration.CtEnumValueImpl, spoon.support.reflect.declaration.CtEnumImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
org.mockito.Incubating	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	392:402	24:24	@org.mockito.Incubating	[]	[]	[spoon.support.reflect.declaration.CtEnumValueImpl, spoon.support.reflect.declaration.CtEnumImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
org.mockito.mock.SerializableMode	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	301:426	21:25	new org.mockito.mock.SerializableMode()	[]	[]	[spoon.support.reflect.declaration.CtEnumValueImpl, spoon.support.reflect.declaration.CtEnumImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
