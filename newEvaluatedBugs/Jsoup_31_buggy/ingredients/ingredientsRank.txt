1	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::furthestBlock	0.07348469228349536
2	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::formatEl	0.07348469228349536
3	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::furthestBlock	0.07348469228349536
4	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::formatEl	0.07348469228349536
5	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::furthestBlock	0.07348469228349536
6	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::formatEl	0.07348469228349536
7	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::furthestBlock	0.07348469228349536
8	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::formatEl	0.07348469228349536
9	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::adopter	0.07348469228349536
10	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::furthestBlock	0.07348469228349536
11	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::formatEl	0.07348469228349536
12	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::adopter	0.07348469228349536
13	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::si	0.07348469228349536
14	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::i	0.07348469228349536
15	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::si	0.07348469228349536
16	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::i	0.07348469228349536
17	org.jsoup.parser.HtmlTreeBuilder::::369::::12125::::12129::::after::::contextElement	0.07348469228349536
18	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::node	0.0734288669918138
19	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::node	0.07342554173966641
20	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::node	0.0734217952572898
21	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::furthestBlock	0.07332202556012292
22	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::furthestBlock	0.07328621911054871
23	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::furthestBlock	0.07324670659420013
24	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::furthestBlock	0.07290032097308982
25	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::furthestBlock	0.07008663978608058
26	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::furthestBlock	0.07008452439002727
27	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::furthestBlock	0.07008214102368931
28	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::node	0.06885719276942134
29	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::formatEl	0.0684113944284148
30	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::node	0.06715872256336772
31	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::node	0.06670047659314576
32	org.jsoup.parser.HtmlTreeBuilder::::369::::12125::::12129::::after::::in	0.06648615016125771
33	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12187::::i + 1::::i	0.06531972647421809
34	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::formatEl	0.06477444471248385
35	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::formatEl	0.06477007864822551
36	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::formatEl	0.06476515950763886
37	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::el	0.06381670082443235
38	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::el	0.06318761409976087
39	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::node	0.06212058782379952
40	org.jsoup.parser.HtmlTreeBuilder::::371::::12190::::12191::::in::::contextElement	0.06187564306148365
41	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::lastNode	0.0617876161972216
42	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::node	0.06169428986559034
43	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::lastNode	0.06143118285306842
44	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::node	0.058434730020630314
45	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::lastNode	0.05804206533367122
46	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::lastNode	0.05655340877498306
47	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::furthestBlock	0.05147018302388996
48	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::furthestBlock	0.05145672141422854
49	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::furthestBlock	0.05144572102590436
50	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::furthestBlock	0.05143656340809772
51	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::furthestBlock	0.05095410375788771
52	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::el	0.050688247539631685
53	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::node	0.049270965184004645
54	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::el	0.04885384669431557
55	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::node	0.04851535024582732
56	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::lastNode	0.04840142184538695
57	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::replacement	0.04833995729531503
58	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::replacement	0.048082305378205806
59	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::lastNode	0.04684111964269587
60	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::adopter	0.04623050925199461
61	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::lastNode	0.044850857840011756
62	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::formatEl	0.04378000826609418
63	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::formatEl	0.04376721721488045
64	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::formatEl	0.04375676478504743
65	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::formatEl	0.04374806333244951
66	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::el	0.043592712081208754
67	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::i++	0.04186068291771253
68	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::i++	0.04150524286382608
69	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::el == formatEl	0.040182378231636305
70	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::lastNode	0.035741862998627805
71	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::lastNode	0.03569182561385596
72	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::si++	0.034528462377540654
73	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::si++	0.03437979816452625
74	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::el	0.03400462041160473
75	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::lastNode	0.0337567183728446
76	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::insertNode(el)	0.033272235672804844
77	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::insert(el)	0.033272235672804844
78	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::lastNode	0.032034823059599024
79	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::lastNode	0.03154274940781568
80	org.jsoup.parser.HtmlTreeBuilder::::357::::11785::::11786::::el::::next	0.03154100980184137
81	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::lastNode	0.031140642870049376
82	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::el	0.031132960824263638
83	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::el	0.03110235952775212
84	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::el	0.031075198842952706
85	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::formatEl	0.03087947147233804
86	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::lastNode	0.03080589668819674
87	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::formatEl	0.030230333416300038
88	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::formatEl	0.030113111117955397
89	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::formatEl	0.029978651933715714
90	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::formatEl	0.02990372507897412
91	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11937::::next::::contextElement	0.02976968163110991
92	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::formatEl == null	0.029015414978890867
93	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::formatEl	0.028961843661888618
94	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::replacement	0.028706823007332665
95	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::replacement	0.027414417843315195
96	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::replacement	0.026446154455611257
97	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::formatEl	0.02523982653525047
98	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::adopter	0.024993887197242746
99	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::adopter	0.024993177824493333
100	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::adopter	0.024992378591116034
101	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::replacement	0.024266748369836805
102	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::node	0.023868938637298484
103	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::i--	0.023814483610392012
104	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::node	0.023680382970371564
105	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::node	0.02365704379347939
106	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::node	0.0236151607236966
107	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::node	0.023578646820020695
108	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::node	0.02224613604967594
109	org.jsoup.parser.HtmlTreeBuilder::::652::::22940::::22941::::el::::contextElement	0.02196888267478997
110	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::adopter	0.021553741362480453
111	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::el	0.021518504855463815
112	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::node	0.021111999353503053
113	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::i--	0.021021740329855636
114	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::el	0.020540104688517826
115	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::el	0.020159031221004497
116	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::adopter	0.018840431791127012
117	org.jsoup.parser.HtmlTreeBuilder::::361::::11942::::11943::::el::::contextElement	0.01877979785011094
118	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::adopter	0.018393942664064796
119	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::commonAncestor	0.01688179358566129
120	org.jsoup.parser.HtmlTreeBuilder::::357::::11785::::11786::::el::::contextElement	0.016704710910041585
121	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::lastNode	0.016550502536663163
122	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::el	0.01654282400778741
123	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::commonAncestor	0.016441155492090933
124	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::el	0.01624637107345978
125	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::commonAncestor	0.016111031669383838
126	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::el	0.016004119405236685
127	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::el	0.01580244941639347
128	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::el == null	0.015552315827194782
129	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::replacement	0.015052048542619299
130	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::replacement	0.015028130816156747
131	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::insertNode(el)	0.015018717491196631
132	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::replacement	0.015001183283546016
133	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::replacement	0.015
134	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::node	0.015
135	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::lastNode	0.015
136	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::furthestBlock	0.015
137	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::formatEl	0.015
138	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::el	0.015
139	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::commonAncestor	0.015
140	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::adopter	0.015
141	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::lastNode == furthestBlock	0.014357405225026154
142	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::commonAncestor	0.01409699789273858
143	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::remainingA	0.013939393939393939
144	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::currentForm	0.013939393939393939
145	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::lastNode	0.013816638657036473
146	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::adopter	0.013812276928664362
147	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::adopter	0.013752643295822204
148	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::adopter	0.013703912636194962
149	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::adopter	0.013663345272281918
150	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::lastNode	0.012408119236737488
151	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::next == null	0.012312250029862538
152	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::lastNode	0.01222942177270796
153	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::lastNode	0.012207302831436447
154	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::lastNode	0.012167609522410326
155	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.012138945390494829
156	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::lastNode	0.012133004664889757
157	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::second	0.012121212121212121
158	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.SelfClosingStartTag	0.011692256444309355
159	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.Data	0.011692256444309355
160	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.Comment	0.011692256444309355
161	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BogusDoctype	0.011692256444309355
162	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BeforeAttributeName	0.011692256444309355
163	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AttributeName	0.011692256444309355
164	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.SelfClosingStartTag	0.011692256444309355
165	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedLessthanSign	0.011692256444309355
166	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscaped	0.011692256444309355
167	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedLessthanSign	0.011692256444309355
168	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped	0.011692256444309355
169	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptData	0.011692256444309355
170	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_singleQuoted	0.011692256444309355
171	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_doubleQuoted	0.011692256444309355
172	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_singleQuoted	0.011692256444309355
173	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_doubleQuoted	0.011692256444309355
174	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.Data	0.011692256444309355
175	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.Comment	0.011692256444309355
176	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BogusDoctype	0.011692256444309355
177	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BeforeAttributeValue	0.011692256444309355
178	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BeforeAttributeName	0.011692256444309355
179	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AttributeValue_unquoted	0.011692256444309355
180	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted	0.011692256444309355
181	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AttributeName	0.011692256444309355
182	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted	0.011337945642966647
183	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscaped	0.011255162745456668
184	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedLessthanSign	0.011255162745456668
185	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped	0.011255162745456668
186	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_singleQuoted	0.011255162745456668
187	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_doubleQuoted	0.011255162745456668
188	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AttributeValue_unquoted	0.011255162745456668
189	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9919::::next::::contextElement	0.011224706315623943
190	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.DoctypeName	0.011160790242295293
191	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.01105691056910569
192	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedLessthanSign	0.011036615896030326
193	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BeforeAttributeValue	0.011036615896030326
194	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.010925050851445347
195	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptData	0.010818069046603982
196	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_singleQuoted	0.010818069046603982
197	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_doubleQuoted	0.010818069046603982
198	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CommentStartDash	0.010806479440952584
199	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemIdentifier	0.010806479440952584
200	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AfterDoctypePublicIdentifier	0.010806479440952584
201	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::furthestBlock	0.010392304845413262
202	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::formatEl	0.010392304845413262
203	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::adopter	0.010392304845413262
204	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::furthestBlock	0.010386648399722467
205	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::furthestBlock	0.010384596849978132
206	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::furthestBlock	0.010383536817701459
207	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.DoctypeName	0.010380975347751295
208	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CommentStartDash	0.010380975347751295
209	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::furthestBlock	0.010361344652229309
210	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::furthestBlock	0.010355438174696384
211	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::furthestBlock	0.01033256661617506
212	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::furthestBlock	0.010330614156728651
213	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.010318103581920604
214	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CommentEndDash	0.010275013238938523
215	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BeforeDoctypeName	0.010186435538602847
216	org.jsoup.parser.HtmlTreeBuilder::::262::::9215::::9219::::queue::::formattingElements	0.010141851056742198
217	org.jsoup.parser.HtmlTreeBuilder::::582::::20271::::20272::::in::::el	0.010093898773656797
218	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::el	0.009984270552008755
219	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::replacement	0.009967300979900768
220	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CommentEndDash	0.00994388164889861
221	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemIdentifier	0.00994388164889861
222	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AfterDoctypePublicIdentifier	0.00994388164889861
223	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AfterAttributeName	0.00983212473726014
224	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::c	0.009830156343919347
225	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::node	0.009740993662748419
226	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::node	0.0097352607456205
227	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(startTag)	0.009711156312395865
228	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.009688814129520605
229	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::formatEl	0.009675803903661219
230	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::node	0.009457935858526872
231	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.009430894308943089
232	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::insertNode(el)	0.009311122884754556
233	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::insert(el)	0.009311122884754556
234	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::si	0.009237604307034011
235	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::si++	0.009191873592642754
236	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.009104209042871122
237	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.009083263246425567
238	org.jsoup.parser.HtmlTreeBuilder::::265::::9336::::9342::::element::::contextElement	0.009014978717104176
239	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::lastNode = node	0.008981828532169528
240	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.008981306947796018
241	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::el	0.008935668477210461
242	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::empty	0.00887874522600582
243	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::canContainInline	0.00887874522600582
244	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::canContainBlock	0.00887874522600582
245	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::adopter	0.00887194121765331
246	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::node = replacement	0.008859903257977182
247	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.008780487804878048
248	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::body	0.008712121212121211
249	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::lastNode	0.008707176497884531
250	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CommentEndBang	0.008503459232224985
251	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BeforeDoctypeSystemIdentifier	0.008503459232224985
252	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BeforeDoctypePublicIdentifier	0.008503459232224985
253	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.008497261773346379
254	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::closeCell(tb)	0.008497261773346379
255	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::insert(el)	0.00847209704631605
256	org.jsoup.parser.HtmlTreeBuilder::::582::::20271::::20272::::in::::contextElement	0.008470619965686967
257	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::html	0.008257575757575757
258	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BetweenDoctypePublicAndSystemIdentifiers	0.008237726131217956
259	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AfterDoctypeName	0.008237726131217956
260	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::lastNode	0.008221267569863782
261	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::lastNode	0.008197571150817545
262	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BeforeDoctypeName	0.008195506853487865
263	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::isBlock	0.008191358498831177
264	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.008174936921783012
265	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.008121851737480609
266	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::si	0.008101769745570154
267	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.008078878976964838
268	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::el	0.008069098773586369
269	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::si	0.00805725781113416
270	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.007917903016072763
271	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.007804878048780487
272	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.SelfClosingStartTag	0.007661308776828737
273	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscaped	0.007661308776828737
274	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped	0.007661308776828737
275	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_singleQuoted	0.007661308776828737
276	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_doubleQuoted	0.007661308776828737
277	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.Data	0.007661308776828737
278	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.Comment	0.007661308776828737
279	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.BogusDoctype	0.007661308776828737
280	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.BeforeAttributeName	0.007661308776828737
281	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AttributeValue_unquoted	0.007661308776828737
282	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AttributeName	0.007661308776828737
283	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::commonAncestor	0.007552382228221851
284	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::commonAncestor	0.007541162135354256
285	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::commonAncestor	0.007528520724017842
286	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.00735233851492471
287	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.00735233851492471
288	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.BogusComment	0.007351949127861185
289	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.007295628795297397
290	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.007283367234296897
291	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.007283367234296897
292	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.007283367234296897
293	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::replacement	0.007278283352271226
294	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::adopter	0.007174299974301303
295	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::adopter	0.007140644477624306
296	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::adopter	0.007123304762570228
297	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::adopter	0.007121104890092431
298	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::adopter	0.007120832592718736
299	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::adopter	0.007120343944384786
300	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::adopter	0.007119917937927049
301	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::el	0.007082379331108186
302	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::preserveWhitespace	0.007045713953540103
303	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::replacement	0.007028776643786138
304	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::node	0.006970155202482238
305	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.006940100823296924
306	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedLessthanSign	0.006922869376652474
307	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::node	0.00686204293612398
308	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::node	0.006859126288162035
309	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptData	0.00683056445163044
310	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDashDash	0.006820482925847124
311	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::replacement	0.006813957240612543
312	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	0.006786774013776655
313	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::el	0.006707766880500809
314	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::el	0.006701441013659475
315	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::el	0.006690088997109094
316	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::el	0.006680192243098524
317	org.jsoup.parser.Token::::118::::3625::::3630::::append::::pendingAttributeName	0.006652691761411289
318	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscapedLessthanSign	0.006645954601586374
319	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::node	0.006560676735355809
320	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::node	0.006557474298261295
321	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::adopter	0.006541105327924228
322	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::adopter	0.0065353578114101
323	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.006531859598397104
324	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.006504065040650406
325	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::DELETE::::STATEMENT	0.006397250711568735
326	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDashDash	0.006377594424168739
327	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDash	0.006377594424168739
328	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::selfClosing	0.006358327226365459
329	org.jsoup.parser.Token::::118::::3625::::3630::::append::::tagName	0.006354810040751081
330	org.jsoup.parser.HtmlTreeBuilderState::::414::::18824::::18824::::a::::form	0.006287878787878788
331	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.006253396110254912
332	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::si - 1	0.006237126659864574
333	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::replacement	0.006163763285290825
334	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::el == formatEl	0.006158402871356007
335	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::replacement	0.0061179390717836825
336	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDash	0.006111861323161708
337	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.DoctypeName	0.006092125051454176
338	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::replacement	0.006080493019201021
339	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0060694726952474146
340	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::replacement	0.006049319879870509
341	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_singleQuoted	0.005999820126432143
342	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_doubleQuoted	0.005999820126432143
343	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.005999482134610325
344	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.005950189665973976
345	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::insertNode(el)	0.005922785055402568
346	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.005896824736234299
347	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.005878673638557393
348	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BogusComment	0.005846128222154677
349	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.TagOpen	0.005846128222154677
350	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.RcdataLessthanSign	0.005846128222154677
351	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CommentEnd	0.005846128222154677
352	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CharacterReferenceInRcdata	0.005846128222154677
353	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CharacterReferenceInData	0.005846128222154677
354	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.005760383378445108
355	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.005760383378445108
356	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.005760383378445108
357	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.005760383378445108
358	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.005734552062846699
359	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.005734318295284722
360	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.005732279767733669
361	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.005732279767733669
362	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.005715377148597466
363	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.005715377148597466
364	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.005708720747248291
365	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::commonAncestor	0.005695432250234078
366	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.005649058991014371
367	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.MarkupDeclarationOpen	0.005580395121147647
368	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.EndTagOpen	0.005580395121147647
369	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.005552080658637538
370	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::node == formatEl	0.0055425625842204064
371	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.005541634642554787
372	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::insertNode(el)	0.005536834696967073
373	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::insert(el)	0.005536834696967073
374	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::el == null	0.005533703580681298
375	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDashDash	0.005518307948015163
376	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0054836992872238696
377	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.00547713110867915
378	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.005471721596473048
379	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.005471721596473048
380	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.005471721596473048
381	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.005471721596473048
382	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.005437371226382765
383	org.jsoup.parser.HtmlTreeBuilder::::287::::9924::::9925::::el::::contextElement	0.005368474107267717
384	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0052598658871303
385	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::formList	0.005212682681074384
386	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.0051843450406005975
387	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.005111989034767207
388	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.005111989034767207
389	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.0050826912162750945
390	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted	0.005076770876211814
391	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataLessthanSign	0.0050489289191335855
392	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.RawtextLessthanSign	0.0050489289191335855
393	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CommentStartDash	0.004984465951189781
394	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.004898894698797828
395	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::replacement	0.004863998878971292
396	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.004855578156197932
397	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.004812949177766287
398	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.00480031948203759
399	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CommentEndDash	0.0047075511761236815
400	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(startTag)	0.004690047082691184
401	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	0.004690047082691184
402	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::si < 64	0.0046188021535170055
403	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted	0.004616802194131498
404	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted	0.004616802194131498
405	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemIdentifier	0.004615246251101649
406	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AfterDoctypePublicIdentifier	0.004615246251101649
407	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::insertNode(el)	0.00459200478402494
408	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::insert(el)	0.00459200478402494
409	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::el == formatEl	0.004575022038317792
410	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::formatEl == null	0.004574390594348573
411	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.004541631623212783
412	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::next == null	0.004507489358552088
413	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.004447201223071023
414	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::INSERT::::STATEMENT::::resetInsertionMode()	0.004436298089707313
415	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.004431292559819822
416	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.004429488911430563
417	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.004429488911430563
418	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.004429488911430563
419	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::formatEl == null	0.004425456947090713
420	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::formSubmit	0.004410731499370634
421	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.004390243902439024
422	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::formatEl	0.004380551602042687
423	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.Rcdata	0.00434030731644817
424	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.004331654259989658
425	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.004301876255399819
426	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22739::::next::::contextElement	0.004294005839169868
427	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::commonAncestor	0.004283807922652258
428	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.004263294405575605
429	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.004227642276422764
430	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.004194000560695262
431	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.004177622860509921
432	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.004177622860509921
433	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.004168930740169941
434	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::i	0.004161351735627118
435	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::i	0.004160629386221043
436	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::i	0.004160105555428214
437	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::i	0.0041597082935981525
438	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::i	0.004159396672561284
439	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::resetInsertionMode()	0.0041590294591006055
440	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::pop()	0.0041590294591006055
441	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::commonAncestor	0.00415282710052098
442	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::next == null	0.004140866624999612
443	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(startTag)	0.0041253850095139604
444	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AfterAttributeName	0.0041250717829222254
445	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.004066927237019231
446	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.BeforeDoctypeName	0.004061416700969452
447	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::lastNode	0.0040419855713785605
448	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.004039439488482419
449	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.004032268364911575
450	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.004011454229718819
451	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.00400336417157275
452	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStart	0.003985996515105461
453	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEndTagOpen	0.003985996515105461
454	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::lastNode	0.003984634234194162
455	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.003970683071657186
456	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::lastNode	0.003963086361968308
457	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::lastNode	0.003933739307836898
458	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::lastNode	0.00392586500680032
459	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.003923699520159945
460	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	0.003919115759038262
461	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.003910521206935108
462	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.003908372568909319
463	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(t)	0.0039024390243902435
464	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::anythingElse(t, tb)	0.0039024390243902435
465	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::si - 1	0.0038539857271402004
466	org.jsoup.parser.HtmlTreeBuilder::::554::::18863::::18864::::el::::contextElement	0.0037954243649058633
467	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0037222857502486498
468	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.003669272129399573
469	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::insertNode(el)	0.003663949459027177
470	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::insertNode(el)	0.0036562344446801295
471	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::insert(el)	0.0036562344446801295
472	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.00360639040637644
473	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0035884496776002243
474	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::org.jsoup.parser.TokeniserState.nullChar	0.0035849753128808035
475	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0035780111087661444
476	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0035780111087661444
477	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23170::::next::::contextElement	0.0035501786201792705
478	org.jsoup.parser.Token::::117::::3560::::3582::::ensureAttributeValue()::::INSERT::::STATEMENT::::ensureAttributeValue()	0.0034783352381770076
479	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CommentEndBang	0.0034694312346431966
480	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BeforeDoctypeSystemIdentifier	0.0034694312346431966
481	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BeforeDoctypePublicIdentifier	0.0034694312346431966
482	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AfterDoctypeName	0.0034694312346431966
483	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::if (el == null)    break;	0.0034562300270670645
484	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::replacement	0.0034475413446166266
485	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.Rcdata	0.003442112878464903
486	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::closeCell(tb)	0.0034378208412616336
487	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0034332370801399515
488	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::replacement	0.003413135465337932
489	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::node	0.0033650877172835265
490	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.003360223637426313
491	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.BetweenDoctypePublicAndSystemIdentifiers	0.003360157809930025
492	org.jsoup.parser.HtmlTreeBuilder::::371::::12190::::12191::::in::::after	0.003358963480480541
493	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0033518753202300923
494	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::insert(el)	0.0033410582363809366
495	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::commonAncestor	0.003333592413644903
496	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::INSERT::::STATEMENT::::pop()	0.003327223567280484
497	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::commonAncestor	0.0033170683115707742
498	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::commonAncestor	0.003297266850327297
499	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::commonAncestor	0.0032807825037081692
500	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::startTag.attributes	0.003265566193217747
501	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::org.jsoup.parser.TokeniserState.replacementChar	0.003242121861035028
502	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.003238252255252947
503	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::org.jsoup.parser.TokeniserState.nullChar	0.003235370802300332
504	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.BogusComment	0.003230672375771154
505	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	0.0031862556728124896
506	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.003183369761772297
507	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.0031690945610468603
508	org.jsoup.parser.HtmlTreeBuilder::::369::::12099::::12131::::int i = stack.lastIndexOf(after)::::INSERT::::STATEMENT::::resetInsertionMode()	0.003168784349790937
509	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::anythingElse(t, tb)	0.0031502599303474955
510	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.003126698055127456
511	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::closeCell(tb)	0.003126698055127456
512	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.003105758089751979
513	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::seenFormattingElement	0.0030792014356780034
514	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0030678179260291076
515	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0030678179260291076
516	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(startTag)	0.003027754415475189
517	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::org.jsoup.parser.TokeniserState.eof	0.003008860532085069
518	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::insertNode(el)	0.003003335436701535
519	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0029948056062076055
520	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.002979192074832711
521	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0029489102544775917
522	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0029489102544775917
523	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::DELETE::::STATEMENT	0.0029434701742444527
524	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.002926829268292683
525	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::replacement	0.0029221945795064176
526	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0028967937863680843
527	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.002880191689222554
528	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(t)	0.002840859401474081
529	org.jsoup.parser.HtmlTreeBuilder::::258::::9078::::9079::::el::::contextElement	0.0028149291691973452
530	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.002801464741753712
531	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.002801464741753712
532	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::currentForm	0.002739133562881328
533	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::currentForm	0.0027231094656750094
534	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::replacement	0.002722454553528948
535	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.002720131894412475
536	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDash	0.0027045172616509956
537	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.002703167733271126
538	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.002703167733271126
539	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	0.00268817890994105
540	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDashDash	0.0026768428256389565
541	org.jsoup.parser.HtmlTreeBuilder::::644::::22744::::22745::::el::::contextElement	0.0026296810676745674
542	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::replacement	0.002619546099418677
543	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.002613303811495344
544	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0026121702210623646
545	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::replacement	0.0026064902057535396
546	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::replacement	0.0026048741641001524
547	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::replacement	0.0026019741138690153
548	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.00259995587436441
549	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.00259995587436441
550	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::replacement	0.0025994458332213887
551	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDashDash	0.002595243836937824
552	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0025887426854474555
553	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::insertNode(el)	0.0025799065707386697
554	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0025769670578644505
555	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0025571032483772634
556	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0025559945173836036
557	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0025559945173836036
558	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0025559945173836036
559	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0025559945173836036
560	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.002547861878927644
561	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0025341666666666663
562	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0025341666666666663
563	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0025341666666666663
564	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0025341666666666663
565	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0025341666666666663
566	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.002521318267578341
567	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.002521318267578341
568	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::adopter	0.0024876419292115424
569	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::commonAncestor	0.0024873753132477303
570	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDash	0.0024859704122246525
571	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.002458041901502068
572	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.002454819249290984
573	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.002449447349398914
574	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::adopter	0.002429091930633776
575	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.002427789078098966
576	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.002427789078098966
577	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::adopter	0.002423773780277197
578	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.002422203532380151
579	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0024222035323801508
580	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::adopter	0.0024105556899192493
581	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::adopter	0.0024047457046264924
582	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::(pendingAttributeValue) != null	0.002403547851554114
583	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::(pendingAttributeValue) != null	0.002403547851554114
584	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.00238608060913375
585	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::org.jsoup.parser.TokeniserState.nullChar	0.0023842429349002123
586	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.002384066635048384
587	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.TagOpen	0.0023766969875114808
588	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.RcdataLessthanSign	0.0023766969875114808
589	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CommentEnd	0.0023766969875114808
590	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CharacterReferenceInRcdata	0.0023766969875114808
591	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CharacterReferenceInData	0.0023766969875114808
592	org.jsoup.parser.HtmlTreeBuilder::::369::::12099::::12131::::int i = stack.lastIndexOf(after)::::INSERT::::STATEMENT::::pop()	0.002376588262343203
593	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.002363501828367373
594	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.002360350492596217
595	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0023572462999378626
596	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0023545368214321865
597	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::el	0.0023517473649758186
598	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::insert(el)	0.0023504364287229404
599	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.002345023541345592
600	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0023392307692307692
601	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0023392307692307692
602	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0023345539514614266
603	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0023345539514614266
604	org.jsoup.parser.HtmlTreeBuilderState::::669::::33334::::33338::::stack::::startTag.attributes	0.0023203744547803046
605	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::el	0.002310395504888643
606	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.002306160466812274
607	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0023037878787878783
608	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.RCDATAEndTagName	0.0023030202087276
609	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::remainingA	0.002296115300564166
610	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.002285477413298263
611	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::el	0.002277617782978453
612	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0022764227642276423
613	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.002276422764227642
614	org.jsoup.parser.HtmlTreeBuilderState::::670::::33412::::33416::::stack::::startTag.attributes	0.0022730079586793742
615	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0022706608959477455
616	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0022706608959477455
617	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::el	0.0022701489585555505
618	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.MarkupDeclarationOpen	0.0022674235627983094
619	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.EndTagOpen	0.0022674235627983094
620	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9331::::next::::contextElement	0.00223374557973298
621	org.jsoup.parser.HtmlTreeBuilderState::::672::::33534::::33538::::stack::::startTag.attributes	0.0022006153757554076
622	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::anythingElse(t, tb)	0.0021671157023610598
623	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.002165827129994829
624	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::el == null	0.0021543187110803475
625	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0021530698065601343
626	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0021530698065601343
627	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0021504703087152433
628	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0021442948717948717
629	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.002140488019483806
630	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(startTag)	0.0021392316017316013
631	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0021392316017316013
632	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	0.0021392316017316013
633	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.002124315443336595
634	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted	0.0021230132755067584
635	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted	0.0021230132755067584
636	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.002114398681931209
637	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23244::::next::::contextElement	0.0021049615500001967
638	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::remainingA	0.0021000250964103885
639	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0020970707131695962
640	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataLessthanSign	0.0020488767133719664
641	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.RawtextLessthanSign	0.0020488767133719664
642	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagName	0.0020372871077205695
643	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeStart	0.0020372871077205695
644	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.002028314296344364
645	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::attributes	0.0020222723107862954
646	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0020082814065156885
647	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0020040716074755274
648	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::commonAncestor	0.0020033218419258634
649	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::insertNode(el)	0.0019943096970982525
650	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(startTag)	0.001991130952380952
651	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	0.001991130952380952
652	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::commonAncestor	0.0019820597401785096
653	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0019736473226801233
654	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0019493589743589741
655	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.Rcdata	0.0019384034254626924
656	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0019251796711065145
657	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::insertNode(el)	0.001924843873559345
658	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::insert(el)	0.001915977473208358
659	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::anyOtherEndTag(t, tb)	0.0018839360807401178
660	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(endTag)	0.0018839360807401176
661	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::node == formatEl	0.0018721544728922263
662	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(t)	0.0018606548959665661
663	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AfterAttributeName	0.0018460985004406596
664	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.001843030303030303
665	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.001843030303030303
666	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.001843030303030303
667	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.001843030303030303
668	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.001843030303030303
669	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0018239071988243492
670	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0018239071988243492
671	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0018166526492851135
672	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	0.0018134540265475336
673	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0018101190476190474
674	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.001805438744042613
675	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0017876668374560494
676	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.Rawtext	0.0017715540067135386
677	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::next == null	0.001755370801621024
678	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::lastNode	0.0017448315375234028
679	org.jsoup.parser.HtmlTreeBuilder::::662::::23298::::23301::::next::::contextElement	0.001724750799667935
680	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	0.0017227314776658265
681	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0017201976484452618
682	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0017201976484452618
683	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0017179780385763001
684	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::closeCell(tb)	0.0017179780385763001
685	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0017113852813852811
686	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0017113852813852811
687	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0017113852813852811
688	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::closeCell(tb)	0.0017113852813852811
689	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0017017213164245086
690	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0016845322122182003
691	org.jsoup.parser.HtmlTreeBuilderState::::715::::36092::::36173::::org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0016845322122182003
692	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.TagName	0.0016829763063778618
693	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::commonAncestor	0.0016755706097741543
694	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0016708791208791206
695	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::insert(el)	0.001661924747581877
696	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0016553107350674766
697	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0016361695605488571
698	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0016336220254804183
699	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0016155354959125994
700	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.001614802354920101
701	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStart	0.00161178301451928
702	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEndTagOpen	0.00161178301451928
703	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::commonAncestor	0.0016038804259555987
704	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::insert(el)	0.0015961543177549847
705	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::INSERT::::STATEMENT::::resetInsertionMode()	0.0015843921748954686
706	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0015748132020282754
707	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CommentEndBang	0.0015691837253745606
708	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.BeforeDoctypeSystemIdentifier	0.0015691837253745606
709	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.BeforeDoctypePublicIdentifier	0.0015691837253745606
710	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AfterDoctypeName	0.0015691837253745606
711	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::commonAncestor	0.0015669447844608843
712	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0015625172711571673
713	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::commonAncestor	0.001562258796200951
714	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::commonAncestor	0.0015616787706270944
715	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::commonAncestor	0.001560637891949244
716	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::commonAncestor	0.0015597304478679375
717	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0015594871794871793
718	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0015594871794871793
719	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0015594871794871793
720	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0015594871794871793
721	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0015594871794871793
722	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0015588127998393277
723	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0015588127998393277
724	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0015581366230898314
725	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0015543610825214144
726	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0015471015619302074
727	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0015441623036002365
728	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.001528041996582096
729	org.jsoup.parser.TokeniserState::::809::::27171::::27221::::java.lang.String value = r.consumeToAny('\'', '&', org.jsoup.parser.TokeniserState.nullChar)::::INSERT::::STATEMENT::::anythingElse(t, r)	0.0015240285441088417
730	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.BetweenDoctypePublicAndSystemIdentifiers	0.001523031262863544
731	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0015204397693054
732	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.001508183191381029
733	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0015078741513772562
734	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.001506284885640064
735	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0015055629446509855
736	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0014943506163873257
737	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0014897796615607293
738	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::DELETE::::STATEMENT	0.0014893070439630917
739	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0014839642943637414
740	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::insertNode(el)	0.0014830807224018945
741	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0014483968931840417
742	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.001448095238095238
743	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.001448095238095238
744	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.001448095238095238
745	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.001448095238095238
746	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::closeCell(tb)	0.001448095238095238
747	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.001428982960102323
748	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::resetInsertionMode()	0.0014218689507089393
749	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0014212704939711518
750	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0014212704939711518
751	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0014206539798760228
752	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0014206539798760228
753	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.001412722092859312
754	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0014079126885766862
755	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0014079126885766862
756	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0014076376452889605
757	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0014076376452889605
758	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0014060767403138127
759	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0014060767403138127
760	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0013904012659588917
761	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0013822727272727272
762	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0013794256125562307
763	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0013794256125562307
764	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0013754230586817597
765	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0013748264321380864
766	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0013699123324696358
767	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.Rawtext	0.0013659178089146442
768	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0013634746337907143
769	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0013624961502355028
770	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0013509012299941505
771	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0013501113987203553
772	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0013406117115735304
773	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0013406072812275813
774	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::insertNode(el)	0.0013378851788453565
775	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0013373135871542906
776	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0013373135871542906
777	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0013272012084153057
778	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0013271025720799597
779	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0013134387238107133
780	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0013120269133725818
781	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.001307092099196892
782	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.001307092099196892
783	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0013045987540093755
784	org.jsoup.parser.Token::::76::::2434::::2448::::newAttribute()::::INSERT::::STATEMENT::::newAttribute()	0.0012978671729197888
785	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	0.0012960862601501491
786	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.00129007010728943
787	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0012842928116902836
788	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0012842928116902836
789	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	0.001279858390604211
790	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.001278663404915455
791	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0012640011508717197
792	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::org.jsoup.parser.TokeniserState.replacementChar	0.0012624499163314093
793	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0012588555194805193
794	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.TagName	0.0012566443842014726
795	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0012552773074261695
796	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::tagName	0.0012466843681791418
797	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDash	0.0012461164877974453
798	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::resetInsertionMode()	0.0012414830513006077
799	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::pop()	0.0012414830513006077
800	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0012406559473357173
801	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0012385423068805885
802	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::closeCell(tb)	0.0012385423068805885
803	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0012385423068805885
804	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::closeCell(tb)	0.0012385423068805885
805	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0012378807528135838
806	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"--"	0.0012352265903760617
807	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::INSERT::::STATEMENT::::pop()	0.001232305024918698
808	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.0012288900077919499
809	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0012262465352119525
810	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0012253113553113552
811	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0012111017661900756
812	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0012065465531048232
813	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0012008010933281339
814	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDashDash	0.0011999640252864287
815	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.001197429473152527
816	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::lastNode == furthestBlock	0.00119305451641924
817	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::si++	0.001188976170474705
818	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0011848051948051945
819	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0011795641017910365
820	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0011795641017910365
821	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::body	0.0011790587643445917
822	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	0.0011758333333333332
823	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.0011758333333333332
824	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.0011758333333333332
825	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.001173776765896331
826	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0011727131462595656
827	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::si++	0.001170936278546598
828	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0011696153846153846
829	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0011602519832753053
830	org.jsoup.parser.Token::::118::::3596::::3632::::pendingAttributeValue.append(append)::::INSERT::::STATEMENT::::ensureAttributeValue()	0.0011594450793923359
831	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDash	0.0011538115627754122
832	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.001153184227200926
833	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::org.jsoup.parser.TokeniserState.replacementChar	0.001145143437333071
834	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0011438183347350713
835	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0011353304479738728
836	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0011353304479738728
837	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.001132445646486318
838	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"--!"	0.0011239765052041273
839	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"</"	0.0011236577370517722
840	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::body	0.0011218082779970026
841	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0011205858967014849
842	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0011205858967014849
843	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.001113053770131579
844	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.TagOpen	0.0011076591002643957
845	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.RcdataLessthanSign	0.0011076591002643957
846	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CommentEnd	0.0011076591002643957
847	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CharacterReferenceInRcdata	0.0011076591002643957
848	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CharacterReferenceInData	0.0011076591002643957
849	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0011060010070127546
850	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::org.jsoup.parser.TokeniserState.eof	0.0011044536060407612
851	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0011035404900449845
852	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0011035404900449845
853	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::anythingElse(t, tb)	0.001089900117508813
854	org.jsoup.parser.Token::::76::::2434::::2448::::newAttribute()::::INSERT::::STATEMENT::::ensureAttributeValue()	0.0010815559774331573
855	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::second	0.0010745116817918693
856	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0010744009782409616
857	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0010651854395604392
858	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0010632599192753394
859	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.MarkupDeclarationOpen	0.0010615066377533792
860	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.EndTagOpen	0.0010615066377533792
861	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::insertNode(el)	0.00105688026916535
862	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.001055441831633609
863	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0010547745302502776
864	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0010544910116560158
865	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.001054033597972533
866	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0010445803818472188
867	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	0.0010418005181347149
868	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::insert(el)	0.0010404561478699161
869	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::second	0.0010376726571472274
870	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::isElementInQueue(stack, el)	0.0010368210551463188
871	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::isElementInQueue(formattingElements, el)	0.0010368210551463188
872	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.001036240721680943
873	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.001033721257683721
874	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	0.001016538243255019
875	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.TagName	0.001015354175242363
876	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0010112009206973756
877	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0010112009206973756
878	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0010112009206973756
879	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.001009251471825063
880	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.001009251471825063
881	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(startTag)	0.0010086435763666237
882	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::adopter	0.001007265034449946
883	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.001005455460920686
884	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.001005455460920686
885	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.001005455460920686
886	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.001005455460920686
887	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.001005455460920686
888	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::closeCell(tb)	0.001005455460920686
889	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0010025274725274725
890	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	9.949358974358973E-4
891	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::el	9.946352962138217E-4
892	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::org.jsoup.parser.TokeniserState.eof	9.92742820206125E-4
893	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	9.82970084825864E-4
894	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	9.82970084825864E-4
895	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	9.817017363293143E-4
896	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(startTag)	9.756832744205775E-4
897	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	9.746549260023945E-4
898	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeEnd	9.743547036924462E-4
899	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataLessthanSign	9.692017127313462E-4
900	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.RawtextLessthanSign	9.692017127313462E-4
901	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "")	9.690737392417111E-4
902	org.jsoup.parser.HtmlTreeBuilder::::132::::4504::::4518::::return baseUri::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	9.674820042623164E-4
903	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(startTag)	9.669327517800342E-4
904	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	9.655979287893614E-4
905	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	9.655979287893613E-4
906	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	9.627961410772318E-4
907	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::if (el == null)    break;	9.598937929531582E-4
908	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	9.590187507189334E-4
909	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	9.511695596240498E-4
910	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::insertNode(el)	9.497356856268508E-4
911	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(startTag)	9.418147285728747E-4
912	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	9.418147285728747E-4
913	org.jsoup.parser.Token::::118::::3625::::3630::::append::::this.tagName	9.406791178743376E-4
914	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	9.313340346741876E-4
915	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.RCDATAEndTagName	9.28824110061958E-4
916	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::html	9.284361747807043E-4
917	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.Rawtext	9.230492502203298E-4
918	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	9.2298126306276E-4
919	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	9.215151515151515E-4
920	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	9.173222832963712E-4
921	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	9.169487057878399E-4
922	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	9.169487057878399E-4
923	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	9.165509547587243E-4
924	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(startTag)	9.098143613795259E-4
925	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::replacement	9.085095684620767E-4
926	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	9.083307668236684E-4
927	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	9.083263246425568E-4
928	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::anythingElse(t, tb)	9.071007508239697E-4
929	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::insert(el)	9.06327108134491E-4
930	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::anythingElse(t, tb)	9.0599765751766E-4
931	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	9.059221074271001E-4
932	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	9.025761690779312E-4
933	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::replacement	9.000690855192197E-4
934	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::html	8.993697223027397E-4
935	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	8.990049681831984E-4
936	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	8.984416818622816E-4
937	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	8.984416818622816E-4
938	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::replacement	8.948161184348849E-4
939	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	8.909885845963883E-4
940	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	8.88603896103896E-4
941	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::replacement	8.874295954094081E-4
942	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::replacement	8.86463946341295E-4
943	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	8.848008056102038E-4
944	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::if (el == null)    break;	8.799026435403949E-4
945	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::DELETE::::STATEMENT	8.787299654622335E-4
946	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	8.782450510464081E-4
947	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::anythingElse(t, tb)	8.761220993266047E-4
948	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	8.711012704984479E-4
949	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	8.627829594543809E-4
950	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	8.589890192881501E-4
951	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	8.589890192881501E-4
952	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	8.589890192881501E-4
953	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::anythingElse(t, tb)	8.538865765758876E-4
954	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	8.532007768384107E-4
955	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::org.jsoup.parser.TokeniserState.replacementChar	8.519067602099877E-4
956	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.Character(prompt))	8.43819624200222E-4
957	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::remainingA	8.423116037327204E-4
958	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	8.41747436092977E-4
959	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::anythingElse(t, tb)	8.344026147828839E-4
960	org.jsoup.parser.TokeniserState::::814::::27364::::28181::::switch (c) {    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted);        break;    case '&' :        char[] ref = t.consumeCharacterReference('\'', true);        if (ref != null)            t.tagPending.appendAttributeValue(ref);        else            t.tagPending.appendAttributeValue('&');        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;}::::INSERT::::STATEMENT::::anythingElse(t, r)	8.260132310735491E-4
961	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	8.256168075151824E-4
962	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagName	8.195506853487865E-4
963	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeStart	8.195506853487865E-4
964	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	8.146412298265618E-4
965	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	8.133854474038462E-4
966	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	8.105268801809731E-4
967	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::form	8.050125356559626E-4
968	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	8.043643687365488E-4
969	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagOpen	7.971993030210923E-4
970	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	7.946026652324645E-4
971	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	7.898701298701298E-4
972	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	7.898701298701298E-4
973	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	7.87823834196891E-4
974	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	7.857487666459543E-4
975	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStart	7.845918626872803E-4
976	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEndTagOpen	7.845918626872803E-4
977	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	7.832568508542968E-4
978	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	7.797435897435896E-4
979	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	7.771805412607072E-4
980	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	7.7319113519997E-4
981	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	7.584006905230318E-4
982	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	7.584006905230318E-4
983	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::closeCell(tb)	7.584006905230318E-4
984	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	7.569588744588743E-4
985	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	7.552864868750003E-4
986	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	7.518956043956045E-4
987	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	7.470572644676565E-4
988	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	7.470572644676565E-4
989	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	7.454609553272385E-4
990	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	7.448898307803645E-4
991	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	7.408688468276831E-4
992	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	7.391539957731648E-4
993	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	7.371829184511029E-4
994	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	7.362763022469858E-4
995	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::anythingElse(t, tb)	7.359532407207383E-4
996	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	7.35090672130646E-4
997	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	7.350679752375425E-4
998	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	7.335589646302719E-4
999	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	7.332529454503194E-4
1000	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	7.325248119545713E-4
1001	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::org.jsoup.parser.TokeniserState.eof	7.260535344295393E-4
1002	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	7.239664650840366E-4
1003	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	7.214010878904742E-4
1004	org.jsoup.parser.HtmlTreeBuilder::::152::::5118::::5137::::errors.canAddError()::::INSERT::::STATEMENT::::resetInsertionMode()	7.203815315971237E-4
1005	org.jsoup.parser.HtmlTreeBuilder::::370::::12162::::12163::::-1::::DELETE::::INFIX	7.189179493588188E-4
1006	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	7.168234362384143E-4
1007	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	7.150337837837837E-4
1008	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	7.138988095238093E-4
1009	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	7.138988095238093E-4
1010	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::form	7.134700648060936E-4
1011	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	7.124220513250424E-4
1012	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::pop()	7.109344753544696E-4
1013	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	7.095878359422383E-4
1014	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStartDash	7.086216026854155E-4
1015	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.ScriptDataEndTagName	7.086216026854155E-4
1016	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.RawtextEndTagOpen	7.086216026854155E-4
1017	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.RawtextEndTagName	7.086216026854155E-4
1018	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.RCDATAEndTagOpen	7.086216026854155E-4
1019	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CommentStart	7.086216026854155E-4
1020	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemKeyword	7.086216026854155E-4
1021	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	7.07738461074622E-4
1022	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	7.07738461074622E-4
1023	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	7.056468816841156E-4
1024	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	7.038188226444802E-4
1025	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	7.032238194763885E-4
1026	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::el == formatEl	7.02441951992959E-4
1027	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	6.961511899651832E-4
1028	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	6.953720632332644E-4
1029	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	6.953720632332644E-4
1030	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	6.952006329794459E-4
1031	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::resetInsertionMode()	6.921043371208841E-4
1032	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	6.91108986047909E-4
1033	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	6.877115293408799E-4
1034	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	6.874132160690432E-4
1035	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	6.849561662348179E-4
1036	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	6.817373168953571E-4
1037	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	6.812480751177514E-4
1038	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	6.788676915221349E-4
1039	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	6.750556993601777E-4
1040	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	6.699542115612871E-4
1041	org.jsoup.parser.HtmlTreeBuilder::::152::::5118::::5137::::errors.canAddError()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	6.685026906172584E-4
1042	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	6.683516483516483E-4
1043	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	6.683516483516483E-4
1044	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	6.68072019846312E-4
1045	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	6.654577510280425E-4
1046	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	6.616831719123824E-4
1047	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::currentForm	6.549934120336912E-4
1048	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	6.539602087551721E-4
1049	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	6.514481141642943E-4
1050	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	6.489798114977986E-4
1051	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	6.470872195907857E-4
1052	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	6.462031211448309E-4
1053	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	6.436186158401183E-4
1054	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.417694805194804E-4
1055	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	6.405036630036629E-4
1056	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::attribute	6.393263406007825E-4
1057	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	6.392492492492491E-4
1058	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::anythingElse(t, tb)	6.360691177755523E-4
1059	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	6.328647181501665E-4
1060	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::anythingElse(t, tb)	6.312450795317864E-4
1061	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::remainingA	6.293004258751099E-4
1062	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	6.273178936045772E-4
1063	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::currentForm	6.222869459514764E-4
1064	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	6.219980874431181E-4
1065	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	6.202349529106147E-4
1066	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.CdataSection	6.200439023497386E-4
1067	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.AfterDoctypePublicKeyword	6.200439023497386E-4
1068	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.192711534402942E-4
1069	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	6.192711534402942E-4
1070	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	6.192711534402942E-4
1071	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.192711534402942E-4
1072	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	6.192711534402942E-4
1073	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	6.192711534402942E-4
1074	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(startTag)	6.188010577468294E-4
1075	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	6.16465827343746E-4
1076	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::resetInsertionMode()	6.161525124593488E-4
1077	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::insert(el)	6.160798091853739E-4
1078	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	6.123907427940216E-4
1079	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	6.113189404775297E-4
1080	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	6.080435140892967E-4
1081	org.jsoup.parser.Token::::69::::2152::::2215::::pendingAttributeValue.delete(0, pendingAttributeValue.length())::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());	6.03852254932898E-4
1082	org.jsoup.parser.Token::::69::::2152::::2215::::pendingAttributeValue.delete(0, pendingAttributeValue.length())::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	6.03852254932898E-4
1083	org.jsoup.parser.Token::::69::::2152::::2215::::pendingAttributeValue.delete(0, pendingAttributeValue.length())::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	6.03852254932898E-4
1084	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());	6.03852254932898E-4
1085	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.032732765524116E-4
1086	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	6.032732765524116E-4
1087	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	6.032732765524116E-4
1088	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	6.032732765524116E-4
1089	org.jsoup.parser.Token::::76::::2434::::2448::::newAttribute()::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	6.022001252843874E-4
1090	org.jsoup.parser.Token::::76::::2434::::2448::::newAttribute()::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	6.022001252843874E-4
1091	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::DELETE::::STATEMENT	6.008333333333333E-4
1092	org.jsoup.parser.Token::::61::::1759::::1989::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());	6.00561482450297E-4
1093	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	6.00561482450297E-4
1094	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	6.00561482450297E-4
1095	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	5.993366454554657E-4
1096	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::currentForm	5.977834276042214E-4
1097	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	5.968554757380243E-4
1098	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::closeCell(tb)	5.96016658762096E-4
1099	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	5.954095667093012E-4
1100	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	5.924025974025975E-4
1101	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	5.905639018251013E-4
1102	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::exitTableBody(t, tb)	5.831230726100364E-4
1103	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::currentForm	5.795875790847382E-4
1104	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.793587572736167E-4
1105	org.jsoup.parser.HtmlTreeBuilder::::152::::5114::::5269::::if (errors.canAddError())    errors.add(new org.jsoup.parser.ParseError(reader.pos(), "Unexpected token [%s] when in state [%s]", currentToken.tokenType(), state));::::INSERT::::STATEMENT::::resetInsertionMode()	5.791952794327418E-4
1106	org.jsoup.parser.Token::::65::::2007::::2032::::attributes.put(attribute)::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());	5.765390231522851E-4
1107	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::resetInsertionMode()	5.740005980031175E-4
1108	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::pop()	5.740005980031175E-4
1109	org.jsoup.parser.HtmlTreeBuilderState::::766::::38824::::38857::::java.lang.String name = t.asEndTag().name()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	5.726593461921E-4
1110	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	5.717677089181465E-4
1111	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::closeCell(tb)	5.713693533245657E-4
1112	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::insert(el)	5.712866319812702E-4
1113	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	5.617570367876052E-4
1114	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	5.602929483507424E-4
1115	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	5.602929483507424E-4
1116	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::closeCell(tb)	5.565268850657895E-4
1117	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	5.517702450224921E-4
1118	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	5.513180040979845E-4
1119	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	5.49808678578337E-4
1120	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	5.484827557301444E-4
1121	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::commonAncestor	5.461581788411441E-4
1122	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	5.430357142857142E-4
1123	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	5.415611402975533E-4
1124	org.jsoup.parser.ParseErrorList::::20::::449::::455::::maxSize::::org.jsoup.parser.ParseErrorList.INITIAL_CAPACITY	5.389390648312807E-4
1125	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::closeCell(tb)	5.381041089228639E-4
1126	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::commonAncestor	5.37653550380607E-4
1127	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	5.362429124910325E-4
1128	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::insert(el)	5.357483354818133E-4
1129	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::anythingElse(t, tb)	5.352253614561262E-4
1130	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::commonAncestor	5.352209173996525E-4
1131	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	5.344190953268073E-4
1132	org.jsoup.parser.TokeniserState::::748::::24962::::24988::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted::::org.jsoup.parser.TokeniserState.Doctype	5.314662020140616E-4
1133	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::commonAncestor	5.313432947720173E-4
1134	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.308038458059665E-4
1135	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.308038458059665E-4
1136	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::commonAncestor	5.305114084896945E-4
1137	org.jsoup.parser.HtmlTreeBuilderState::::669::::33334::::33338::::stack::::inputAttribs	5.304659141815061E-4
1138	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(startTag)	5.298502226367302E-4
1139	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	5.298502226367302E-4
1140	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::insertNode(el)	5.288797670782002E-4
1141	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	5.283464205939019E-4
1142	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	5.283464205939019E-4
1143	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.Character(prompt))	5.253613823905599E-4
1144	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	5.185936369584187E-4
1145	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	5.091455312747304E-4
1146	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	5.06237759498629E-4
1147	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	5.056004603486878E-4
1148	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	5.056004603486878E-4
1149	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	5.016993837291659E-4
1150	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	5.013147432611906E-4
1151	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	5.013147432611906E-4
1152	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	5.013147432611906E-4
1153	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	5.013147432611906E-4
1154	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	5.012637362637363E-4
1155	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	5.003576090707479E-4
1156	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	5.003576090707479E-4
1157	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::closeCell(tb)	5.003576090707479E-4
1158	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::remainingA	4.961143679665557E-4
1159	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::handleMissingTr(t, tb)	4.934118306700308E-4
1160	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	4.930443495664235E-4
1161	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	4.91485042412932E-4
1162	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	4.91485042412932E-4
1163	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::anythingElse(t, tb)	4.909091589851329E-4
1164	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	4.8377629023353626E-4
1165	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	4.82704289038432E-4
1166	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	4.809437184301759E-4
1167	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.809437184301759E-4
1168	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	4.809437184301759E-4
1169	org.jsoup.parser.HtmlTreeBuilder::::152::::5118::::5137::::errors.canAddError()::::INSERT::::STATEMENT::::pop()	4.8025435439808244E-4
1170	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	4.7676226964302323E-4
1171	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	4.7305855729482546E-4
1172	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	4.7269430051813464E-4
1173	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	4.715736201194605E-4
1174	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::remainingA	4.697135328220981E-4
1175	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	4.690852585038262E-4
1176	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	4.6881587965092564E-4
1177	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	4.6849059431750543E-4
1178	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	4.6410079331012213E-4
1179	org.jsoup.parser.HtmlTreeBuilder::::152::::5114::::5269::::if (errors.canAddError())    errors.add(new org.jsoup.parser.ParseError(reader.pos(), "Unexpected token [%s] when in state [%s]", currentToken.tokenType(), state));::::INSERT::::STATEMENT::::pop()	4.633562235461935E-4
1180	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::pop()	4.621143843445117E-4
1181	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.RCDATAEndTagName	4.615246251101649E-4
1182	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::pop()	4.6140289141392274E-4
1183	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	4.597480207932081E-4
1184	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	4.589277137490025E-4
1185	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	4.586611416481856E-4
1186	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	4.584743528939199E-4
1187	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::inputAttribs	4.5556562805019465E-4
1188	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.504455350887062E-4
1189	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	4.502927112116517E-4
1190	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::anythingElse(t, tb)	4.500635093391057E-4
1191	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	4.483653589621728E-4
1192	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	4.4707332348646123E-4
1193	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	4.4648605865494256E-4
1194	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	4.454512615653423E-4
1195	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	4.449095639595652E-4
1196	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	4.44301948051948E-4
1197	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::anyOtherEndTag(t, tb)	4.441155916843274E-4
1198	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::anythingElse(t, tb)	4.429787764595436E-4
1199	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::j	4.4241269181810784E-4
1200	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.406889892545986E-4
1201	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::j	4.360574776446005E-4
1202	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	4.338010461992724E-4
1203	org.jsoup.parser.Token::::65::::2007::::2032::::attributes.put(attribute)::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	4.324042673642139E-4
1204	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	4.322974073299481E-4
1205	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::if (el == null)    break;	4.311089780884553E-4
1206	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	4.2915463501749394E-4
1207	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	4.2915463501749394E-4
1208	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	4.280976038967612E-4
1209	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	4.2398276617471525E-4
1210	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	4.226896773439326E-4
1211	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	4.2017271157167524E-4
1212	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagName	4.153721625991484E-4
1213	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeStart	4.153721625991484E-4
1214	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	4.152567706188281E-4
1215	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.145453984702689E-4
1216	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36586::::commonAncestor.appendChild(lastNode)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	4.1382768376686915E-4
1217	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	4.1355198244523905E-4
1218	org.jsoup.parser.HtmlTreeBuilderState::::768::::38937::::38986::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	4.1284743562686286E-4
1219	org.jsoup.parser.HtmlTreeBuilderState::::767::::38871::::38923::::org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element> stack = tb.getStack()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	4.1284743562686286E-4
1220	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	4.0840550637010457E-4
1221	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::remainingA	4.0293344386832893E-4
1222	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::anythingElse(t, tb)	4.0245922795364514E-4
1223	org.jsoup.parser.TokeniserState::::888::::30055::::30818::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);        break;    case '/' :        t.transition(org.jsoup.parser.TokeniserState.SelfClosingStartTag);        break;    case '>' :        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    default :        t.error(this);        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);}::::INSERT::::STATEMENT::::anythingElse(t, r)	4.0238531425916655E-4
1224	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	4.021821843682744E-4
1225	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	4.021821843682744E-4
1226	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	4.021821843682744E-4
1227	org.jsoup.parser.HtmlTreeBuilderState::::715::::36106::::36119::::commonAncestor::::a	3.9931177363887037E-4
1228	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.9914315771750894E-4
1229	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.9730133261623227E-4
1230	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.9726781920311087E-4
1231	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	3.9693971113953416E-4
1232	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.955633984554685E-4
1233	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	3.939119170984455E-4
1234	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.939119170984455E-4
1235	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.9343063780320083E-4
1236	org.jsoup.parser.HtmlTreeBuilderState::::722::::36550::::36563::::commonAncestor::::a	3.922322514853805E-4
1237	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.914035235627532E-4
1238	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.910104570247113E-4
1239	org.jsoup.parser.HtmlTreeBuilderState::::773::::39194::::39237::::!(name.equals(tb.currentElement().nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.910104570247113E-4
1240	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	3.902919439086239E-4
1241	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::anythingElse(t, tb)	3.8702410196194965E-4
1242	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	3.8687788170396975E-4
1243	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::currentForm	3.8598227998749314E-4
1244	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	3.8526501375307727E-4
1245	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(startTag)	3.852650137530772E-4
1246	org.jsoup.parser.HtmlTreeBuilderState::::670::::33412::::33416::::stack::::inputAttribs	3.8423263146940794E-4
1247	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeEnd	3.8245698649610034E-4
1248	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	3.797188308900999E-4
1249	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	3.792003452615159E-4
1250	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.792003452615159E-4
1251	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.792003452615159E-4
1252	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.792003452615159E-4
1253	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	3.7920034526151583E-4
1254	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	3.7857155670704924E-4
1255	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(endTag)	3.7749825293167824E-4
1256	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	3.7594780219780223E-4
1257	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	3.749589743816013E-4
1258	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	3.742031884585075E-4
1259	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::if (el == null)    break;	3.7393681970396487E-4
1260	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::if (el == null)    break;	3.7271729271454727E-4
1261	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	3.7043442341384153E-4
1262	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	3.7043442341384153E-4
1263	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::replacement	3.6973342085038527E-4
1264	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::body	3.6926080615283226E-4
1265	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	3.6859145922555145E-4
1266	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.67545336065323E-4
1267	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.6677948231513593E-4
1268	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	3.6677948231513593E-4
1269	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	3.6662038190348975E-4
1270	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	3.65313082870368E-4
1271	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	3.652852852852852E-4
1272	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.651420739119434E-4
1273	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.651420739119434E-4
1274	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	3.639336129916663E-4
1275	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::if (el == null)    break;	3.634852723424659E-4
1276	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	3.633323067294674E-4
1277	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	3.6254555951528944E-4
1278	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.6022984870236565E-4
1279	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::anythingElse(t, tb)	3.590970966965006E-4
1280	org.jsoup.parser.HtmlTreeBuilder::::554::::18863::::18864::::el::::getFromStack("table")	3.587427984481503E-4
1281	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	3.565200000774381E-4
1282	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.54520725388601E-4
1283	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	3.544199730917798E-4
1284	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.5289769168660395E-4
1285	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::insert(el)	3.5258651138546685E-4
1286	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::if (el == null)    break;	3.516041406157118E-4
1287	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::if (el == null)    break;	3.516041406157118E-4
1288	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.502409215937066E-4
1289	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	3.49963793674134E-4
1290	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	3.49905360161138E-4
1291	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.451131837817524E-4
1292	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::node == formatEl	3.450831336975119E-4
1293	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	3.4477052485820556E-4
1294	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::form	3.4376127306650375E-4
1295	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.4247808311740896E-4
1296	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	3.4247808311740896E-4
1297	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::insertNode(el)	3.4187333820244844E-4
1298	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.414891460472021E-4
1299	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	3.412955708277896E-4
1300	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	3.410884446522744E-4
1301	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.3842646312301196E-4
1302	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	3.3752784968008883E-4
1303	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	3.350102820211516E-4
1304	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.342876136264636E-4
1305	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	3.3423599486271066E-4
1306	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	3.3272887551402127E-4
1307	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	3.3210280260942545E-4
1308	org.jsoup.parser.TokeniserState::::810::::27235::::27315::::if ((value.length()) > 0)    t.tagPending.appendAttributeValue(value);::::INSERT::::STATEMENT::::anythingElse(t, r)	3.318172808586052E-4
1309	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.318003021038263E-4
1310	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.318003021038263E-4
1311	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::isElementInQueue(formattingElements, el)	3.312693299999688E-4
1312	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.310621470134953E-4
1313	org.jsoup.parser.HtmlTreeBuilderState::::652::::32311::::32339::::return anyOtherEndTag(t, tb)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.310621470134953E-4
1314	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	3.308415859561912E-4
1315	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.291125541125541E-4
1316	org.jsoup.parser.HtmlTreeBuilderState::::414::::18792::::18826::::tb.pushActiveFormattingElements(a)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.291125541125541E-4
1317	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	3.289412204466872E-4
1318	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	3.2719471724096925E-4
1319	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.2685390301221307E-4
1320	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.26290302295687E-4
1321	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	3.2570444085389734E-4
1322	org.jsoup.parser.Token::::69::::2152::::2215::::pendingAttributeValue.delete(0, pendingAttributeValue.length())::::INSERT::::STATEMENT::::newAttribute()	3.253569644314215E-4
1323	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.24001701720283E-4
1324	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::closeCell(tb)	3.225175268223575E-4
1325	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::currentForm	3.200841402739193E-4
1326	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::currentForm	3.196866409922327E-4
1327	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	3.19648947511572E-4
1328	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	3.1962462462462455E-4
1329	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::currentForm	3.1923878802122543E-4
1330	org.jsoup.parser.HtmlTreeBuilderState::::672::::33534::::33538::::stack::::inputAttribs	3.1858170876073496E-4
1331	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	3.1823695873155195E-4
1332	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	3.1699618992222286E-4
1333	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	3.1643235907508326E-4
1334	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.15958772911806E-4
1335	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.1512953367875644E-4
1336	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	3.143824134129737E-4
1337	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::if (el == null)    break;	3.139322684068856E-4
1338	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.136589468022886E-4
1339	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	3.127235056692175E-4
1340	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	3.1065626612377837E-4
1341	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.0896637023318285E-4
1342	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	3.0873808229487135E-4
1343	org.jsoup.parser.Token::::69::::2152::::2215::::pendingAttributeValue.delete(0, pendingAttributeValue.length())::::DELETE::::STATEMENT	3.085595151003682E-4
1344	org.jsoup.parser.Token::::76::::2434::::2448::::newAttribute()::::DELETE::::STATEMENT	3.0771530143872664E-4
1345	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::remainingA	3.0771365099002923E-4
1346	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.0748806224163656E-4
1347	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	3.069898099901873E-4
1348	org.jsoup.parser.Token::::65::::2007::::2032::::attributes.put(attribute)::::DELETE::::STATEMENT	3.068779793385289E-4
1349	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	3.062183194648673E-4
1350	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.061953713970108E-4
1351	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::resetInsertionMode()	3.061336522683293E-4
1352	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::second	3.0599439703594164E-4
1353	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	3.05029252440728E-4
1354	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.0473032177310167E-4
1355	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::resetInsertionMode()	3.046862037233441E-4
1356	org.jsoup.parser.HtmlTreeBuilder::::254::::8984::::8996::::return stack::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	3.0378249261091625E-4
1357	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.0354213204787905E-4
1358	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::body	3.0285481488417145E-4
1359	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.0272616275556685E-4
1360	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	3.0153847114945383E-4
1361	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.015092538190364E-4
1362	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagOpen	3.0050191796122174E-4
1363	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	2.99778024386921E-4
1364	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	2.957790585740195E-4
1365	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	2.953368684700777E-4
1366	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.941685127109918E-4
1367	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.8818387896189254E-4
1368	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::closeCell(tb)	2.8672937449536576E-4
1369	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	2.856312322668834E-4
1370	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	2.847383314966517E-4
1371	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.8440025894613686E-4
1372	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	2.7979282276112627E-4
1373	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::anyOtherEndTag(t, tb)	2.790982343949849E-4
1374	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.788509817349154E-4
1375	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.7847985347985346E-4
1376	org.jsoup.parser.HtmlTreeBuilderState::::413::::18735::::18766::::org.jsoup.nodes.Element a = tb.insert(startTag)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.7847985347985346E-4
1377	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::closeCell(tb)	2.777157443316711E-4
1378	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemKeyword	2.7691477506609893E-4
1379	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	2.757383419689119E-4
1380	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"html"	2.7527861106914E-4
1381	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	2.7436929642510636E-4
1382	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStartDash	2.7318356178292885E-4
1383	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.ScriptDataEndTagName	2.7318356178292885E-4
1384	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.RawtextEndTagOpen	2.7318356178292885E-4
1385	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.RawtextEndTagName	2.7318356178292885E-4
1386	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.RCDATAEndTagOpen	2.7318356178292885E-4
1387	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CommentStart	2.7318356178292885E-4
1388	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.729443084138577E-4
1389	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::isElementInQueue(stack, el)	2.7103854272724723E-4
1390	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::closeCell(tb)	2.7014582200801245E-4
1391	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	2.672707569392054E-4
1392	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::anythingElse(t, tb)	2.669701934292512E-4
1393	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	2.669457383757391E-4
1394	org.jsoup.parser.Token::::132::::4003::::4097::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	2.668689223928677E-4
1395	org.jsoup.parser.Token::::132::::4003::::4097::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	2.668689223928677E-4
1396	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::html	2.6560865003975653E-4
1397	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::remainingA	2.655318536952413E-4
1398	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.637089323036457E-4
1399	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::second	2.62119956741856E-4
1400	org.jsoup.parser.Token::::65::::2007::::2016::::attributes::::new org.jsoup.nodes.Attributes()	2.6197608065191367E-4
1401	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.6112190315315313E-4
1402	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::remainingA	2.6077204078233E-4
1403	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(endTag)	2.6049168543531924E-4
1404	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.6018220651215397E-4
1405	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::body	2.598694308396245E-4
1406	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(startTag)	2.59610521923763E-4
1407	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	2.5937844439796883E-4
1408	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::remainingA	2.592892219463257E-4
1409	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	2.591716430925628E-4
1410	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	2.5885647357647433E-4
1411	org.jsoup.parser.TokeniserState::::811::::27275::::27315::::t.tagPending.appendAttributeValue(value)::::INSERT::::STATEMENT::::anythingElse(t, r)	2.586757078826668E-4
1412	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::remainingA	2.579731216626602E-4
1413	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.578487338080091E-4
1414	org.jsoup.parser.Token::::118::::3596::::3632::::pendingAttributeValue.append(append)::::INSERT::::STATEMENT::::newAttribute()	2.5765446208718575E-4
1415	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	2.572817352457261E-4
1416	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	2.569455591523277E-4
1417	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.568585623380567E-4
1418	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.568433425020515E-4
1419	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(startTag)	2.560427461139896E-4
1420	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.560427461139896E-4
1421	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"<"	2.542176015032023E-4
1422	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	2.536179470718172E-4
1423	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::body	2.531037833502534E-4
1424	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	2.528002301743439E-4
1425	org.jsoup.parser.HtmlTreeBuilderState::::773::::39190::::39278::::if (!(name.equals(tb.currentElement().nodeName())))    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	2.528002301743439E-4
1426	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	2.510725292459202E-4
1427	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::closeCell(tb)	2.509271574418309E-4
1428	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	2.507672087772095E-4
1429	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	2.505879923093634E-4
1430	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.5017880453537397E-4
1431	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.5017880453537397E-4
1432	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.5017880453537397E-4
1433	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	2.5017880453537397E-4
1434	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	2.483557425797833E-4
1435	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	2.4612833681673593E-4
1436	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemKeyword	2.4586520560463597E-4
1437	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	2.444176484834398E-4
1438	org.jsoup.parser.HtmlTreeBuilder::::369::::12099::::12131::::int i = stack.lastIndexOf(after)::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	2.4378255059127825E-4
1439	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	2.429734153992776E-4
1440	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	2.4267794397794462E-4
1441	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::form	2.4242553837044084E-4
1442	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	2.398224195095368E-4
1443	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.39437788787919E-4
1444	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::currentForm	2.3832654825294643E-4
1445	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	2.370108130748539E-4
1446	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag(name))	2.3686164889830797E-4
1447	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::resetInsertionMode()	2.3623644095622774E-4
1448	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	2.3617583100341716E-4
1449	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::second	2.361620441665359E-4
1450	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.3545368214321867E-4
1451	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18155::::tb.getActiveFormattingElement("a")::::DELETE::::INFIX	2.3508333333333335E-4
1452	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	2.345426292519131E-4
1453	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::if (isSameFormattingElement(in, el))    numSeen++;	2.3440276041047453E-4
1454	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.3212672902238183E-4
1455	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.3158911016933384E-4
1456	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	2.315535617211535E-4
1457	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagOpen	2.3076231255508245E-4
1458	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeEnd	2.3076231255508245E-4
1459	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CdataSection	2.3076231255508245E-4
1460	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.AfterDoctypePublicKeyword	2.3076231255508245E-4
1461	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::j	2.3071444800448437E-4
1462	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.306160466812274E-4
1463	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::j	2.3036119772207645E-4
1464	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::j	2.2991086595029143E-4
1465	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::html	2.2974459992265917E-4
1466	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	2.2971583504082687E-4
1467	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::j	2.2931705695279864E-4
1468	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::second	2.29249448811735E-4
1469	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	2.2866633307070812E-4
1470	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::j	2.2849820937351754E-4
1471	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.2832067679398E-4
1472	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.2830330330330328E-4
1473	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	2.2749138215833316E-4
1474	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::if (isSameFormattingElement(in, el))    numSeen++;	2.2603123325295763E-4
1475	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.252227675443531E-4
1476	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.2497538462896074E-4
1477	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	2.244683806377901E-4
1478	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.240846553074814E-4
1479	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::if (isSameFormattingElement(in, el))    numSeen++;	2.237480894827257E-4
1480	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	2.230868102023683E-4
1481	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	2.230868102023683E-4
1482	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::i++	2.2153615455666818E-4
1483	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(startTag)	2.214790197806502E-4
1484	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::commonAncestor	2.213387600051373E-4
1485	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::if (next == element) {    return true;}	2.1981523105205682E-4
1486	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23272::::next.nodeName().equals(nodeName)::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	2.1941007167526277E-4
1487	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.187273710463338E-4
1488	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.CdataSection	2.1854684942634306E-4
1489	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.AfterDoctypePublicKeyword	2.1854684942634306E-4
1490	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	2.182072627474976E-4
1491	org.jsoup.parser.Token::::69::::2152::::2215::::pendingAttributeValue.delete(0, pendingAttributeValue.length())::::INSERT::::STATEMENT::::ensureAttributeValue()	2.1690464295428098E-4
1492	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::i++	2.1657722045542098E-4
1493	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	2.1562977161593364E-4
1494	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	2.147947488863598E-4
1495	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::i++	2.1298111812599886E-4
1496	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.122900176552227E-4
1497	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.1057696001270727E-4
1498	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.1032088478088536E-4
1499	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::i++	2.1025391267716532E-4
1500	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	2.1014455295622397E-4
1501	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	2.1008635578583762E-4
1502	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	2.0991364490540747E-4
1503	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	2.095663974628308E-4
1504	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::i++	2.081146319171907E-4
1505	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(startTag)	2.0756425163089088E-4
1506	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::html	2.0648636434497756E-4
1507	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	2.0633481371823336E-4
1508	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	2.0596129767496676E-4
1509	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.0525798216832543E-4
1510	org.jsoup.parser.HtmlTreeBuilder::::265::::9336::::9342::::element::::headElement	2.0488587993418582E-4
1511	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.0393421551663008E-4
1512	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::html	2.0287543564663724E-4
1513	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.0280619109306207E-4
1514	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	2.0280619109306207E-4
1515	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.9968064419500595E-4
1516	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(startTag)	1.98650945684593E-4
1517	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.9701051839645994E-4
1518	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	1.9701051839645994E-4
1519	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::if (el == null)    break;	1.968080056791851E-4
1520	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::remainingA	1.9627236155308355E-4
1521	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.9534102347929397E-4
1522	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.9513665488411547E-4
1523	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.9508018751542065E-4
1524	org.jsoup.parser.Token::::61::::1759::::1989::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	1.9429930314568435E-4
1525	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.9409184404984572E-4
1526	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.9407257527488298E-4
1527	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.9405780780780776E-4
1528	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.9338655035600682E-4
1529	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.9294651570463E-4
1530	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	1.9188161928544584E-4
1531	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.9142196491505418E-4
1532	org.jsoup.parser.TokeniserState::::816::::27437::::27462::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted::::org.jsoup.parser.TokeniserState.Doctype	1.9122849324805017E-4
1533	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.8982555433110114E-4
1534	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.8940039708886938E-4
1535	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.8874912646583918E-4
1536	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"html"	1.8873782441949886E-4
1537	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.8819536808137318E-4
1538	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23244::::next::::getFromStack("table")	1.8771903886221242E-4
1539	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.8763410340153047E-4
1540	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.8763410340153047E-4
1541	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.8763410340153047E-4
1542	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.8710816062176164E-4
1543	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.867951581833102E-4
1544	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.859182653893837E-4
1545	org.jsoup.parser.Token::::117::::3560::::3582::::ensureAttributeValue()::::DELETE::::STATEMENT	1.8577202856930372E-4
1546	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.8514382955444743E-4
1547	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"script"	1.8488552836596535E-4
1548	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::resetInsertionMode()	1.846868833005569E-4
1549	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::if (el == null)    break;	1.8461787700020635E-4
1550	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStartDash	1.8460985004406597E-4
1551	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.ScriptDataEndTagName	1.8460985004406597E-4
1552	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.RawtextEndTagOpen	1.8460985004406597E-4
1553	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.RawtextEndTagName	1.8460985004406597E-4
1554	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.RCDATAEndTagOpen	1.8460985004406597E-4
1555	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.Doctype	1.8460985004406597E-4
1556	org.jsoup.parser.TokeniserState::::661::::22044::::22063::::org.jsoup.parser.TokeniserState.BeforeAttributeValue::::org.jsoup.parser.TokeniserState.CommentStart	1.8460985004406597E-4
1557	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.8429572961277572E-4
1558	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.842957296127757E-4
1559	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.8424244979195112E-4
1560	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.8193494135233492E-4
1561	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::i--	1.8182004507441354E-4
1562	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.8163733232882164E-4
1563	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.815488235919367E-4
1564	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	1.8115567647986942E-4
1565	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::i--	1.8036984918844086E-4
1566	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.8011492435118283E-4
1567	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::if (el == null)    break;	1.8010104424631706E-4
1568	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::i--	1.7931820125418962E-4
1569	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.7867478069605728E-4
1570	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::i--	1.785206544343789E-4
1571	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(startTag)	1.7818050462613692E-4
1572	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.7818050462613692E-4
1573	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(startTag)	1.7796382558382608E-4
1574	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.7796382558382608E-4
1575	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::i--	1.778950409267754E-4
1576	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::form	1.7788829300855954E-4
1577	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::this.tagName	1.7784867909688458E-4
1578	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	1.7722000065610778E-4
1579	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.772099865458899E-4
1580	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::remainingA	1.7709683592966196E-4
1581	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.7663723923825998E-4
1582	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.7659401872994598E-4
1583	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.7632719171588117E-4
1584	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.7591865099401323E-4
1585	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.7576536561398715E-4
1586	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	1.754985810922747E-4
1587	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"html"	1.7463444685124067E-4
1588	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.745840346310284E-4
1589	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.7432208160651365E-4
1590	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.7366517129086516E-4
1591	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.7366517129086516E-4
1592	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.7366517129086516E-4
1593	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.7307624071365106E-4
1594	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.7128462500958964E-4
1595	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::form	1.7083435485645525E-4
1596	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	1.70742449276932E-4
1597	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::insert(el)	1.701632000102685E-4
1598	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.6876392484004441E-4
1599	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::pop()	1.6874031496873413E-4
1600	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.6872905505343333E-4
1601	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.6765249630742296E-4
1602	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.Comment	1.6760283667293863E-4
1603	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	1.6749313617450101E-4
1604	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.6749313617450101E-4
1605	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::currentForm	1.6737599377528137E-4
1606	org.jsoup.parser.Token::::118::::3625::::3630::::append::::data	1.6723184317766004E-4
1607	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.6711799743135533E-4
1608	org.jsoup.parser.HtmlTreeBuilderState::::771::::39085::::39112::::node.nodeName().equals(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.667858696902493E-4
1609	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	1.6675130077893762E-4
1610	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::form	1.665053203892079E-4
1611	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	1.6522922378900637E-4
1612	org.jsoup.parser.Token::::65::::2007::::2032::::attributes.put(attribute)::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	1.6472543518636717E-4
1613	org.jsoup.parser.HtmlTreeBuilder::::661::::23237::::23302::::if (next.nodeName().equals(nodeName))    return next;::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.6375723643552163E-4
1614	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.634457634103964E-4
1615	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.6336220254804183E-4
1616	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::body	1.6309210823241884E-4
1617	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.6248871031566728E-4
1618	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"html"	1.62348659532946E-4
1619	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::body	1.617789926614246E-4
1620	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"html"	1.6162834439483552E-4
1621	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::currentForm	1.6079268278058195E-4
1622	org.jsoup.parser.ParseErrorList::::20::::440::::445::::size()::::DELETE::::INFIX	1.604810829771768E-4
1623	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BogusDoctype	1.5953655782931594E-4
1624	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.5916449375648814E-4
1625	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.584224268333011E-4
1626	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.5795977591214353E-4
1627	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.5795977591214353E-4
1628	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag(name))	1.5760841471716797E-4
1629	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.5748276924027252E-4
1630	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	1.5674992292109727E-4
1631	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.563609652959829E-4
1632	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::resetInsertionMode()	1.5635797398416178E-4
1633	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::anythingElse(t, tb)	1.5596175307916078E-4
1634	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::if (el == null)    break;	1.5575546238242227E-4
1635	org.jsoup.parser.HtmlTreeBuilder::::656::::23018::::23080::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::resetInsertionMode()	1.5483249385737262E-4
1636	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.5388316308620915E-4
1637	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.536960311860316E-4
1638	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::pop()	1.5306682613416465E-4
1639	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::pop()	1.5234310186167205E-4
1640	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	1.5217248546594956E-4
1641	org.jsoup.parser.Token::::69::::2152::::2215::::pendingAttributeValue.delete(0, pendingAttributeValue.length())::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	1.5096306373322448E-4
1642	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	1.50775741853072E-4
1643	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::closeCell(tb)	1.501485116962354E-4
1644	org.jsoup.parser.TokeniserState::::732::::24435::::25930::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        break;    case '"' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted);        break;    case '&' :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted);        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '>' :        t.error(this);        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '<' :    case '=' :    case '`' :        t.error(this);        t.tagPending.appendAttributeValue(c);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    default :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);}::::INSERT::::STATEMENT::::anythingElse(t, r)	1.4953723628813637E-4
1645	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::isElementInQueue(formattingElements, el)	1.4894055286481414E-4
1646	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.4885586110645585E-4
1647	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::second	1.4876400374517964E-4
1648	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(startTag)	1.487245401349122E-4
1649	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.487245401349122E-4
1650	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.4821625394169648E-4
1651	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.4821625394169648E-4
1652	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.481339758291623E-4
1653	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::if (next == element) {    return true;}	1.474747287856638E-4
1654	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::exitTableBody(t, tb)	1.4655814525582807E-4
1655	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::closeCell(tb)	1.463101406365655E-4
1656	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	1.4592078673169133E-4
1657	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.4587330738446354E-4
1658	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.4516071801790089E-4
1659	org.jsoup.parser.Token::::117::::3560::::3582::::ensureAttributeValue()::::INSERT::::STATEMENT::::newAttribute()	1.4493063492404198E-4
1660	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.4365807258868808E-4
1661	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.4339200727214312E-4
1662	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::j++	1.43127709498993E-4
1663	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.421169893389848E-4
1664	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.4196433376514344E-4
1665	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.4174885395914496E-4
1666	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.417087197672304E-4
1667	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	1.3995160939632437E-4
1668	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.3966722770482275E-4
1669	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	1.3959236010840592E-4
1670	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::body	1.3947294294322786E-4
1671	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::body	1.3925467362095066E-4
1672	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::body	1.3906094508851676E-4
1673	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.3896722809766287E-4
1674	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::currentForm	1.384015414972611E-4
1675	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.3782950102449613E-4
1676	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::currentForm	1.3722763900235593E-4
1677	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.36992406076388E-4
1678	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.3698198198198197E-4
1679	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::j++	1.368964337085747E-4
1680	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::currentForm	1.3626836417390123E-4
1681	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::remainingA	1.3557443683862803E-4
1682	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.3548736133842516E-4
1683	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::currentForm	1.3546978579724432E-4
1684	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.3454496122469641E-4
1685	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.3434496648450907E-4
1686	org.jsoup.parser.HtmlTreeBuilder::::152::::5114::::5269::::if (errors.canAddError())    errors.add(new org.jsoup.parser.ParseError(reader.pos(), "Unexpected token [%s] when in state [%s]", currentToken.tokenType(), state));::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.3367684915496775E-4
1687	org.jsoup.parser.HtmlTreeBuilder::::662::::23291::::23302::::return next::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.3361510775096135E-4
1688	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.3356106135389655E-4
1689	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::if (el == null)    break;	1.32477929428695E-4
1690	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.3185446615182283E-4
1691	org.jsoup.parser.HtmlTreeBuilderState::::693::::34800::::34837::::!(tb.isInActiveFormattingElements(node))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.3185446615182283E-4
1692	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.3174778128150798E-4
1693	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.3174778128150798E-4
1694	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	1.3152208058646932E-4
1695	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23272::::next.nodeName().equals(nodeName)::::INSERT::::STATEMENT::::resetInsertionMode()	1.3135404913073356E-4
1696	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.3123642262780028E-4
1697	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.3108565744380778E-4
1698	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::remainingA	1.3070021812060668E-4
1699	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::closeCell(tb)	1.3028177634155893E-4
1700	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::html	1.2877989032916053E-4
1701	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.28443921025606E-4
1702	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.28443921025606E-4
1703	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::second	1.2802536079578925E-4
1704	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.2792323736276055E-4
1705	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::second	1.279010131087963E-4
1706	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::second	1.2779064627088535E-4
1707	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::second	1.2766291444199143E-4
1708	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.2696628663193913E-4
1709	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::remainingA	1.2671716557163134E-4
1710	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"body"	1.255101713303742E-4
1711	org.jsoup.parser.Token::::118::::3625::::3630::::append::::this.data	1.2542388238324503E-4
1712	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.2496541426220984E-4
1713	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.2496541426220984E-4
1714	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::closeCell(tb)	1.2426250644951135E-4
1715	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.2380092214527033E-4
1716	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.237359065284597E-4
1717	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	1.2351354495141373E-4
1718	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::remainingA	1.234013487229562E-4
1719	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	1.2306043103687842E-4
1720	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(startTag)	1.2282829986130073E-4
1721	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.2282829986130073E-4
1722	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.2255319811632726E-4
1723	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.224521341542618E-4
1724	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.2189127529563912E-4
1725	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.2168371465583724E-4
1726	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.2130858151727011E-4
1727	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::closeCell(tb)	1.2107914678468637E-4
1728	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.2051428880595903E-4
1729	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.1998687180211241E-4
1730	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.1995065423166143E-4
1731	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.1995065423166143E-4
1732	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.1991120975476842E-4
1733	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::handleMissingTr(t, tb)	1.199112097547684E-4
1734	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	1.1961498925334081E-4
1735	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.193964267863666E-4
1736	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	1.1932499631967714E-4
1737	org.jsoup.parser.Token::::118::::3596::::3632::::pendingAttributeValue.append(append)::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	1.1893203513766782E-4
1738	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::resetInsertionMode()	1.1890927404227612E-4
1739	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.1724519532215071E-4
1740	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.1674697386456886E-4
1741	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::form	1.1658761244054796E-4
1742	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.1610123013246318E-4
1743	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.158302985275838E-4
1744	org.jsoup.parser.HtmlTreeBuilderState::::769::::39000::::39554::::while (it.hasNext()) {    org.jsoup.nodes.Element node = it.next();    if (node.nodeName().equals(name)) {        tb.generateImpliedEndTags(name);        if (!(name.equals(tb.currentElement().nodeName())))            tb.error(this);        tb.popStackToClose(name);        break;    }else {        if (tb.isSpecial(node)) {            tb.error(this);            return false;        }    }} ::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.1577678086057674E-4
1745	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.1575561312607944E-4
1746	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::if (el == null)    break;	1.1537010863953044E-4
1747	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::currentForm	1.1516106768321089E-4
1748	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.1455199646689008E-4
1749	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.143529836044903E-4
1750	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.141802061310019E-4
1751	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.1395312152007835E-4
1752	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.1338759385299621E-4
1753	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.133875938529962E-4
1754	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.132497071897075E-4
1755	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.1316763980223357E-4
1756	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.1270530353930514E-4
1757	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.125462620281273E-4
1758	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.1204232765374068E-4
1759	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::html	1.1196630480708027E-4
1760	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::html	1.1196533960423673E-4
1761	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::html	1.1196425213318705E-4
1762	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.1176833087161531E-4
1763	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::html	1.107477886655641E-4
1764	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.1069910499666558E-4
1765	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.1060604658924783E-4
1766	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.0991860894187105E-4
1767	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.0816330191629977E-4
1768	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	1.0764577752902671E-4
1769	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	1.0678278823073534E-4
1770	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.0662280376147683E-4
1771	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.0662280376147683E-4
1772	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(startTag)	1.066113186865611E-4
1773	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.0607898624385064E-4
1774	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.0607898624385064E-4
1775	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::form	1.0590686632990167E-4
1776	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.0584139837319173E-4
1777	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.0546683812641256E-4
1778	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::closeCell(tb)	1.0528848000635363E-4
1779	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::closeCell(tb)	1.0516044239044268E-4
1780	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.0504317789291881E-4
1781	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.0455298226742954E-4
1782	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.045015866507998E-4
1783	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.SelfClosingStartTag	1.0435944418305635E-4
1784	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	1.036363496175672E-4
1785	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.03626588284591E-4
1786	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.0350373595386748E-4
1787	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.0348155940824306E-4
1788	org.jsoup.parser.HtmlTreeBuilderState::::691::::34680::::34695::::tb.onStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.0348155940824306E-4
1789	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.0328484858914468E-4
1790	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::anythingElse(t, tb)	1.0326040448767381E-4
1791	org.jsoup.parser.HtmlTreeBuilderState::::730::::37116::::37122::::adopter::::a	1.031008148571551E-4
1792	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.0259917048471445E-4
1793	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::resetInsertionMode()	1.0204455075610976E-4
1794	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.0126857180349016E-4
1795	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::si - 1	1.0122762873892514E-4
1796	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.0049588170470062E-4
1797	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	9.995887852638451E-5
1798	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	9.881083596113099E-5
1799	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::exitTableBody(t, tb)	9.850525919822998E-5
1800	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	9.805617090366391E-5
1801	org.jsoup.parser.HtmlTreeBuilderState::::669::::33334::::33338::::stack::::new org.jsoup.nodes.Attributes()	9.797523480924918E-5
1802	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	9.70193910296276E-5
1803	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	9.662691590883838E-5
1804	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::remainingA	9.659229803079724E-5
1805	org.jsoup.parser.Token::::65::::2007::::2032::::attributes.put(attribute)::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	9.608983719204753E-5
1806	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(startTag)	9.469371779608387E-5
1807	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	9.464288917676231E-5
1808	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	9.45650488303008E-5
1809	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	9.44992359727633E-5
1810	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	9.42421344610785E-5
1811	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	9.415672538205629E-5
1812	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	9.409768404068659E-5
1813	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	9.376110416418982E-5
1814	org.jsoup.parser.HtmlTreeBuilderState::::734::::37478::::37484::::adopter::::a	9.351306564844592E-5
1815	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	9.346764145949121E-5
1816	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	9.33975790916551E-5
1817	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AttributeName	9.265235465515258E-5
1818	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	9.259104559921286E-5
1819	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	9.257191477722372E-5
1820	org.jsoup.parser.TokeniserState::::809::::27171::::27221::::java.lang.String value = r.consumeToAny('\'', '&', org.jsoup.parser.TokeniserState.nullChar)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	9.255234073535476E-5
1821	org.jsoup.parser.TokeniserState::::809::::27171::::27221::::java.lang.String value = r.consumeToAny('\'', '&', org.jsoup.parser.TokeniserState.nullChar)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	9.255234073535476E-5
1822	org.jsoup.parser.TokeniserState::::809::::27171::::27221::::java.lang.String value = r.consumeToAny('\'', '&', org.jsoup.parser.TokeniserState.nullChar)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	9.255234073535476E-5
1823	org.jsoup.parser.TokeniserState::::809::::27171::::27221::::java.lang.String value = r.consumeToAny('\'', '&', org.jsoup.parser.TokeniserState.nullChar)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	9.255234073535476E-5
1824	org.jsoup.parser.TokeniserState::::809::::27171::::27221::::java.lang.String value = r.consumeToAny('\'', '&', org.jsoup.parser.TokeniserState.nullChar)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	9.255234073535476E-5
1825	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::body	9.240119450933305E-5
1826	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	9.214786480638786E-5
1827	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	9.201781042820422E-5
1828	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::form	9.190403520627256E-5
1829	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	9.179925780211293E-5
1830	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::form	9.113340000381062E-5
1831	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::form	9.044941003555815E-5
1832	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	9.003700962250184E-5
1833	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	9.001650826976905E-5
1834	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	8.993340731607632E-5
1835	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::body	8.960446388072183E-5
1836	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	8.932967262640055E-5
1837	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	8.926637070085429E-5
1838	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::notIgnored	8.904028977534192E-5
1839	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	8.901132274119001E-5
1840	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"]]>"	8.79800100500111E-5
1841	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::closeCell(tb)	8.788268280699357E-5
1842	org.jsoup.parser.HtmlTreeBuilderState::::675::::33759::::33760::::el::::a	8.783890703234091E-5
1843	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	8.776609556302479E-5
1844	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	8.756023039842664E-5
1845	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	8.75154656507367E-5
1846	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	8.716104080325682E-5
1847	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::si - 1	8.702497716964717E-5
1848	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BeforeAttributeName	8.657387474835E-5
1849	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	8.645948146598962E-5
1850	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	8.645948146598962E-5
1851	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	8.639054769752093E-5
1852	org.jsoup.parser.HtmlTreeBuilderState::::728::::36935::::36941::::adopter::::a	8.63299726155903E-5
1853	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	8.62854675548976E-5
1854	org.jsoup.parser.HtmlTreeBuilder::::656::::23018::::23080::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::pop()	8.601805214298478E-5
1855	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"body"	8.597779260303456E-5
1856	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	8.484931350251499E-5
1857	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	8.45645171092126E-5
1858	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	8.440969652109548E-5
1859	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	8.44096935107191E-5
1860	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	8.401484702470722E-5
1861	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	8.387312844759651E-5
1862	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	8.325625897636766E-5
1863	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::notIgnored	8.279356075849142E-5
1864	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::body	8.278574314489752E-5
1865	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::pop()	8.25222640471965E-5
1866	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::currentForm	8.230170476486331E-5
1867	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	8.200883644865785E-5
1868	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::currentForm	8.156638536872474E-5
1869	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	8.08976484476492E-5
1870	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	8.026354453189108E-5
1871	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	8.020003605032238E-5
1872	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	7.996710282110763E-5
1873	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(startTag)	7.949513547917803E-5
1874	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::DELETE::::STATEMENT	7.944588864357497E-5
1875	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"body"	7.910590022836224E-5
1876	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::new org.jsoup.nodes.Attributes()	7.890794055947295E-5
1877	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23272::::next.nodeName().equals(nodeName)::::INSERT::::STATEMENT::::pop()	7.881242947844013E-5
1878	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::handleMissingTr(t, tb)	7.880420735858398E-5
1879	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	7.878240500153566E-5
1880	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	7.87644447360479E-5
1881	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	7.855078629014798E-5
1882	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	7.852064512625034E-5
1883	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	7.829936694886103E-5
1884	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	7.818048264799145E-5
1885	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	7.816346354810048E-5
1886	org.jsoup.parser.Token::::65::::2007::::2016::::attributes::::this.attributes	7.810467000802394E-5
1887	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	7.798839880129915E-5
1888	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::form	7.79144397253103E-5
1889	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	7.78491078262774E-5
1890	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	7.77968321582452E-5
1891	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	7.749065394219928E-5
1892	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	7.731755670498814E-5
1893	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	7.714314637569802E-5
1894	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::second	7.67740451221406E-5
1895	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(startTag)	7.663514020356146E-5
1896	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	7.629541949244859E-5
1897	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::pendingAttributeValue = new java.lang.StringBuilder()	7.600578346993814E-5
1898	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::pendingAttributeName = null	7.600578346993814E-5
1899	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	7.548049969253063E-5
1900	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	7.515849810991576E-5
1901	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::second	7.50848250764454E-5
1902	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	7.506710050485146E-5
1903	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	7.503084135208486E-5
1904	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	7.459461286993782E-5
1905	org.jsoup.parser.Token::::61::::1759::::1989::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	7.437293900313276E-5
1906	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::pop()	7.431829627642257E-5
1907	org.jsoup.parser.Token::::118::::3596::::3632::::pendingAttributeValue.append(append)::::DELETE::::STATEMENT	7.43088114277215E-5
1908	org.jsoup.parser.HtmlTreeBuilder::::664::::23322::::23333::::return null::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	7.42192935333251E-5
1909	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())	7.419238037475925E-5
1910	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	7.415200419003541E-5
1911	org.jsoup.parser.Token::::132::::4003::::4097::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	7.413025622024102E-5
1912	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"body"	7.406148838733888E-5
1913	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"body"	7.365814945294713E-5
1914	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	7.351299114661882E-5
1915	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	7.327907262791403E-5
1916	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	7.318708758720068E-5
1917	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::closeCell(tb)	7.258035900895044E-5
1918	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	7.19050695014525E-5
1919	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(startTag)	7.188662434782535E-5
1920	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	7.120516825948155E-5
1921	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"p"	7.11995929908638E-5
1922	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	7.11792453959325E-5
1923	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	7.096711733043732E-5
1924	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::remainingA	7.092115025054578E-5
1925	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	7.081834565264617E-5
1926	org.jsoup.parser.HtmlTreeBuilder::::661::::23237::::23302::::if (next.nodeName().equals(nodeName))    return next;::::INSERT::::STATEMENT::::resetInsertionMode()	7.058621630055581E-5
1927	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	7.034143303708541E-5
1928	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::second	7.020624567211599E-5
1929	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	7.019943243690989E-5
1930	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::org.jsoup.parser.TokeniserState.replacementStr	7.012899351812479E-5
1931	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	7.004818431874132E-5
1932	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	6.997121496846917E-5
1933	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	6.997121496846917E-5
1934	org.jsoup.parser.HtmlTreeBuilderState::::670::::33412::::33416::::stack::::new org.jsoup.nodes.Attributes()	6.989509521416749E-5
1935	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	6.970043307502868E-5
1936	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	6.9533551231907E-5
1937	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::remainingA	6.952294164296041E-5
1938	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::form	6.929265088358996E-5
1939	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	6.91108986047909E-5
1940	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	6.901115937391232E-5
1941	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::org.jsoup.parser.TokeniserState.replacementStr	6.900192040801208E-5
1942	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	6.899245128621463E-5
1943	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	6.8496203038194E-5
1944	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	6.849099099099099E-5
1945	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	6.841629908028096E-5
1946	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::j++	6.807342487586043E-5
1947	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	6.779536348971677E-5
1948	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.767862676990304E-5
1949	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::currentForm	6.767276490389735E-5
1950	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	6.760206369768736E-5
1951	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	6.751238120232677E-5
1952	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(startTag)	6.749945426625951E-5
1953	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.725299940445467E-5
1954	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	6.696030633299476E-5
1955	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	6.67425483573128E-5
1956	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::resetInsertionMode()	6.665010706448153E-5
1957	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::j++	6.653396285934166E-5
1958	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::resetInsertionMode()	6.635040317850955E-5
1959	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	6.587389064075399E-5
1960	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	6.587389064075399E-5
1961	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::html	6.582426804379662E-5
1962	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	6.561821131390014E-5
1963	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	6.549633612770284E-5
1964	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	6.549633612770284E-5
1965	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::if (next == element) {    return true;}	6.542119971787407E-5
1966	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::j++	6.541758122759794E-5
1967	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	6.518770427991282E-5
1968	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscaped	6.496963893501554E-5
1969	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::body	6.493901596472098E-5
1970	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	6.47929107731407E-5
1971	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	6.471411839411858E-5
1972	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::remainingA	6.467146032016902E-5
1973	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::j++	6.457094178573355E-5
1974	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	6.433653756738773E-5
1975	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	6.421083562551287E-5
1976	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::j++	6.390681893081961E-5
1977	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	6.379009038757138E-5
1978	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::body	6.34526029900274E-5
1979	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	6.339923798444458E-5
1980	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	6.330728973337687E-5
1981	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	6.305623950098861E-5
1982	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	6.301113526853041E-5
1983	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::closeCell(tb)	6.299759740569519E-5
1984	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	6.2828089640719E-5
1985	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	6.273364806145141E-5
1986	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	6.269314051660373E-5
1987	org.jsoup.parser.HtmlTreeBuilder::::657::::23090::::23312::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == null)        break;    else        if (next.nodeName().equals(nodeName))            return next;} ::::INSERT::::STATEMENT::::resetInsertionMode()	6.256913644408745E-5
1988	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	6.25352526439483E-5
1989	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::body	6.223795479096449E-5
1990	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	6.21666381049581E-5
1991	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	6.209949792495874E-5
1992	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"p"	6.188348958157044E-5
1993	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::resetInsertionMode()	6.179503010007892E-5
1994	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::currentForm	6.168590035627901E-5
1995	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::html	6.165593547180824E-5
1996	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	6.131891122170867E-5
1997	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	6.131891122170867E-5
1998	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::body	6.122678285332542E-5
1999	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.096255859856895E-5
2000	org.jsoup.parser.TokeniserState::::814::::27364::::28181::::switch (c) {    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted);        break;    case '&' :        char[] ref = t.consumeCharacterReference('\'', true);        if (ref != null)            t.tagPending.appendAttributeValue(ref);        else            t.tagPending.appendAttributeValue('&');        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	6.065132116274311E-5
2001	org.jsoup.parser.TokeniserState::::814::::27364::::28181::::switch (c) {    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted);        break;    case '&' :        char[] ref = t.consumeCharacterReference('\'', true);        if (ref != null)            t.tagPending.appendAttributeValue(ref);        else            t.tagPending.appendAttributeValue('&');        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	6.065132116274311E-5
2002	org.jsoup.parser.TokeniserState::::814::::27364::::28181::::switch (c) {    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted);        break;    case '&' :        char[] ref = t.consumeCharacterReference('\'', true);        if (ref != null)            t.tagPending.appendAttributeValue(ref);        else            t.tagPending.appendAttributeValue('&');        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	6.065132116274311E-5
2003	org.jsoup.parser.TokeniserState::::814::::27364::::28181::::switch (c) {    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted);        break;    case '&' :        char[] ref = t.consumeCharacterReference('\'', true);        if (ref != null)            t.tagPending.appendAttributeValue(ref);        else            t.tagPending.appendAttributeValue('&');        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	6.065132116274311E-5
2004	org.jsoup.parser.TokeniserState::::814::::27364::::28181::::switch (c) {    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted);        break;    case '&' :        char[] ref = t.consumeCharacterReference('\'', true);        if (ref != null)            t.tagPending.appendAttributeValue(ref);        else            t.tagPending.appendAttributeValue('&');        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	6.065132116274311E-5
2005	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::this	6.062577367766042E-5
2006	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	6.013981339568242E-5
2007	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	6.0056148245029705E-5
2008	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.0017945291940866E-5
2009	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	5.9807494626670404E-5
2010	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.934088182746001E-5
2011	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	5.9220283257460794E-5
2012	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	5.9073333552035935E-5
2013	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::if (isSameFormattingElement(in, el))    numSeen++;	5.896694441576E-5
2014	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::second	5.880658993902933E-5
2015	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::currentForm	5.8601396023469474E-5
2016	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	5.8564760412586485E-5
2017	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.8327298945689E-5
2018	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::currentForm	5.821006801327835E-5
2019	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::currentForm	5.8161629937660866E-5
2020	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::currentForm	5.807470590813728E-5
2021	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	5.8031682255595464E-5
2022	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::currentForm	5.7998925033965316E-5
2023	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::html	5.790474855918205E-5
2024	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::closeCell(tb)	5.763965431065975E-5
2025	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	5.759369846501395E-5
2026	org.jsoup.parser.HtmlTreeBuilder::::662::::23291::::23302::::return next::::INSERT::::STATEMENT::::resetInsertionMode()	5.759369846501395E-5
2027	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	5.759241550399242E-5
2028	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::second	5.757033417217199E-5
2029	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	5.7122970269573636E-5
2030	org.jsoup.parser.HtmlTreeBuilderState::::672::::33534::::33538::::stack::::new org.jsoup.nodes.Attributes()	5.707405029224887E-5
2031	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	5.692746771653149E-5
2032	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.6579514296905595E-5
2033	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::second	5.656010628371862E-5
2034	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::new org.jsoup.nodes.Attributes()	5.6386209084817024E-5
2035	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	5.6273146429668326E-5
2036	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::resetInsertionMode()	5.619737784774265E-5
2037	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	5.6178014580224116E-5
2038	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	5.6093862567487536E-5
2039	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(startTag)	5.6072783276376954E-5
2040	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	5.5884165435807654E-5
2041	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33530::::commonAncestor::::a	5.5857235039856736E-5
2042	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	5.583104539150034E-5
2043	org.jsoup.parser.Token::::61::::1759::::1989::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	5.5779704252349575E-5
2044	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::second	5.5719110436351016E-5
2045	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	5.5696407520955725E-5
2046	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::if (el == null)    break;	5.564745520928382E-5
2047	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::numSeen++	5.5397491586062565E-5
2048	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	5.486630273871207E-5
2049	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	5.437813640602597E-5
2050	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	5.436044662586562E-5
2051	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	5.412228969349171E-5
2052	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	5.4081650958149884E-5
2053	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	5.4081650958149884E-5
2054	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	5.399409231095058E-5
2055	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::closeCell(tb)	5.372093627412776E-5
2056	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	5.3311401880738416E-5
2057	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	5.3311401880738416E-5
2058	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	5.311590719104007E-5
2059	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	5.300143546021898E-5
2060	org.jsoup.parser.HtmlTreeBuilder::::661::::23237::::23302::::if (next.nodeName().equals(nodeName))    return next;::::INSERT::::STATEMENT::::pop()	5.293966222541687E-5
2061	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	5.28982370155564E-5
2062	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	5.238748954269082E-5
2063	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::if (el == null)    break;	5.229451811045944E-5
2064	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::INSERT::::STATEMENT::::newAttribute()	5.205711430902744E-5
2065	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::INSERT::::STATEMENT::::ensureAttributeValue()	5.205711430902744E-5
2066	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	5.1938929750816636E-5
2067	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	5.181032887037617E-5
2068	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	5.1700214059051724E-5
2069	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::form	5.139423095843414E-5
2070	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	5.1299585242357226E-5
2071	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"p"	5.124517249101528E-5
2072	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	5.114242045319445E-5
2073	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	5.107092234565829E-5
2074	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	5.0645831786701494E-5
2075	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	5.0560213122201714E-5
2076	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	5.029412462151606E-5
2077	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	5.0229162945101696E-5
2078	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::!(canContainInline)	4.981063240395972E-5
2079	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::closeCell(tb)	4.975523662725888E-5
2080	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	4.974148061104582E-5
2081	org.jsoup.parser.HtmlTreeBuilder::::652::::22940::::22941::::el::::headElement	4.963784449208805E-5
2082	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::html	4.957982050587858E-5
2083	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::form	4.915805726061533E-5
2084	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(startTag)	4.907540320390646E-5
2085	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::html	4.875325596562312E-5
2086	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	4.8638529834182005E-5
2087	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	4.840031730690612E-5
2088	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	4.8351556224483944E-5
2089	org.jsoup.parser.TokeniserState::::811::::27275::::27315::::t.tagPending.appendAttributeValue(value)::::DELETE::::STATEMENT	4.832077586089577E-5
2090	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::remainingA	4.822546234540094E-5
2091	org.jsoup.parser.HtmlTreeBuilderState::::722::::36577::::36584::::lastNode::::a	4.820014044416563E-5
2092	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	4.8183420868177876E-5
2093	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36506::::lastNode::::a	4.8171959601569304E-5
2094	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36443::::lastNode::::a	4.8140208917571336E-5
2095	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::html	4.807781438422982E-5
2096	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::anythingElse(t, tb)	4.8075060332129425E-5
2097	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped	4.789549227769744E-5
2098	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"PUBLIC"	4.78152228532669E-5
2099	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	4.7750944621229045E-5
2100	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	4.771875917875493E-5
2101	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	4.756541232605062E-5
2102	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::html	4.751552188410807E-5
2103	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::form	4.733072905432904E-5
2104	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	4.7213877440862315E-5
2105	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	4.7103263796869324E-5
2106	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	4.69637617116738E-5
2107	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	4.696293598702242E-5
2108	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	4.689427584505304E-5
2109	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	4.689427584505304E-5
2110	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	4.6815012150186766E-5
2111	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::closeCell(tb)	4.6647476645646105E-5
2112	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	4.635570082127133E-5
2113	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	4.620129115388325E-5
2114	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	4.6194945643813274E-5
2115	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::remainingA	4.613897486842889E-5
2116	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::remainingA	4.5880712143674896E-5
2117	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	4.5847435289392E-5
2118	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::form	4.580951245475844E-5
2119	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	4.565174563978487E-5
2120	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::anythingElse(t, tb)	4.5590582350297286E-5
2121	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	4.550804213838308E-5
2122	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	4.542693018594311E-5
2123	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"DOCTYPE"	4.542446171060356E-5
2124	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::remainingA	4.541724953858219E-5
2125	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	4.5162453779475054E-5
2126	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	4.514937094759395E-5
2127	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::remainingA	4.501320014565328E-5
2128	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	4.500825413488452E-5
2129	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	4.4886408371324925E-5
2130	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AttributeValue_unquoted	4.469408977945029E-5
2131	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	4.4664836313200276E-5
2132	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	4.4664836313200276E-5
2133	org.jsoup.parser.Token::::117::::3560::::3582::::ensureAttributeValue()::::INSERT::::STATEMENT::::if ((attributes) == null)    attributes = new org.jsoup.nodes.Attributes();	4.459951317662543E-5
2134	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	4.456479931502809E-5
2135	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"<!"	4.446815725353821E-5
2136	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	4.443827449146597E-5
2137	org.jsoup.parser.Token::::65::::2007::::2032::::attributes.put(attribute)::::INSERT::::STATEMENT::::newAttribute()	4.437721902921179E-5
2138	org.jsoup.parser.Token::::65::::2007::::2032::::attributes.put(attribute)::::INSERT::::STATEMENT::::ensureAttributeValue()	4.437721902921179E-5
2139	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	4.420248387344249E-5
2140	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::pop()	4.408654633626197E-5
2141	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.388580977522771E-5
2142	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	4.358052040162841E-5
2143	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	4.335116465692967E-5
2144	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	4.332044460482635E-5
2145	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	4.319965073040608E-5
2146	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	4.3111481829422316E-5
2147	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"p"	4.291945719627202E-5
2148	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	4.2899574770352966E-5
2149	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	4.2699472250034534E-5
2150	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	4.2682791487139306E-5
2151	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	4.261322669903263E-5
2152	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	4.249272575283205E-5
2153	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	4.2285036691395045E-5
2154	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	4.226615865629638E-5
2155	org.jsoup.parser.HtmlTreeBuilderState::::401::::18118::::18649::::if ((tb.getActiveFormattingElement("a")) != null) {    tb.error(this);    tb.process(new org.jsoup.parser.Token.EndTag("a"));    org.jsoup.nodes.Element remainingA = tb.getFromStack("a");    if (remainingA != null) {        tb.removeFromActiveFormattingElements(remainingA);        tb.removeFromStack(remainingA);    }}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	4.220484826054774E-5
2156	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	4.210154281082736E-5
2157	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	4.199540513073934E-5
2158	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	4.1972387925565007E-5
2159	org.jsoup.parser.HtmlTreeBuilder::::656::::23018::::23080::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	4.169078622944837E-5
2160	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	4.169016842929886E-5
2161	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	4.123603024266035E-5
2162	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	4.119721069216436E-5
2163	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::pop()	4.1196686733385954E-5
2164	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	4.0968982314994556E-5
2165	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	4.072418882725109E-5
2166	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"p"	4.068215684580598E-5
2167	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"div"	4.059650667764375E-5
2168	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"address"	4.059650667764375E-5
2169	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11937::::next::::headElement	4.0554465940118856E-5
2170	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	4.03146908527947E-5
2171	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.02009794144549E-5
2172	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::body	4.018070416168905E-5
2173	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	4.013177226594554E-5
2174	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	4.0116517049822865E-5
2175	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::form	3.9863488076202034E-5
2176	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.973856760218553E-5
2177	org.jsoup.parser.Token::::118::::3596::::3632::::pendingAttributeValue.append(append)::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	3.9644011712555935E-5
2178	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.9321894336741E-5
2179	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"form"	3.9317982243290694E-5
2180	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.888389378100063E-5
2181	org.jsoup.parser.HtmlTreeBuilderState::::696::::35033::::35040::::formatEl::::a	3.887954282940016E-5
2182	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	3.8687788170396974E-5
2183	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	3.858081046792208E-5
2184	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	3.8270790342707E-5
2185	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	3.820331387873334E-5
2186	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	3.8052312638105936E-5
2187	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	3.80341863039772E-5
2188	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::closeCell(tb)	3.779969438910533E-5
2189	org.jsoup.parser.HtmlTreeBuilder::::657::::23090::::23312::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == null)        break;    else        if (next.nodeName().equals(nodeName))            return next;} ::::INSERT::::STATEMENT::::pop()	3.7541481866452466E-5
2190	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::!(canContainInline)) && (!(isEmpty())	3.7357974302969786E-5
2191	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.707303358149402E-5
2192	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::body	3.684098860561575E-5
2193	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::body	3.6675589348178736E-5
2194	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.6596605911529995E-5
2195	org.jsoup.parser.Token::::61::::1759::::1989::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());::::INSERT::::STATEMENT::::ensureAttributeValue()	3.606507738442135E-5
2196	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::new org.jsoup.nodes.Attribute(pendingAttributeName, "")	3.6036299039168785E-5
2197	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	3.602298487023657E-5
2198	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	3.549688502043308E-5
2199	org.jsoup.parser.TokeniserState::::811::::27275::::27315::::t.tagPending.appendAttributeValue(value)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	3.52739601658182E-5
2200	org.jsoup.parser.TokeniserState::::811::::27275::::27315::::t.tagPending.appendAttributeValue(value)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	3.52739601658182E-5
2201	org.jsoup.parser.TokeniserState::::811::::27275::::27315::::t.tagPending.appendAttributeValue(value)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	3.52739601658182E-5
2202	org.jsoup.parser.TokeniserState::::811::::27275::::27315::::t.tagPending.appendAttributeValue(value)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	3.52739601658182E-5
2203	org.jsoup.parser.TokeniserState::::811::::27275::::27315::::t.tagPending.appendAttributeValue(value)::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	3.52739601658182E-5
2204	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptData	3.47132466966798E-5
2205	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	3.4604268622016526E-5
2206	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	3.4248101519097E-5
2207	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::closeCell(tb)	3.413125938562075E-5
2208	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::pop()	3.401485025203659E-5
2209	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"ul"	3.397535887879854E-5
2210	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"summary"	3.397535887879854E-5
2211	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"section"	3.397535887879854E-5
2212	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"ol"	3.397535887879854E-5
2213	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"nav"	3.397535887879854E-5
2214	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"menu"	3.397535887879854E-5
2215	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"hgroup"	3.397535887879854E-5
2216	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"header"	3.397535887879854E-5
2217	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"footer"	3.397535887879854E-5
2218	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"figure"	3.397535887879854E-5
2219	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"figcaption"	3.397535887879854E-5
2220	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"fieldset"	3.397535887879854E-5
2221	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"dl"	3.397535887879854E-5
2222	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"dir"	3.397535887879854E-5
2223	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"details"	3.397535887879854E-5
2224	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"center"	3.397535887879854E-5
2225	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"blockquote"	3.397535887879854E-5
2226	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"aside"	3.397535887879854E-5
2227	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"article"	3.397535887879854E-5
2228	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.391859232167785E-5
2229	org.jsoup.parser.HtmlTreeBuilderState::::674::::33687::::33702::::tb.isSpecial(el)::::DELETE::::INFIX	3.388165417690241E-5
2230	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.3873261848805326E-5
2231	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	3.384240633990923E-5
2232	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	3.3706808748134474E-5
2233	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_singleQuoted	3.364611253059741E-5
2234	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.DoctypeSystemIdentifier_doubleQuoted	3.364611253059741E-5
2235	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	3.360475720706386E-5
2236	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::second	3.341670710399003E-5
2237	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::second	3.3382946023379005E-5
2238	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::pop()	3.3325053532240764E-5
2239	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.331962617546151E-5
2240	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.330866937632456E-5
2241	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.330866937632456E-5
2242	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::second	3.325481962855581E-5
2243	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	3.3071067273646935E-5
2244	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	3.299638974558091E-5
2245	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	3.2936945320376995E-5
2246	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::data	3.254747068439717E-5
2247	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.246609152269319E-5
2248	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.234491748558359E-5
2249	org.jsoup.parser.HtmlTreeBuilderState::::720::::36432::::36516::::if ((lastNode.parent()) != null)    lastNode.remove();::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.234491748558359E-5
2250	org.jsoup.parser.Token::::118::::3596::::3616::::pendingAttributeValue::::new java.lang.StringBuilder()	3.2323475999889585E-5
2251	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	3.211536099955778E-5
2252	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.198684112844305E-5
2253	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	3.189504519378569E-5
2254	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::pop()	3.18451807803875E-5
2255	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"pre"	3.1729208963903514E-5
2256	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"listing"	3.1729208963903514E-5
2257	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	3.164092011510872E-5
2258	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.160055074948692E-5
2259	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	3.1444621342156104E-5
2260	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	3.140825805050013E-5
2261	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.130015675489503E-5
2262	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	3.108809141790292E-5
2263	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::anythingElse(t, tb)	3.087518041275468E-5
2264	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.0578400278340094E-5
2265	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.0578400278340094E-5
2266	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.0442756905863996E-5
2267	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	3.038057154104705E-5
2268	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"li"	3.037341352070864E-5
2269	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::body	3.0372783254692248E-5
2270	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	3.0124747505167202E-5
2271	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::if (el == null)    break;	3.0070582851909896E-5
2272	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.999602486320278E-5
2273	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	2.999468892261001E-5
2274	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::new java.lang.StringBuilder()	2.96769521499037E-5
2275	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	2.954340187557587E-5
2276	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"h6"	2.9516754893325066E-5
2277	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"h5"	2.9516754893325066E-5
2278	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"h4"	2.9516754893325066E-5
2279	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"h3"	2.9516754893325066E-5
2280	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"h2"	2.9516754893325066E-5
2281	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"h1"	2.9516754893325066E-5
2282	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	2.9277284729223998E-5
2283	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	2.925536518767494E-5
2284	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::html	2.922760139077147E-5
2285	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::html	2.9170598041974134E-5
2286	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	2.8992238200461664E-5
2287	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.8919281634113802E-5
2288	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.890077643795311E-5
2289	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	2.8578955926713735E-5
2290	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::numSeen++	2.8564331599063508E-5
2291	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	2.8440495674538224E-5
2292	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::DELETE::::STATEMENT	2.842455117183204E-5
2293	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.839647273427095E-5
2294	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"button"	2.8354077045682314E-5
2295	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::html	2.816173914490312E-5
2296	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"div"	2.7798370285079055E-5
2297	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"address"	2.7798370285079055E-5
2298	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::closeCell(tb)	2.7736121420228862E-5
2299	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.767618322059456E-5
2300	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.7570132163015932E-5
2301	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.7570132163015932E-5
2302	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	2.7560490936435043E-5
2303	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	2.7490686828440235E-5
2304	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::closeCell(tb)	2.7482225794187616E-5
2305	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.7473003126592653E-5
2306	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.7297134090612345E-5
2307	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	2.7173658118919566E-5
2308	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36452::::lastNode.parent()::::DELETE::::INFIX	2.7135438570112647E-5
2309	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"form"	2.7125890688584335E-5
2310	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.699704615547529E-5
2311	org.jsoup.parser.HtmlTreeBuilderState::::653::::32378::::32398::::!(tb.onStack(formatEl))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.699704615547529E-5
2312	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.6983822154653082E-5
2313	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	2.68150378702463E-5
2314	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.6752725765759273E-5
2315	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	2.6752725765759273E-5
2316	org.jsoup.parser.Token::::69::::2152::::2172::::pendingAttributeValue::::new java.lang.StringBuilder()	2.6675490491253514E-5
2317	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	2.6655700940369208E-5
2318	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	2.6655700940369208E-5
2319	org.jsoup.parser.HtmlTreeBuilder::::361::::11942::::11943::::el::::headElement	2.6623134678823824E-5
2320	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.6557953595520036E-5
2321	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.640373780555018E-5
2322	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::second	2.6384200520781427E-5
2323	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	2.6308139814055054E-5
2324	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	2.613036376659135E-5
2325	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"form"	2.6102604698855674E-5
2326	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"table"	2.6093733098806384E-5
2327	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(startTag)	2.6006405792727526E-5
2328	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	2.5883166250976445E-5
2329	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	2.5774199205050263E-5
2330	org.jsoup.parser.Token::::69::::2184::::2204::::pendingAttributeValue::::new java.lang.StringBuilder()	2.5763507910355962E-5
2331	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"tr"	2.5736057190385073E-5
2332	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.5671203257549428E-5
2333	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.5671203257549428E-5
2334	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::form	2.5570822113390094E-5
2335	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"div"	2.550910942229375E-5
2336	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"address"	2.550910942229375E-5
2337	org.jsoup.parser.HtmlTreeBuilderState::::731::::37192::::37199::::formatEl::::a	2.5466531839784103E-5
2338	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	2.545502632340782E-5
2339	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::body	2.5319624912314257E-5
2340	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::anythingElse(t, tb)	2.525134027886275E-5
2341	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	2.5231026132490177E-5
2342	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.518549651896719E-5
2343	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"dt"	2.5123162656261144E-5
2344	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"dd"	2.5123162656261144E-5
2345	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::form	2.4997208096612043E-5
2346	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.4907710195706904E-5
2347	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(startTag)	2.485857664275473E-5
2348	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	2.482595270570069E-5
2349	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::form	2.4809851777039075E-5
2350	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.4702708990282748E-5
2351	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::body	2.4678535717441172E-5
2352	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::anythingElse(t, tb)	2.467106073978619E-5
2353	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::body	2.459918252500383E-5
2354	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"tbody"	2.454831292197025E-5
2355	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	2.4545256096821636E-5
2356	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	2.4464552918838148E-5
2357	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::body	2.445678010388609E-5
2358	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	2.4456292307027607E-5
2359	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.443439252867177E-5
2360	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.442635754263801E-5
2361	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::this.data	2.441060301329788E-5
2362	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	2.4404081663605334E-5
2363	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::body	2.433263284546225E-5
2364	org.jsoup.parser.HtmlTreeBuilderState::::733::::37402::::37409::::formatEl::::a	2.422197464963895E-5
2365	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	2.406250270611972E-5
2366	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	2.4013472566175606E-5
2367	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"div"	2.3961425588519507E-5
2368	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"address"	2.3961425588519507E-5
2369	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"a"	2.3941068605643302E-5
2370	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"SYSTEM"	2.390761142663345E-5
2371	org.jsoup.parser.HtmlTreeBuilderState::::669::::33334::::33345::::stack.size()::::DELETE::::INFIX	2.3896955308624676E-5
2372	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"div"	2.3819677469088275E-5
2373	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"address"	2.3819677469088275E-5
2374	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"thead"	2.375803579276519E-5
2375	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"tfoot"	2.375803579276519E-5
2376	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::anythingElse(t, tb)	2.3565836103918944E-5
2377	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	2.3551631898434665E-5
2378	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.341463541246903E-5
2379	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.3212672902238183E-5
2380	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.3203341417746398E-5
2381	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"form"	2.3162693315610482E-5
2382	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"ul"	2.3112675845318368E-5
2383	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"summary"	2.3112675845318368E-5
2384	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"section"	2.3112675845318368E-5
2385	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"ol"	2.3112675845318368E-5
2386	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"nav"	2.3112675845318368E-5
2387	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"menu"	2.3112675845318368E-5
2388	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"hgroup"	2.3112675845318368E-5
2389	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"header"	2.3112675845318368E-5
2390	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"footer"	2.3112675845318368E-5
2391	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"figure"	2.3112675845318368E-5
2392	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"figcaption"	2.3112675845318368E-5
2393	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"fieldset"	2.3112675845318368E-5
2394	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"dl"	2.3112675845318368E-5
2395	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"dir"	2.3112675845318368E-5
2396	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"details"	2.3112675845318368E-5
2397	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"center"	2.3112675845318368E-5
2398	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"blockquote"	2.3112675845318368E-5
2399	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"aside"	2.3112675845318368E-5
2400	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"article"	2.3112675845318368E-5
2401	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"form"	2.309743829892899E-5
2402	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	2.297296304801397E-5
2403	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.2951810820725242E-5
2404	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	2.2925282951878695E-5
2405	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.2903368737913447E-5
2406	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::second	2.2844375251902648E-5
2407	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::html	2.28344402487547E-5
2408	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"li"	2.2726363832464362E-5
2409	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.2644149907759185E-5
2410	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::anythingElse(t, tb)	2.2640248144831763E-5
2411	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.2568513312934813E-5
2412	org.jsoup.parser.HtmlTreeBuilder::::357::::11785::::11786::::el::::headElement	2.2550232216945288E-5
2413	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.2515392409009428E-5
2414	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	2.250412706744226E-5
2415	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.241826794810864E-5
2416	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::second	2.2395281125446095E-5
2417	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::second	2.233969283457458E-5
2418	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	2.2331701010883988E-5
2419	org.jsoup.parser.TokeniserState::::810::::27239::::27243::::value::::"[CDATA["	2.2313770664857886E-5
2420	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::second	2.2239937462890565E-5
2421	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	2.2205779584216373E-5
2422	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.218186466772252E-5
2423	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::second	2.215297015004283E-5
2424	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"h6"	2.2096193631591E-5
2425	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"h5"	2.2096193631591E-5
2426	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"h4"	2.2096193631591E-5
2427	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"h3"	2.2096193631591E-5
2428	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"h2"	2.2096193631591E-5
2429	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"h1"	2.2096193631591E-5
2430	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	2.198983137425165E-5
2431	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	2.186902305297543E-5
2432	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::numSeen++	2.176330026595315E-5
2433	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	2.1744178650346246E-5
2434	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	2.159982536520304E-5
2435	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"pre"	2.1596812705558685E-5
2436	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"listing"	2.1596812705558685E-5
2437	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.1330371755903666E-5
2438	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.1324560752295364E-5
2439	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.121767905560218E-5
2440	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::anythingElse(t, tb)	2.120738574781817E-5
2441	org.jsoup.parser.HtmlTreeBuilder::::657::::23090::::23312::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == null)        break;    else        if (next.nodeName().equals(nodeName))            return next;} ::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	2.1179844616189995E-5
2442	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.1102429911125622E-5
2443	org.jsoup.parser.HtmlTreeBuilderState::::657::::32616::::32647::::!(tb.inScope(formatEl.nodeName()))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.1102429911125622E-5
2444	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.1034116592627228E-5
2445	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.0942696546906332E-5
2446	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.0942696546906332E-5
2447	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.0921458325045703E-5
2448	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.0765553869499237E-5
2449	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35028::::node::::a	2.0684898981387538E-5
2450	org.jsoup.parser.HtmlTreeBuilderState::::691::::34691::::34694::::node::::a	2.0577383659602944E-5
2451	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.044160626607435E-5
2452	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::currentForm	2.037102445786339E-5
2453	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34737::::node::::a	2.0315964992421055E-5
2454	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"ul"	2.0303509770460675E-5
2455	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"summary"	2.0303509770460675E-5
2456	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"section"	2.0303509770460675E-5
2457	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"ol"	2.0303509770460675E-5
2458	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"nav"	2.0303509770460675E-5
2459	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"menu"	2.0303509770460675E-5
2460	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"hgroup"	2.0303509770460675E-5
2461	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"header"	2.0303509770460675E-5
2462	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"footer"	2.0303509770460675E-5
2463	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"figure"	2.0303509770460675E-5
2464	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"figcaption"	2.0303509770460675E-5
2465	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"fieldset"	2.0303509770460675E-5
2466	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"dl"	2.0303509770460675E-5
2467	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"dir"	2.0303509770460675E-5
2468	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"details"	2.0303509770460675E-5
2469	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"center"	2.0303509770460675E-5
2470	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"blockquote"	2.0303509770460675E-5
2471	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"aside"	2.0303509770460675E-5
2472	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"article"	2.0303509770460675E-5
2473	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	2.0295171270575997E-5
2474	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::currentForm	2.027792884240743E-5
2475	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	2.0249836279877852E-5
2476	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"ul"	2.0135225097689775E-5
2477	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"summary"	2.0135225097689775E-5
2478	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"section"	2.0135225097689775E-5
2479	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"ol"	2.0135225097689775E-5
2480	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"nav"	2.0135225097689775E-5
2481	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"menu"	2.0135225097689775E-5
2482	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"hgroup"	2.0135225097689775E-5
2483	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"header"	2.0135225097689775E-5
2484	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"footer"	2.0135225097689775E-5
2485	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"figure"	2.0135225097689775E-5
2486	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"figcaption"	2.0135225097689775E-5
2487	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"fieldset"	2.0135225097689775E-5
2488	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"dl"	2.0135225097689775E-5
2489	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"dir"	2.0135225097689775E-5
2490	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"details"	2.0135225097689775E-5
2491	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"center"	2.0135225097689775E-5
2492	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"blockquote"	2.0135225097689775E-5
2493	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"aside"	2.0135225097689775E-5
2494	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"article"	2.0135225097689775E-5
2495	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::currentForm	2.012201751372061E-5
2496	org.jsoup.parser.HtmlTreeBuilderState::::692::::34757::::34760::::node::::a	2.0102342184560833E-5
2497	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::html	2.0089752040654513E-5
2498	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	2.0039249406235524E-5
2499	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	1.9985201625794737E-5
2500	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::currentForm	1.9927121839205592E-5
2501	org.jsoup.parser.HtmlTreeBuilderState::::693::::34833::::34836::::node::::a	1.9924505187219078E-5
2502	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::currentForm	1.991895307426771E-5
2503	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"ul"	1.9865053205158145E-5
2504	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"summary"	1.9865053205158145E-5
2505	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"section"	1.9865053205158145E-5
2506	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"ol"	1.9865053205158145E-5
2507	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"nav"	1.9865053205158145E-5
2508	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"menu"	1.9865053205158145E-5
2509	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"hgroup"	1.9865053205158145E-5
2510	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"header"	1.9865053205158145E-5
2511	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"footer"	1.9865053205158145E-5
2512	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"figure"	1.9865053205158145E-5
2513	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"figcaption"	1.9865053205158145E-5
2514	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"fieldset"	1.9865053205158145E-5
2515	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"dl"	1.9865053205158145E-5
2516	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"dir"	1.9865053205158145E-5
2517	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"details"	1.9865053205158145E-5
2518	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"center"	1.9865053205158145E-5
2519	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"blockquote"	1.9865053205158145E-5
2520	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"aside"	1.9865053205158145E-5
2521	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"article"	1.9865053205158145E-5
2522	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.977386778400944E-5
2523	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::html	1.9741536165693318E-5
2524	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	1.9701051839645996E-5
2525	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::html	1.969843445448603E-5
2526	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.963620487745731E-5
2527	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::html	1.9621086740528813E-5
2528	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::resetInsertionMode()	1.9594550304212737E-5
2529	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::html	1.9553654553928553E-5
2530	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.9547514022937415E-5
2531	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"button"	1.9495852486677877E-5
2532	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.9442432981896337E-5
2533	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17545::::name.equals("button")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.9442432981896337E-5
2534	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"tr"	1.9358518174945304E-5
2535	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.9227943762258377E-5
2536	org.jsoup.parser.HtmlTreeBuilder::::662::::23291::::23302::::return next::::INSERT::::STATEMENT::::pop()	1.9197899488337983E-5
2537	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.9127303812363727E-5
2538	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.9081624409268745E-5
2539	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"pre"	1.904477956680047E-5
2540	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"listing"	1.904477956680047E-5
2541	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.885983809896853E-5
2542	org.jsoup.parser.HtmlTreeBuilderState::::415::::18859::::18989::::org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.885983809896853E-5
2543	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.88404029624509E-5
2544	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.881652585176336E-5
2545	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"pre"	1.8797520614712713E-5
2546	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"listing"	1.8797520614712713E-5
2547	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"dt"	1.8771512382197703E-5
2548	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"dd"	1.8771512382197703E-5
2549	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"li"	1.8706501557613828E-5
2550	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"tbody"	1.8617767826229818E-5
2551	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"pre"	1.8557325631982826E-5
2552	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"listing"	1.8557325631982826E-5
2553	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"table"	1.845932528420704E-5
2554	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.8391403187788342E-5
2555	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"button"	1.8370175133686723E-5
2556	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.8284603242296833E-5
2557	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.8273040368721406E-5
2558	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"h6"	1.8183861092531425E-5
2559	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"h5"	1.8183861092531425E-5
2560	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"h4"	1.8183861092531425E-5
2561	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"h3"	1.8183861092531425E-5
2562	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"h2"	1.8183861092531425E-5
2563	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"h1"	1.8183861092531425E-5
2564	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"table"	1.8167435007442408E-5
2565	org.jsoup.parser.TokeniserState::::888::::30055::::30818::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);        break;    case '/' :        t.transition(org.jsoup.parser.TokeniserState.SelfClosingStartTag);        break;    case '>' :        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    default :        t.error(this);        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.8107339141662495E-5
2566	org.jsoup.parser.TokeniserState::::888::::30055::::30818::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);        break;    case '/' :        t.transition(org.jsoup.parser.TokeniserState.SelfClosingStartTag);        break;    case '>' :        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    default :        t.error(this);        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	1.8107339141662495E-5
2567	org.jsoup.parser.TokeniserState::::888::::30055::::30818::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);        break;    case '/' :        t.transition(org.jsoup.parser.TokeniserState.SelfClosingStartTag);        break;    case '>' :        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    default :        t.error(this);        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	1.8107339141662495E-5
2568	org.jsoup.parser.TokeniserState::::888::::30055::::30818::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);        break;    case '/' :        t.transition(org.jsoup.parser.TokeniserState.SelfClosingStartTag);        break;    case '>' :        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    default :        t.error(this);        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	1.8107339141662495E-5
2569	org.jsoup.parser.TokeniserState::::888::::30055::::30818::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);        break;    case '/' :        t.transition(org.jsoup.parser.TokeniserState.SelfClosingStartTag);        break;    case '>' :        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    default :        t.error(this);        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.BeforeAttributeName);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.8107339141662495E-5
2570	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"tr"	1.808584412203426E-5
2571	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::remainingA	1.807969647005162E-5
2572	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.8050185252010975E-5
2573	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.798942581432321E-5
2574	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(startTag)	1.7861486327741706E-5
2575	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.779104273515538E-5
2576	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"thead"	1.7720952272838756E-5
2577	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"tfoot"	1.7720952272838756E-5
2578	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	1.7689175518462313E-5
2579	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.767258438971158E-5
2580	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.7653068851518906E-5
2581	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.7642961388625727E-5
2582	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.7549858109227468E-5
2583	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.7511971873674002E-5
2584	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.743445369604145E-5
2585	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::remainingA	1.7421151834638756E-5
2586	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.736514267215152E-5
2587	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::form	1.7337922564914742E-5
2588	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	1.731621312988513E-5
2589	org.jsoup.parser.HtmlTreeBuilderState::::721::::36499::::36516::::lastNode.remove()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.7277724651197725E-5
2590	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"tbody"	1.727334928258509E-5
2591	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.719230414646117E-5
2592	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"li"	1.7074036827651317E-5
2593	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::remainingA	1.703409053624523E-5
2594	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"li"	1.6888577944101717E-5
2595	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::remainingA	1.6853469857657003E-5
2596	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	1.680303306135618E-5
2597	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"noframes"	1.6791762417756816E-5
2598	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"button"	1.6692183854255305E-5
2599	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"h6"	1.6679258984641347E-5
2600	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"h5"	1.6679258984641347E-5
2601	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"h4"	1.6679258984641347E-5
2602	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"h3"	1.6679258984641347E-5
2603	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"h2"	1.6679258984641347E-5
2604	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"h1"	1.6679258984641347E-5
2605	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"thead"	1.6674047464011843E-5
2606	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"tfoot"	1.6674047464011843E-5
2607	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"button"	1.667346359094044E-5
2608	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	1.6614177798784383E-5
2609	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.6522257492119537E-5
2610	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9919::::next::::headElement	1.6455911522725725E-5
2611	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.642089570338245E-5
2612	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.642089570338245E-5
2613	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"h6"	1.640642517102754E-5
2614	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"h5"	1.640642517102754E-5
2615	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"h4"	1.640642517102754E-5
2616	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"h3"	1.640642517102754E-5
2617	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"h2"	1.640642517102754E-5
2618	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"h1"	1.640642517102754E-5
2619	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::form	1.636619659431946E-5
2620	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::remainingA	1.6319301982918873E-5
2621	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::form	1.6245917608871456E-5
2622	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.6110750395908514E-5
2623	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.603419053555261E-5
2624	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::form	1.603007224447852E-5
2625	org.jsoup.parser.TokeniserState::::810::::27239::::27252::::value.length()::::DELETE::::INFIX	1.5981248714425362E-5
2626	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"caption"	1.58692701921023E-5
2627	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::form	1.5841897001230922E-5
2628	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.5779629645563772E-5
2629	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.5704129025250066E-5
2630	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32803::::tb.currentElement()::::DELETE::::INFIX	1.5628715194094577E-5
2631	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"dt"	1.546081625551605E-5
2632	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"dd"	1.546081625551605E-5
2633	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"table"	1.5447915007656394E-5
2634	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.5390923509957234E-5
2635	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"style"	1.5334074713622973E-5
2636	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"tr"	1.531302560487215E-5
2637	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"table"	1.5239879202063017E-5
2638	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.5096099938506122E-5
2639	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.5091905271275402E-5
2640	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.506872880711269E-5
2641	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	1.4983122301662635E-5
2642	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.4955867780237665E-5
2643	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::empty) || (selfClosing	1.4943189721187917E-5
2644	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::!(isBlock)	1.4943189721187917E-5
2645	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"tr"	1.4940774676344363E-5
2646	org.jsoup.parser.TokeniserState::::813::::27330::::27350::::char c = r.consume()::::INSERT::::STATEMENT::::anythingElse(t, r)	1.4893282099650967E-5
2647	org.jsoup.parser.Token::::117::::3560::::3582::::ensureAttributeValue()::::INSERT::::STATEMENT::::if ((pendingAttributeName) != null) {    newAttribute();}	1.4866504392208477E-5
2648	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"link"	1.4790061471005929E-5
2649	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"bgsound"	1.4790061471005929E-5
2650	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"basefont"	1.4790061471005929E-5
2651	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.478441316924264E-5
2652	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.476576272038407E-5
2653	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"tbody"	1.4616498147217148E-5
2654	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedLessthanSign	1.4594629036126679E-5
2655	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.4593371733071107E-5
2656	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.4593371733071107E-5
2657	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	1.4592281064460102E-5
2658	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.4496119100230832E-5
2659	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.4450388218976555E-5
2660	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.4440148201608782E-5
2661	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscapedLessthanSign	1.440631124211214E-5
2662	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.4369665392614138E-5
2663	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"tbody"	1.4239291357297105E-5
2664	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"nobr"	1.4173348759401004E-5
2665	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"thead"	1.4126110801783884E-5
2666	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"tfoot"	1.4126110801783884E-5
2667	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.4118615998662323E-5
2668	org.jsoup.parser.Token::::61::::1759::::1989::::if ((pendingAttributeValue) == null)    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, "");else    attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString());::::INSERT::::STATEMENT::::newAttribute()	1.4025307871719413E-5
2669	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.4001801382141885E-5
2670	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"dt"	1.3983519763964783E-5
2671	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"dd"	1.3983519763964783E-5
2672	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.395920969507749E-5
2673	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"dt"	1.3910360192010293E-5
2674	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"dd"	1.3910360192010293E-5
2675	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.3837616775392728E-5
2676	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.3813081590144271E-5
2677	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"thead"	1.3804177478613495E-5
2678	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"tfoot"	1.3804177478613495E-5
2679	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(startTag)	1.3792195947611497E-5
2680	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"meta"	1.378064150063839E-5
2681	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::closeCell(tb)	1.3766648520960881E-5
2682	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.375940647217243E-5
2683	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.3712949554961983E-5
2684	org.jsoup.parser.TokeniserState::::887::::30021::::30041::::char c = r.consume()::::INSERT::::STATEMENT::::anythingElse(t, r)	1.3669756895302147E-5
2685	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.3640270360782737E-5
2686	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.3590111656466406E-5
2687	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.34998908532519E-5
2688	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"base"	1.3367319507852836E-5
2689	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	1.3281507597425024E-5
2690	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.3258336238292303E-5
2691	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	1.323485957009172E-5
2692	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"a"	1.3225966722760978E-5
2693	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.3185155273089195E-5
2694	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"a"	1.3058077609029417E-5
2695	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.3048944947292273E-5
2696	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.2944324209281046E-5
2697	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	1.2923191751516171E-5
2698	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.2867908717100361E-5
2699	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"td"	1.2779217444547193E-5
2700	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"script"	1.2763842003390544E-5
2701	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"a"	1.261841196371562E-5
2702	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.DoctypeName	1.2617292198974031E-5
2703	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	1.2585529719513212E-5
2704	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"u"	1.2506192071848001E-5
2705	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"tt"	1.2506192071848001E-5
2706	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"strong"	1.2506192071848001E-5
2707	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"strike"	1.2506192071848001E-5
2708	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"small"	1.2506192071848001E-5
2709	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"s"	1.2506192071848001E-5
2710	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"i"	1.2506192071848001E-5
2711	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"font"	1.2506192071848001E-5
2712	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"em"	1.2506192071848001E-5
2713	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"code"	1.2506192071848001E-5
2714	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"big"	1.2506192071848001E-5
2715	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"b"	1.2506192071848001E-5
2716	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33464::::el::::a	1.2455250131474991E-5
2717	org.jsoup.parser.HtmlTreeBuilderState::::674::::33700::::33701::::el::::a	1.2383057980254024E-5
2718	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.2357677860498005E-5
2719	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.2305513404147696E-5
2720	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::closeCell(tb)	1.2279218789088006E-5
2721	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"caption"	1.2266081807982213E-5
2722	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.2217196264335886E-5
2723	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	1.2175609839394828E-5
2724	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.2083062796931384E-5
2725	org.jsoup.parser.HtmlTreeBuilderState::::772::::39137::::39168::::tb.generateImpliedEndTags(name)::::DELETE::::STATEMENT	1.2059409723567998E-5
2726	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"th"	1.2044894593404406E-5
2727	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.195640957232461E-5
2728	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	1.18206311037876E-5
2729	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.1814666710407186E-5
2730	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.1728020062139594E-5
2731	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.1627095528310147E-5
2732	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.1585862243204568E-5
2733	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"noframes"	1.1531240850808858E-5
2734	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"frameset"	1.1524732118639484E-5
2735	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"caption"	1.1199878216321883E-5
2736	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"a"	1.110618334455343E-5
2737	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.1049539562676973E-5
2738	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.0918093341012506E-5
2739	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	1.0863489404487758E-5
2740	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"noframes"	1.0779127218989988E-5
2741	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"title"	1.0758014685460646E-5
2742	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	1.0738839230187674E-5
2743	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.0738736523915688E-5
2744	org.jsoup.parser.HtmlTreeBuilderState::::730::::37090::::37102::::furthestBlock::::a	1.0661985095535912E-5
2745	org.jsoup.parser.TokeniserState::::731::::24401::::24421::::char c = r.consume()::::INSERT::::STATEMENT::::anythingElse(t, r)	1.0628040113504336E-5
2746	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.0570086843918315E-5
2747	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"style"	1.0508337038130312E-5
2748	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"command"	1.0505980727970863E-5
2749	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.039893582569782E-5
2750	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.0325754784455665E-5
2751	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.0309007560665087E-5
2752	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"td"	1.0274572327888329E-5
2753	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::closeCell(tb)	1.023778369279501E-5
2754	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.0215360213149776E-5
2755	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::this.attributes	1.0174955022824126E-5
2756	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"link"	1.0098533353163774E-5
2757	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"bgsound"	1.0098533353163774E-5
2758	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"basefont"	1.0098533353163774E-5
2759	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BeforeAttributeValue	1.0043615680775348E-5
2760	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	9.982978465864556E-6
2761	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"nobr"	9.900631147509773E-6
2762	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"noframes"	9.893221582005907E-6
2763	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"noframes"	9.867635564673268E-6
2764	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"nobr"	9.849716715321354E-6
2765	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	9.793532504878677E-6
2766	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	9.735667727725762E-6
2767	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"style"	9.692823894689078E-6
2768	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"th"	9.681356738073133E-6
2769	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	9.680180990723438E-6
2770	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	9.664068250438263E-6
2771	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	9.657437671098193E-6
2772	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	9.657437671098193E-6
2773	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	9.611527224831782E-6
2774	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	9.542873458940126E-6
2775	org.jsoup.parser.Token::::133::::4054::::4074::::pendingAttributeValue::::systemIdentifier	9.517153760035698E-6
2776	org.jsoup.parser.Token::::133::::4054::::4074::::pendingAttributeValue::::publicIdentifier	9.517153760035698E-6
2777	org.jsoup.parser.Token::::133::::4054::::4074::::pendingAttributeValue::::name	9.517153760035698E-6
2778	org.jsoup.parser.Token::::133::::4054::::4074::::pendingAttributeValue::::data	9.517153760035698E-6
2779	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"colgroup"	9.516250910532211E-6
2780	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	9.480165224846074E-6
2781	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	9.480165224846074E-6
2782	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"caption"	9.464226697217894E-6
2783	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	9.453494959179188E-6
2784	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"meta"	9.413007343610013E-6
2785	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::pop()	9.35431913664233E-6
2786	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::pop()	9.281629091469191E-6
2787	org.jsoup.parser.HtmlTreeBuilderState::::734::::37463::::37475::::furthestBlock::::a	9.223107814956859E-6
2788	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::body	9.216843088068376E-6
2789	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"caption"	9.186942956140759E-6
2790	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	9.162595086986578E-6
2791	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"base"	9.130213131570229E-6
2792	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"link"	9.094364178372684E-6
2793	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"bgsound"	9.094364178372684E-6
2794	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"basefont"	9.094364178372684E-6
2795	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"td"	9.076726902331315E-6
2796	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"style"	9.046182089114231E-6
2797	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	9.009428815544859E-6
2798	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"style"	9.000985144461125E-6
2799	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::body	8.996572212930427E-6
2800	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	8.994833110160122E-6
2801	org.jsoup.parser.Token::::132::::4007::::4027::::pendingAttributeValue::::systemIdentifier	8.882676842699984E-6
2802	org.jsoup.parser.Token::::132::::4007::::4027::::pendingAttributeValue::::publicIdentifier	8.882676842699984E-6
2803	org.jsoup.parser.Token::::132::::4007::::4027::::pendingAttributeValue::::name	8.882676842699984E-6
2804	org.jsoup.parser.Token::::132::::4007::::4027::::pendingAttributeValue::::data	8.882676842699984E-6
2805	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::body	8.845030862298762E-6
2806	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	8.814432381449882E-6
2807	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::body	8.794707349154741E-6
2808	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	8.78793789780157E-6
2809	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"script"	8.762434341005694E-6
2810	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"link"	8.745178052589864E-6
2811	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"bgsound"	8.745178052589864E-6
2812	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"basefont"	8.745178052589864E-6
2813	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::body	8.72904262997697E-6
2814	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"link"	8.66467116148194E-6
2815	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"bgsound"	8.66467116148194E-6
2816	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"basefont"	8.66467116148194E-6
2817	org.jsoup.parser.TokeniserState::::810::::27235::::27315::::if ((value.length()) > 0)    t.tagPending.appendAttributeValue(value);::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	8.664474451820446E-6
2818	org.jsoup.parser.TokeniserState::::810::::27235::::27315::::if ((value.length()) > 0)    t.tagPending.appendAttributeValue(value);::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	8.664474451820446E-6
2819	org.jsoup.parser.TokeniserState::::810::::27235::::27315::::if ((value.length()) > 0)    t.tagPending.appendAttributeValue(value);::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	8.664474451820446E-6
2820	org.jsoup.parser.TokeniserState::::810::::27235::::27315::::if ((value.length()) > 0)    t.tagPending.appendAttributeValue(value);::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	8.664474451820446E-6
2821	org.jsoup.parser.TokeniserState::::810::::27235::::27315::::if ((value.length()) > 0)    t.tagPending.appendAttributeValue(value);::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	8.664474451820446E-6
2822	org.jsoup.parser.Token::::118::::3596::::3616::::pendingAttributeValue::::systemIdentifier	8.619593599970556E-6
2823	org.jsoup.parser.Token::::118::::3596::::3616::::pendingAttributeValue::::publicIdentifier	8.619593599970556E-6
2824	org.jsoup.parser.Token::::118::::3596::::3616::::pendingAttributeValue::::name	8.619593599970556E-6
2825	org.jsoup.parser.Token::::118::::3596::::3616::::pendingAttributeValue::::data	8.619593599970556E-6
2826	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"u"	8.575151252606826E-6
2827	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"tt"	8.575151252606826E-6
2828	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"strong"	8.575151252606826E-6
2829	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"strike"	8.575151252606826E-6
2830	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"small"	8.575151252606826E-6
2831	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"s"	8.575151252606826E-6
2832	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"i"	8.575151252606826E-6
2833	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"font"	8.575151252606826E-6
2834	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"em"	8.575151252606826E-6
2835	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"code"	8.575151252606826E-6
2836	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"big"	8.575151252606826E-6
2837	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"b"	8.575151252606826E-6
2838	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"th"	8.554748450875873E-6
2839	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_singleQuoted	8.537073328659046E-6
2840	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.DoctypePublicIdentifier_doubleQuoted	8.537073328659046E-6
2841	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"meta"	8.499120859643688E-6
2842	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	8.498208197278884E-6
2843	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33755::::furthestBlock::::a	8.481781003396897E-6
2844	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::systemIdentifier	8.479129185686772E-6
2845	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::publicIdentifier	8.479129185686772E-6
2846	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::name	8.479129185686772E-6
2847	org.jsoup.parser.Token::::64::::1956::::1976::::pendingAttributeValue::::data	8.479129185686772E-6
2848	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	8.472648573347593E-6
2849	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	8.460673702872711E-6
2850	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	8.437578697362327E-6
2851	org.jsoup.parser.HtmlTreeBuilderState::::726::::36762::::36774::::furthestBlock::::a	8.387729604932873E-6
2852	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"nobr"	8.382452866382826E-6
2853	org.jsoup.parser.HtmlTreeBuilderState::::726::::36806::::36818::::furthestBlock::::a	8.376088044318527E-6
2854	org.jsoup.parser.HtmlTreeBuilderState::::687::::34474::::34486::::furthestBlock::::a	8.355196806472227E-6
2855	org.jsoup.parser.HtmlTreeBuilderState::::688::::34536::::34548::::furthestBlock::::a	8.336983703890536E-6
2856	org.jsoup.parser.Token::::61::::1763::::1783::::pendingAttributeValue::::systemIdentifier	8.327509540031237E-6
2857	org.jsoup.parser.Token::::61::::1763::::1783::::pendingAttributeValue::::publicIdentifier	8.327509540031237E-6
2858	org.jsoup.parser.Token::::61::::1763::::1783::::pendingAttributeValue::::name	8.327509540031237E-6
2859	org.jsoup.parser.Token::::61::::1763::::1783::::pendingAttributeValue::::data	8.327509540031237E-6
2860	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	8.305068234507247E-6
2861	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	8.302570065235637E-6
2862	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18089::::name.equals("a")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	8.302570065235637E-6
2863	org.jsoup.parser.Token::::69::::2152::::2172::::pendingAttributeValue::::systemIdentifier	8.29904148616776E-6
2864	org.jsoup.parser.Token::::69::::2152::::2172::::pendingAttributeValue::::publicIdentifier	8.29904148616776E-6
2865	org.jsoup.parser.Token::::69::::2152::::2172::::pendingAttributeValue::::name	8.29904148616776E-6
2866	org.jsoup.parser.Token::::69::::2152::::2172::::pendingAttributeValue::::data	8.29904148616776E-6
2867	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"nobr"	8.287713445895468E-6
2868	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::currentForm	8.265718070221962E-6
2869	org.jsoup.parser.Token::::69::::2184::::2204::::pendingAttributeValue::::systemIdentifier	8.244322531313908E-6
2870	org.jsoup.parser.Token::::69::::2184::::2204::::pendingAttributeValue::::publicIdentifier	8.244322531313908E-6
2871	org.jsoup.parser.Token::::69::::2184::::2204::::pendingAttributeValue::::name	8.244322531313908E-6
2872	org.jsoup.parser.Token::::69::::2184::::2204::::pendingAttributeValue::::data	8.244322531313908E-6
2873	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"base"	8.240969992411519E-6
2874	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	8.23235443555852E-6
2875	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	8.231607505079053E-6
2876	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"script"	8.174544390063048E-6
2877	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	8.161669701593674E-6
2878	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"meta"	8.146328532091271E-6
2879	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::second	8.138849744434648E-6
2880	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	8.09993451195114E-6
2881	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"meta"	8.075005775306533E-6
2882	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	8.02635445318911E-6
2883	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::second	7.988956125082222E-6
2884	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"u"	7.937929402329124E-6
2885	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"tt"	7.937929402329124E-6
2886	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"strong"	7.937929402329124E-6
2887	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"strike"	7.937929402329124E-6
2888	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"small"	7.937929402329124E-6
2889	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"s"	7.937929402329124E-6
2890	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"i"	7.937929402329124E-6
2891	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"font"	7.937929402329124E-6
2892	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"em"	7.937929402329124E-6
2893	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"code"	7.937929402329124E-6
2894	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"big"	7.937929402329124E-6
2895	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"b"	7.937929402329124E-6
2896	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(startTag)	7.903496313105177E-6
2897	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"frameset"	7.902509083986755E-6
2898	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"base"	7.902249604698459E-6
2899	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	7.876444473604791E-6
2900	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::second	7.872829835833975E-6
2901	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::second	7.866402078918217E-6
2902	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::second	7.844528188372656E-6
2903	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"base"	7.832596645240738E-6
2904	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	7.805173592618196E-6
2905	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"colgroup"	7.743477191664804E-6
2906	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(startTag)	7.742574057683731E-6
2907	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	7.692736411422373E-6
2908	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"td"	7.647837342920905E-6
2909	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"script"	7.52157012213026E-6
2910	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"script"	7.49937504379841E-6
2911	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	7.3951855881264635E-6
2912	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	7.380455861597597E-6
2913	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"u"	7.375346108751846E-6
2914	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"tt"	7.375346108751846E-6
2915	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"strong"	7.375346108751846E-6
2916	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"strike"	7.375346108751846E-6
2917	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"small"	7.375346108751846E-6
2918	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"s"	7.375346108751846E-6
2919	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"i"	7.375346108751846E-6
2920	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"font"	7.375346108751846E-6
2921	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"em"	7.375346108751846E-6
2922	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"code"	7.375346108751846E-6
2923	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"big"	7.375346108751846E-6
2924	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"b"	7.375346108751846E-6
2925	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"td"	7.366992640482324E-6
2926	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	7.36357682904649E-6
2927	org.jsoup.parser.HtmlTreeBuilderState::::657::::32612::::32864::::if (!(tb.inScope(formatEl.nodeName()))) {    tb.error(this);    return false;}else    if ((tb.currentElement()) != formatEl)        tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	7.36357682904649E-6
2928	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"u"	7.343216772525362E-6
2929	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"tt"	7.343216772525362E-6
2930	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"strong"	7.343216772525362E-6
2931	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"strike"	7.343216772525362E-6
2932	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"small"	7.343216772525362E-6
2933	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"s"	7.343216772525362E-6
2934	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"i"	7.343216772525362E-6
2935	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"font"	7.343216772525362E-6
2936	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"em"	7.343216772525362E-6
2937	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"code"	7.343216772525362E-6
2938	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"big"	7.343216772525362E-6
2939	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"b"	7.343216772525362E-6
2940	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"title"	7.340131459382772E-6
2941	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"frameset"	7.317164667960977E-6
2942	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	7.246308831711885E-6
2943	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31734::::name.equals("sarcasm")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	7.246308831711885E-6
2944	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"th"	7.2081874429747425E-6
2945	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	7.189073870616898E-6
2946	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::html	7.189050203827633E-6
2947	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::if (lastNode == furthestBlock) {}	7.176285901269777E-6
2948	org.jsoup.parser.HtmlTreeBuilder::::287::::9924::::9925::::el::::headElement	7.166104755832717E-6
2949	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"command"	7.145857769594014E-6
2950	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::html	7.062151352550159E-6
2951	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	7.001702640474749E-6
2952	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::html	6.967919994104424E-6
2953	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::html	6.961758740900224E-6
2954	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"th"	6.9438889252216E-6
2955	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::html	6.93874992295422E-6
2956	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AfterAttributeValue_quoted	6.904985780533051E-6
2957	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	6.8695594763672585E-6
2958	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	6.86537658916556E-6
2959	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	6.8618636084118745E-6
2960	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	6.8618636084118745E-6
2961	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	6.829965157686019E-6
2962	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"frameset"	6.796373025531516E-6
2963	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	6.795055828233202E-6
2964	org.jsoup.parser.HtmlTreeBuilderState::::653::::32374::::32864::::if (!(tb.onStack(formatEl))) {    tb.error(this);    tb.removeFromActiveFormattingElements(formatEl);    return true;}else    if (!(tb.inScope(formatEl.nodeName()))) {        tb.error(this);        return false;    }else        if ((tb.currentElement()) != formatEl)            tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	6.795055828233202E-6
2965	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"colgroup"	6.772551526767708E-6
2966	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"frameset"	6.767082304658294E-6
2967	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	6.760206369768736E-6
2968	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	6.728069057382248E-6
2969	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::remainingA	6.7040322970380625E-6
2970	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	6.6986196738843645E-6
2971	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	6.682299880121145E-6
2972	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::form	6.674818243959113E-6
2973	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	6.649838277233321E-6
2974	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	6.6421401277831504E-6
2975	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"title"	6.578232283099236E-6
2976	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	6.530999941955437E-6
2977	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	6.497913786213731E-6
2978	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	6.448162854071328E-6
2979	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	6.40440603451775E-6
2980	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CommentStartDash	6.402804996494283E-6
2981	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemIdentifier	6.402804996494283E-6
2982	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AfterDoctypePublicIdentifier	6.402804996494283E-6
2983	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::form	6.371467141957466E-6
2984	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"title"	6.363963349551142E-6
2985	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	6.355886073431606E-6
2986	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	6.3387294679344775E-6
2987	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22739::::next::::headElement	6.30532305682053E-6
2988	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	6.304785505838098E-6
2989	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"title"	6.300062729209434E-6
2990	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"command"	6.270576861695785E-6
2991	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	6.227192153187777E-6
2992	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"command"	6.226892022245231E-6
2993	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	6.214644160688681E-6
2994	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::form	6.204688050400436E-6
2995	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	6.152756702073848E-6
2996	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"command"	6.142225336739902E-6
2997	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::form	6.116223336342626E-6
2998	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	6.092386860931965E-6
2999	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	6.0778847031964955E-6
3000	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"col"	6.02778932080117E-6
3001	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CommentEndDash	6.026169408465208E-6
3002	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::startTag.attributes	5.953342169216817E-6
3003	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	5.935079469958901E-6
3004	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::form	5.811215950191835E-6
3005	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	5.72685525951897E-6
3006	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	5.726210090320989E-6
3007	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	5.712581038242247E-6
3008	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"colgroup"	5.701246132513188E-6
3009	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	5.697138809829837E-6
3010	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::insertNode(el)	5.635512430447601E-6
3011	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	5.573832241210954E-6
3012	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	5.568287008245461E-6
3013	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BogusComment	5.555374923428865E-6
3014	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	5.54775178029246E-6
3015	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	5.517885468344082E-6
3016	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"colgroup"	5.47872015085803E-6
3017	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	5.431744702243879E-6
3018	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	5.429685977473527E-6
3019	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::DELETE::::STATEMENT	5.4049974310364085E-6
3020	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BeforeDoctypeName	5.398443428416749E-6
3021	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	5.354958920263671E-6
3022	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	5.350131900345979E-6
3023	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	5.316418871669002E-6
3024	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.311590719104006E-6
3025	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"col"	5.305937272222602E-6
3026	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	5.256262543078269E-6
3027	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	5.184980615599401E-6
3028	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	5.169324278381717E-6
3029	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	5.161055840713646E-6
3030	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	5.15719578628885E-6
3031	org.jsoup.parser.HtmlTreeBuilderState::::645::::31858::::32001::::org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	5.15719578628885E-6
3032	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.131499954393557E-6
3033	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	5.069718878148047E-6
3034	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"br"	5.064649770752577E-6
3035	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	5.056801126363687E-6
3036	org.jsoup.parser.HtmlTreeBuilder::::554::::18863::::18864::::el::::headElement	5.05146727063848E-6
3037	org.jsoup.parser.HtmlTreeBuilderState::::660::::32781::::32864::::if ((tb.currentElement()) != formatEl)    tb.error(this);::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.032033312835374E-6
3038	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	4.9750098441606656E-6
3039	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.931136953045994E-6
3040	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::closeCell(tb)	4.889960381425894E-6
3041	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23170::::next::::headElement	4.851548839966466E-6
3042	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	4.83386561697933E-6
3043	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	4.820574450623585E-6
3044	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.797150699402871E-6
3045	org.jsoup.parser.HtmlTreeBuilder::::554::::18863::::18864::::el::::pop()	4.7856005721838234E-6
3046	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	4.6684560806325805E-6
3047	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"head"	4.649718321988486E-6
3048	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	4.6156537896117125E-6
3049	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	4.580148760460853E-6
3050	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	4.574897082090817E-6
3051	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	4.53542274363831E-6
3052	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.5116783935753406E-6
3053	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	4.504714407772429E-6
3054	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::closeCell(tb)	4.497282378186508E-6
3055	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	4.449120251402125E-6
3056	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	4.4426168233948675E-6
3057	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	4.4426168233948675E-6
3058	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	4.439568425363418E-6
3059	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	4.43291007830583E-6
3060	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"option"	4.423945116408255E-6
3061	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	4.407606597993379E-6
3062	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	4.407216190724941E-6
3063	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::closeCell(tb)	4.40052139548063E-6
3064	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.Rcdata	4.3940818603392145E-6
3065	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"optgroup"	4.354023590612905E-6
3066	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"col"	4.348154064510556E-6
3067	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	4.3344009654545886E-6
3068	org.jsoup.parser.HtmlTreeBuilder::::258::::9078::::9079::::el::::headElement	4.325361384533382E-6
3069	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	4.3134443223701395E-6
3070	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"sarcasm"	4.28039954053097E-6
3071	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	4.277313402235282E-6
3072	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"option"	4.230574892684825E-6
3073	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	4.230336851436356E-6
3074	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	4.210764308021543E-6
3075	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	4.1895934398014E-6
3076	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	4.1895934398014E-6
3077	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	4.131325947730545E-6
3078	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	4.119225953499335E-6
3079	org.jsoup.parser.HtmlTreeBuilderState::::784::::39568::::39579::::return true::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	4.119225953499335E-6
3080	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	4.11367058236733E-6
3081	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	4.111801031484807E-6
3082	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"head"	4.084964779370998E-6
3083	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	4.080834850796837E-6
3084	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	4.02986551946134E-6
3085	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	3.973200885000039E-6
3086	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.940364514049625E-6
3087	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::DELETE::::STATEMENT	3.9121953012235974E-6
3088	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"br"	3.9083425988107444E-6
3089	org.jsoup.parser.HtmlTreeBuilder::::662::::23298::::23301::::next::::headElement	3.887492410972056E-6
3090	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	3.884152600430426E-6
3091	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.8832972627843146E-6
3092	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	3.832864830800103E-6
3093	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.809968537666152E-6
3094	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.8083907559889544E-6
3095	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.7926008447727655E-6
3096	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.7908378041465927E-6
3097	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.728283899048654E-6
3098	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.7076002095017697E-6
3099	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.7075380568171497E-6
3100	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	3.6902279307987984E-6
3101	org.jsoup.parser.HtmlTreeBuilderState::::775::::39300::::39324::::tb.popStackToClose(name)::::DELETE::::STATEMENT	3.688766165175556E-6
3102	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	3.6744155338708594E-6
3103	org.jsoup.parser.HtmlTreeBuilder::::644::::22744::::22745::::el::::headElement	3.653845168880385E-6
3104	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23244::::next::::headElement	3.641102046896362E-6
3105	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"col"	3.6380399550096307E-6
3106	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	3.621981606999773E-6
3107	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.6120008045454903E-6
3108	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"input"	3.6073387478051974E-6
3109	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.6044323046414534E-6
3110	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.577273206172223E-6
3111	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"br"	3.573497887235719E-6
3112	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::body	3.5450698456184225E-6
3113	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	3.540242810082095E-6
3114	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.5062231025535934E-6
3115	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.499848151458041E-6
3116	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.495737340387384E-6
3117	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	3.495737340387384E-6
3118	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9331::::next::::headElement	3.4613826132225934E-6
3119	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDashDash	3.4524928902665255E-6
3120	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"col"	3.4389356725287455E-6
3121	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.4363849966655875E-6
3122	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.4247110925256115E-6
3123	org.jsoup.parser.HtmlTreeBuilderState::::661::::32850::::32864::::tb.error(this)::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.4247110925256115E-6
3124	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.3593851467288707E-6
3125	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"head"	3.3529281561722062E-6
3126	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(startTag)	3.3212680454896785E-6
3127	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	3.3120306297351804E-6
3128	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.301529710365862E-6
3129	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	3.2689364294111647E-6
3130	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	3.251881104227167E-6
3131	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	3.240662969750429E-6
3132	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::second	3.2056979833058992E-6
3133	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	3.1977364393253132E-6
3134	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"optgroup"	3.177800816350915E-6
3135	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	3.1570198662820246E-6
3136	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"option"	3.153452158372369E-6
3137	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	3.109831776376407E-6
3138	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.0866188693388737E-6
3139	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"object"	3.0844025297581206E-6
3140	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"marquee"	3.0844025297581206E-6
3141	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"applet"	3.0844025297581206E-6
3142	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	3.0473068052578195E-6
3143	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"optgroup"	3.045626196236475E-6
3144	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"br"	3.0200673839968253E-6
3145	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"plaintext"	3.0020805686432515E-6
3146	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	2.992324297729904E-6
3147	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	2.9813521290198128E-6
3148	org.jsoup.parser.HtmlTreeBuilderState::::653::::32390::::32397::::formatEl::::a	2.9644816949927527E-6
3149	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	2.961066580039868E-6
3150	org.jsoup.parser.HtmlTreeBuilderState::::671::::33469::::33476::::formatEl::::a	2.9390057679131125E-6
3151	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"br"	2.932494341976281E-6
3152	org.jsoup.parser.HtmlTreeBuilderState::::657::::32628::::32635::::formatEl::::a	2.9306728570121438E-6
3153	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	2.930475121516693E-6
3154	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32268::::formatEl::::a	2.8966182940861454E-6
3155	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	2.8954592112299538E-6
3156	org.jsoup.parser.HtmlTreeBuilderState::::660::::32808::::32815::::formatEl::::a	2.8938283553258127E-6
3157	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(startTag)	2.8669400889802286E-6
3158	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	2.863427629759485E-6
3159	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	2.8616984583245934E-6
3160	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	2.8321942480656765E-6
3161	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23244::::next::::pop()	2.831968258697171E-6
3162	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::html	2.8217476136557143E-6
3163	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(startTag)	2.815603400535461E-6
3164	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"head"	2.805783533972142E-6
3165	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted	2.793380611215643E-6
3166	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted	2.793380611215643E-6
3167	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	2.78794121293965E-6
3168	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.7855598231582674E-6
3169	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	2.7605647520096243E-6
3170	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(startTag)	2.7391338261056295E-6
3171	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"input"	2.729602804715433E-6
3172	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	2.7148429887367636E-6
3173	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	2.701978036018315E-6
3174	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"head"	2.6533483649540096E-6
3175	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.648606162858857E-6
3176	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"sarcasm"	2.6340374209250636E-6
3177	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	2.627533111065011E-6
3178	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"option"	2.600035216696255E-6
3179	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(startTag)	2.5895708662389274E-6
3180	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"optgroup"	2.584167521389477E-6
3181	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"sarcasm"	2.570509159912086E-6
3182	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	2.5641657313271066E-6
3183	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	2.5561151539971193E-6
3184	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.5550494390356313E-6
3185	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"hr"	2.5389681717557745E-6
3186	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"input"	2.5373850893727894E-6
3187	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"optgroup"	2.5352940420834314E-6
3188	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::startTag.attributes	2.5306993107179257E-6
3189	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	2.52709233105348E-6
3190	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	2.5204549592034273E-6
3191	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	2.4963306590697757E-6
3192	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"action"	2.4712421724232173E-6
3193	org.jsoup.parser.HtmlTreeBuilderState::::674::::33658::::33838::::if (seenFormattingElement && (tb.isSpecial(el))) {    furthestBlock = el;    break;}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	2.443439252867177E-6
3194	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	2.4408435890440953E-6
3195	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AfterAttributeName	2.416745023186568E-6
3196	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	2.404766230405185E-6
3197	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::form	2.3978922898564933E-6
3198	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"sarcasm"	2.382610597146671E-6
3199	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"sarcasm"	2.367827997819648E-6
3200	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"option"	2.358798285893447E-6
3201	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::startTag.attributes	2.2937215324275898E-6
3202	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.2445635803433555E-6
3203	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BeforeDoctypeSystemIdentifier	2.22842722917203E-6
3204	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BeforeDoctypePublicIdentifier	2.22842722917203E-6
3205	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.186608225774332E-6
3206	org.jsoup.parser.HtmlTreeBuilderState::::412::::18675::::18709::::tb.reconstructFormattingElements()::::DELETE::::STATEMENT	2.1852458022670794E-6
3207	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.168594575321111E-6
3208	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AfterDoctypeName	2.165654631167184E-6
3209	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"input"	2.1474560835371623E-6
3210	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"object"	2.133271428793372E-6
3211	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"marquee"	2.133271428793372E-6
3212	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"applet"	2.133271428793372E-6
3213	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	2.125382145069758E-6
3214	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	2.120981852348074E-6
3215	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"select"	2.120030204917458E-6
3216	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	2.1198656036576136E-6
3217	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.BetweenDoctypePublicAndSystemIdentifiers	2.1028820331623383E-6
3218	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"input"	2.092932462227572E-6
3219	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"object"	2.0842256366350127E-6
3220	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"marquee"	2.0842256366350127E-6
3221	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"applet"	2.0842256366350127E-6
3222	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	2.073984089752913E-6
3223	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	2.0575166153147426E-6
3224	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"plaintext"	2.05117250549352E-6
3225	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"keygen"	2.0506695009914313E-6
3226	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CommentEndBang	2.0401094351574924E-6
3227	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"hr"	2.0047946005635765E-6
3228	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.9913865806711785E-6
3229	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.9907467536171083E-6
3230	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"select"	1.942704142789426E-6
3231	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.920392870963217E-6
3232	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.918641863595188E-6
3233	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.8845754727638699E-6
3234	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.8644910236920277E-6
3235	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::closeCell(tb)	1.85991010547422E-6
3236	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"plaintext"	1.8554418778095378E-6
3237	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.8483336367491799E-6
3238	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"object"	1.8194957285104857E-6
3239	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"marquee"	1.8194957285104857E-6
3240	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"applet"	1.8194957285104857E-6
3241	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.815386513099462E-6
3242	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"object"	1.8090787639000664E-6
3243	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"marquee"	1.8090787639000664E-6
3244	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"applet"	1.8090787639000664E-6
3245	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.7998611926441778E-6
3246	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"hr"	1.7980477063294232E-6
3247	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"plaintext"	1.774351108132147E-6
3248	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.7731640313223315E-6
3249	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.7656722179402722E-6
3250	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"plaintext"	1.7593831896763447E-6
3251	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	1.73657784978767E-6
3252	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::if (node == formatEl)    break INNER;	1.7274771324663262E-6
3253	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"prompt"	1.716507486371207E-6
3254	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"img"	1.7154061231648381E-6
3255	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.7037418523520083E-6
3256	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.694902952915095E-6
3257	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.6521133113716443E-6
3258	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.6226112879542937E-6
3259	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::closeCell(tb)	1.605486449828928E-6
3260	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"action"	1.6018367454454274E-6
3261	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDash	1.6007012491235708E-6
3262	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(startTag)	1.5887687976059067E-6
3263	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::closeCell(tb)	1.576737904299858E-6
3264	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.5549999861798663E-6
3265	org.jsoup.parser.HtmlTreeBuilderState::::415::::18855::::26999::::if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {    tb.reconstructFormattingElements();    org.jsoup.nodes.Element el = tb.insert(startTag);    tb.pushActiveFormattingElements(el);}else    if (name.equals("nobr")) {        tb.reconstructFormattingElements();        if (tb.inScope("nobr")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("nobr"));            tb.reconstructFormattingElements();        }        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            tb.reconstructFormattingElements();            tb.insert(startTag);            tb.insertMarkerToFormattingElements();            tb.framesetOk(false);        }else            if (name.equals("table")) {                if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                }                tb.insert(startTag);                tb.framesetOk(false);                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);            }else                if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                    tb.reconstructFormattingElements();                    tb.insertEmpty(startTag);                    tb.framesetOk(false);                }else                    if (name.equals("input")) {                        tb.reconstructFormattingElements();                        org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                        if (!(el.attr("type").equalsIgnoreCase("hidden")))                            tb.framesetOk(false);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                            tb.insertEmpty(startTag);                        }else                            if (name.equals("hr")) {                                if (tb.inButtonScope("p")) {                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                }                                tb.insertEmpty(startTag);                                tb.framesetOk(false);                            }else                                if (name.equals("image")) {                                    startTag.name("img");                                    return tb.process(startTag);                                }else                                    if (name.equals("isindex")) {                                        tb.error(this);                                        if ((tb.getFormElement()) != null)                                            return false;                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                        tb.process(new org.jsoup.parser.Token.StartTag("form"));                                        if (startTag.attributes.hasKey("action")) {                                            org.jsoup.nodes.Element form = tb.getFormElement();                                            form.attr("action", startTag.attributes.get("action"));                                        }                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.StartTag("label"));                                        java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                        tb.process(new org.jsoup.parser.Token.Character(prompt));                                        org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                        for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                            if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                inputAttribs.put(attr);                                        }                                        inputAttribs.put("name", "isindex");                                        tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                        tb.process(new org.jsoup.parser.Token.EndTag("label"));                                        tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                        tb.process(new org.jsoup.parser.Token.EndTag("form"));                                    }else                                        if (name.equals("textarea")) {                                            tb.insert(startTag);                                            tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                            tb.markInsertionMode();                                            tb.framesetOk(false);                                            tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                        }else                                            if (name.equals("xmp")) {                                                if (tb.inButtonScope("p")) {                                                    tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                }                                                tb.reconstructFormattingElements();                                                tb.framesetOk(false);                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                            }else                                                if (name.equals("iframe")) {                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("noembed")) {                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("select")) {                                                            tb.reconstructFormattingElements();                                                            tb.insert(startTag);                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                            if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                            else                                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                        }else                                                            if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                if (tb.currentElement().nodeName().equals("option"))                                                                    tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                    if (tb.inScope("ruby")) {                                                                        tb.generateImpliedEndTags();                                                                        if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                            tb.error(this);                                                                            tb.popStackToBefore("ruby");                                                                        }                                                                        tb.insert(startTag);                                                                    }                                                                }else                                                                    if (name.equals("math")) {                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                        tb.tokeniser.acknowledgeSelfClosingFlag();                                                                    }else                                                                        if (name.equals("svg")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                tb.error(this);                                                                                return false;                                                                            }else {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.5549999861798663E-6
3266	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.541480723556579E-6
3267	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"select"	1.5404115306869679E-6
3268	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscapedDash	1.5379286511187252E-6
3269	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapedDashDash	1.5379286511187252E-6
3270	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.5341052177022412E-6
3271	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.5336690923982716E-6
3272	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"prompt"	1.5183162532827122E-6
3273	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"hr"	1.5170300303170977E-6
3274	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	1.5007558516379028E-6
3275	org.jsoup.parser.TokeniserState::::732::::24435::::25930::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        break;    case '"' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted);        break;    case '&' :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted);        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '>' :        t.error(this);        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '<' :    case '=' :    case '`' :        t.error(this);        t.tagPending.appendAttributeValue(c);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    default :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.4756964107381877E-6
3276	org.jsoup.parser.TokeniserState::::732::::24435::::25930::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        break;    case '"' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted);        break;    case '&' :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted);        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '>' :        t.error(this);        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '<' :    case '=' :    case '`' :        t.error(this);        t.tagPending.appendAttributeValue(c);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    default :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	1.4756964107381877E-6
3277	org.jsoup.parser.TokeniserState::::732::::24435::::25930::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        break;    case '"' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted);        break;    case '&' :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted);        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '>' :        t.error(this);        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '<' :    case '=' :    case '`' :        t.error(this);        t.tagPending.appendAttributeValue(c);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    default :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	1.4756964107381877E-6
3278	org.jsoup.parser.TokeniserState::::732::::24435::::25930::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        break;    case '"' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted);        break;    case '&' :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted);        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '>' :        t.error(this);        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '<' :    case '=' :    case '`' :        t.error(this);        t.tagPending.appendAttributeValue(c);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    default :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	1.4756964107381877E-6
3279	org.jsoup.parser.TokeniserState::::732::::24435::::25930::::switch (c) {    case '\t' :    case '\n' :    case '\r' :    case '\f' :    case ' ' :        break;    case '"' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_doubleQuoted);        break;    case '&' :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case '\'' :        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_singleQuoted);        break;    case org.jsoup.parser.TokeniserState.nullChar :        t.error(this);        t.tagPending.appendAttributeValue(org.jsoup.parser.TokeniserState.replacementChar);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    case org.jsoup.parser.TokeniserState.eof :        t.eofError(this);        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '>' :        t.error(this);        t.emitTagPending();        t.transition(org.jsoup.parser.TokeniserState.Data);        break;    case '<' :    case '=' :    case '`' :        t.error(this);        t.tagPending.appendAttributeValue(c);        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);        break;    default :        r.unconsume();        t.transition(org.jsoup.parser.TokeniserState.AttributeValue_unquoted);}::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.4756964107381877E-6
3280	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"hr"	1.4665318239042708E-6
3281	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.4607477268901206E-6
3282	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::closeCell(tb)	1.455919267570721E-6
3283	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"isindex"	1.443990206444183E-6
3284	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"wbr"	1.4389563760432322E-6
3285	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"embed"	1.4389563760432322E-6
3286	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"area"	1.4389563760432322E-6
3287	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.436494591127705E-6
3288	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.429920709221244E-6
3289	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"keygen"	1.4188279024436482E-6
3290	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.TagOpen	1.4123834551090333E-6
3291	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.RcdataLessthanSign	1.4123834551090333E-6
3292	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CommentEnd	1.4123834551090333E-6
3293	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CharacterReferenceInRcdata	1.4123834551090333E-6
3294	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CharacterReferenceInData	1.4123834551090333E-6
3295	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.Rawtext	1.412383455109033E-6
3296	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	1.4073057368819452E-6
3297	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"keygen"	1.3892739926966275E-6
3298	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	1.3722302405668747E-6
3299	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.MarkupDeclarationOpen	1.3496108571041872E-6
3300	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.EndTagOpen	1.3496108571041872E-6
3301	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::closeCell(tb)	1.3235584427443405E-6
3302	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"action"	1.309701363304984E-6
3303	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.3004270729953262E-6
3304	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.2980890303634349E-6
3305	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.2972635327717464E-6
3306	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"select"	1.284639656723658E-6
3307	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	1.2838679991440091E-6
3308	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	1.2834229358297972E-6
3309	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.2780575769985597E-6
3310	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"img"	1.2736934446102857E-6
3311	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataLessthanSign	1.2240656610944953E-6
3312	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.RawtextLessthanSign	1.2240656610944953E-6
3313	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"keygen"	1.20993275615674E-6
3314	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"select"	1.2035125293997005E-6
3315	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"img"	1.2030743705935183E-6
3316	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"keygen"	1.2024888737205389E-6
3317	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33914::::furthestBlock::::a	1.1942725917396206E-6
3318	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"prompt"	1.1504619665283412E-6
3319	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	1.1446442936221293E-6
3320	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	1.1394111811451281E-6
3321	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"track"	1.1320981840505758E-6
3322	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"source"	1.1320981840505758E-6
3323	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"param"	1.1320981840505758E-6
3324	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	1.1224203423224374E-6
3325	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	1.1191911207050444E-6
3326	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	1.1178185427091034E-6
3327	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::startTag.attributes	1.1129545834084188E-6
3328	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.1066945430859602E-6
3329	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"isindex"	1.1042032760916572E-6
3330	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.0992219010180765E-6
3331	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.097618898330057E-6
3332	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	1.092501690039118E-6
3333	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	1.0791194822366385E-6
3334	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.0599328018288068E-6
3335	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	1.0496584865081722E-6
3336	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.0477185320610326E-6
3337	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"action"	1.0375709653376172E-6
3338	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	1.0369920448764565E-6
3339	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	1.019992175288318E-6
3340	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"img"	1.019562390505322E-6
3341	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.0192784900349437E-6
3342	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.0191953899020708E-6
3343	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"isindex"	1.017376360416775E-6
3344	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.0123561333593855E-6
3345	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	1.0067661778300945E-6
3346	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"img"	9.97161061583261E-7
3347	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	9.953733768085542E-7
3348	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"wbr"	9.918322152217467E-7
3349	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"embed"	9.918322152217467E-7
3350	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"area"	9.918322152217467E-7
3351	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	9.859924361120407E-7
3352	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	9.850911285124063E-7
3353	org.jsoup.parser.HtmlTreeBuilderState::::632::::31114::::31168::::org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	9.850911285124063E-7
3354	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	9.735667727725763E-7
3355	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStart	9.729752690751117E-7
3356	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEndTagOpen	9.729752690751117E-7
3357	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	9.665885146142427E-7
3358	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	9.601964354816086E-7
3359	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"wbr"	9.4897713165628E-7
3360	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"embed"	9.4897713165628E-7
3361	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"area"	9.4897713165628E-7
3362	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"prompt"	9.417211303716332E-7
3363	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.TagName	9.415889700726887E-7
3364	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	9.1853420326551E-7
3365	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	9.176028261074449E-7
3366	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	9.080935415516082E-7
3367	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	9.004287740626418E-7
3368	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	8.946403038989918E-7
3369	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	8.860062859406175E-7
3370	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	8.827619546432785E-7
3371	org.jsoup.parser.HtmlTreeBuilderState::::622::::30613::::30643::::org.jsoup.helper.StringUtil.in(name, "dd", "dt")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	8.827619546432785E-7
3372	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	8.795660855512157E-7
3373	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	8.793775208144611E-7
3374	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"image"	8.78831451768723E-7
3375	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"textarea"	8.787629642802747E-7
3376	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	8.700448450383532E-7
3377	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	8.700448450383532E-7
3378	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	8.69545712424683E-7
3379	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	8.694154833003361E-7
3380	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	8.68288924893835E-7
3381	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"isindex"	8.603817010786019E-7
3382	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"name"	8.48709432953428E-7
3383	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"wbr"	8.472845557460237E-7
3384	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"embed"	8.472845557460237E-7
3385	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"area"	8.472845557460237E-7
3386	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"wbr"	8.458132957144973E-7
3387	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"embed"	8.458132957144973E-7
3388	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"area"	8.458132957144973E-7
3389	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::inputAttribs	8.439547582590112E-7
3390	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	8.394058153228948E-7
3391	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"isindex"	8.368795734236328E-7
3392	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"prompt"	8.364690163330601E-7
3393	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"action"	8.307869061995322E-7
3394	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	8.02241229069581E-7
3395	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	7.954226762109458E-7
3396	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	7.873849100127369E-7
3397	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"track"	7.830286417301686E-7
3398	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"source"	7.830286417301686E-7
3399	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"param"	7.830286417301686E-7
3400	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	7.827024786613984E-7
3401	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"noscript"	7.802437121473796E-7
3402	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	7.74257405768373E-7
3403	org.jsoup.parser.HtmlTreeBuilderState::::389::::17521::::26999::::if (name.equals("button")) {    if (tb.inButtonScope("button")) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("button"));        tb.process(startTag);    }else {        tb.reconstructFormattingElements();        tb.insert(startTag);        tb.framesetOk(false);    }}else    if (name.equals("a")) {        if ((tb.getActiveFormattingElement("a")) != null) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.EndTag("a"));            org.jsoup.nodes.Element remainingA = tb.getFromStack("a");            if (remainingA != null) {                tb.removeFromActiveFormattingElements(remainingA);                tb.removeFromStack(remainingA);            }        }        tb.reconstructFormattingElements();        org.jsoup.nodes.Element a = tb.insert(startTag);        tb.pushActiveFormattingElements(a);    }else        if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {            tb.reconstructFormattingElements();            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (name.equals("nobr")) {                tb.reconstructFormattingElements();                if (tb.inScope("nobr")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                    tb.reconstructFormattingElements();                }                org.jsoup.nodes.Element el = tb.insert(startTag);                tb.pushActiveFormattingElements(el);            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    tb.reconstructFormattingElements();                    tb.insert(startTag);                    tb.insertMarkerToFormattingElements();                    tb.framesetOk(false);                }else                    if (name.equals("table")) {                        if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                        }                        tb.insert(startTag);                        tb.framesetOk(false);                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                    }else                        if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                            tb.reconstructFormattingElements();                            tb.insertEmpty(startTag);                            tb.framesetOk(false);                        }else                            if (name.equals("input")) {                                tb.reconstructFormattingElements();                                org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                                if (!(el.attr("type").equalsIgnoreCase("hidden")))                                    tb.framesetOk(false);                            }else                                if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                    tb.insertEmpty(startTag);                                }else                                    if (name.equals("hr")) {                                        if (tb.inButtonScope("p")) {                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                        }                                        tb.insertEmpty(startTag);                                        tb.framesetOk(false);                                    }else                                        if (name.equals("image")) {                                            startTag.name("img");                                            return tb.process(startTag);                                        }else                                            if (name.equals("isindex")) {                                                tb.error(this);                                                if ((tb.getFormElement()) != null)                                                    return false;                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                tb.process(new org.jsoup.parser.Token.StartTag("form"));                                                if (startTag.attributes.hasKey("action")) {                                                    org.jsoup.nodes.Element form = tb.getFormElement();                                                    form.attr("action", startTag.attributes.get("action"));                                                }                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.StartTag("label"));                                                java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                                tb.process(new org.jsoup.parser.Token.Character(prompt));                                                org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                                for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                    if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                        inputAttribs.put(attr);                                                }                                                inputAttribs.put("name", "isindex");                                                tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                                tb.process(new org.jsoup.parser.Token.EndTag("label"));                                                tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                                tb.process(new org.jsoup.parser.Token.EndTag("form"));                                            }else                                                if (name.equals("textarea")) {                                                    tb.insert(startTag);                                                    tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                    tb.markInsertionMode();                                                    tb.framesetOk(false);                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                                }else                                                    if (name.equals("xmp")) {                                                        if (tb.inButtonScope("p")) {                                                            tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                        }                                                        tb.reconstructFormattingElements();                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("iframe")) {                                                            tb.framesetOk(false);                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("noembed")) {                                                                org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                            }else                                                                if (name.equals("select")) {                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                    tb.framesetOk(false);                                                                    org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                    if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                    else                                                                        tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                        if (tb.currentElement().nodeName().equals("option"))                                                                            tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                        tb.reconstructFormattingElements();                                                                        tb.insert(startTag);                                                                    }else                                                                        if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                            if (tb.inScope("ruby")) {                                                                                tb.generateImpliedEndTags();                                                                                if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                    tb.error(this);                                                                                    tb.popStackToBefore("ruby");                                                                                }                                                                                tb.insert(startTag);                                                                            }                                                                        }else                                                                            if (name.equals("math")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (name.equals("svg")) {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                    tb.tokeniser.acknowledgeSelfClosingFlag();                                                                                }else                                                                                    if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                        tb.error(this);                                                                                        return false;                                                                                    }else {                                                                                        tb.reconstructFormattingElements();                                                                                        tb.insert(startTag);                                                                                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	7.74257405768373E-7
3404	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	7.680831425145361E-7
3405	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"track"	7.652229390544008E-7
3406	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"source"	7.652229390544008E-7
3407	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"param"	7.652229390544008E-7
3408	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	7.637638448766393E-7
3409	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	7.483710611380854E-7
3410	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	7.437442944810652E-7
3411	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	7.349787066772239E-7
3412	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	7.34827362612408E-7
3413	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	7.214298691215555E-7
3414	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	7.12223116031547E-7
3415	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"name"	7.107973988607926E-7
3416	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	7.103331171919945E-7
3417	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	6.909661077974771E-7
3418	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	6.844334655768603E-7
3419	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"textarea"	6.762825535941305E-7
3420	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	6.754945090045788E-7
3421	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"track"	6.678424705483917E-7
3422	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"source"	6.678424705483917E-7
3423	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"param"	6.678424705483917E-7
3424	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"track"	6.639857714416075E-7
3425	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"source"	6.639857714416075E-7
3426	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"param"	6.639857714416075E-7
3427	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	6.625756471767654E-7
3428	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	6.606684701497792E-7
3429	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::org.jsoup.parser.HtmlTreeBuilderState.nullString	6.551091348083851E-7
3430	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	6.313620397687289E-7
3431	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	6.313620397687289E-7
3432	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	6.311201584596468E-7
3433	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"textarea"	6.197655848512065E-7
3434	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"image"	6.099706142990953E-7
3435	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::closeCell(tb)	6.098015969237951E-7
3436	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"image"	6.085983608853714E-7
3437	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	6.056203540774388E-7
3438	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"noscript"	5.961523006558683E-7
3439	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	5.919424567151224E-7
3440	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	5.854330089415242E-7
3441	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	5.849675628632362E-7
3442	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	5.843705170922656E-7
3443	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	5.789548917552306E-7
3444	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::prompt	5.712565420917314E-7
3445	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.RCDATAEndTagName	5.649533820436133E-7
3446	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"noscript"	5.496563557956401E-7
3447	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"name"	5.451449793172819E-7
3448	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	5.259334653830391E-7
3449	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"textarea"	5.2388581330313E-7
3450	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"image"	5.194081567791715E-7
3451	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	5.156986317921901E-7
3452	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"image"	5.14302130313299E-7
3453	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"textarea"	5.089594140413115E-7
3454	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	5.025586446993484E-7
3455	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagName	5.021807840387673E-7
3456	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeStart	5.021807840387673E-7
3457	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	5.014632143487424E-7
3458	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	5.004722482274355E-7
3459	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	4.763307297600637E-7
3460	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	4.735451699369055E-7
3461	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"ruby"	4.7197138510756636E-7
3462	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"noscript"	4.6486470324670365E-7
3463	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	4.6036815399803156E-7
3464	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	4.596173708211142E-7
3465	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"noscript"	4.5223684640777084E-7
3466	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"name"	4.4387568829064867E-7
3467	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	4.289762127663732E-7
3468	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	4.249967397034658E-7
3469	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"xmp"	4.1696895154542766E-7
3470	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	4.085487740632126E-7
3471	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	4.035971295784926E-7
3472	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	3.978896188125844E-7
3473	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	3.9250321192785964E-7
3474	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	3.9049084490904464E-7
3475	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"name"	3.8805856200942787E-7
3476	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	3.8745442755926977E-7
3477	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	3.7702019107232304E-7
3478	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	3.699386951769896E-7
3479	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.687752927168849E-7
3480	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30134::::name.equals("li")::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.687752927168849E-7
3481	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	3.6171783528416766E-7
3482	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	3.5267488940206345E-7
3483	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::attr	3.524053008803162E-7
3484	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::inputAttribs	3.506477528561731E-7
3485	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	3.491234978358362E-7
3486	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::attribute	3.4904905991955135E-7
3487	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"label"	3.489779973883672E-7
3488	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"label"	3.4275610811811705E-7
3489	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	3.3458899763785503E-7
3490	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"iframe"	3.329861688356866E-7
3491	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"xmp"	3.2548545150751424E-7
3492	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	3.1989591969772864E-7
3493	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::inputAttribs	3.139956637425811E-7
3494	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	3.088722697075587E-7
3495	org.jsoup.parser.HtmlTreeBuilderState::::400::::18070::::26999::::if (name.equals("a")) {    if ((tb.getActiveFormattingElement("a")) != null) {        tb.error(this);        tb.process(new org.jsoup.parser.Token.EndTag("a"));        org.jsoup.nodes.Element remainingA = tb.getFromStack("a");        if (remainingA != null) {            tb.removeFromActiveFormattingElements(remainingA);            tb.removeFromStack(remainingA);        }    }    tb.reconstructFormattingElements();    org.jsoup.nodes.Element a = tb.insert(startTag);    tb.pushActiveFormattingElements(a);}else    if (org.jsoup.helper.StringUtil.in(name, "b", "big", "code", "em", "font", "i", "s", "small", "strike", "strong", "tt", "u")) {        tb.reconstructFormattingElements();        org.jsoup.nodes.Element el = tb.insert(startTag);        tb.pushActiveFormattingElements(el);    }else        if (name.equals("nobr")) {            tb.reconstructFormattingElements();            if (tb.inScope("nobr")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.EndTag("nobr"));                tb.reconstructFormattingElements();            }            org.jsoup.nodes.Element el = tb.insert(startTag);            tb.pushActiveFormattingElements(el);        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                tb.reconstructFormattingElements();                tb.insert(startTag);                tb.insertMarkerToFormattingElements();                tb.framesetOk(false);            }else                if (name.equals("table")) {                    if (((tb.getDocument().quirksMode()) != (org.jsoup.nodes.Document.QuirksMode.quirks)) && (tb.inButtonScope("p"))) {                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                    }                    tb.insert(startTag);                    tb.framesetOk(false);                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InTable);                }else                    if (org.jsoup.helper.StringUtil.in(name, "area", "br", "embed", "img", "keygen", "wbr")) {                        tb.reconstructFormattingElements();                        tb.insertEmpty(startTag);                        tb.framesetOk(false);                    }else                        if (name.equals("input")) {                            tb.reconstructFormattingElements();                            org.jsoup.nodes.Element el = tb.insertEmpty(startTag);                            if (!(el.attr("type").equalsIgnoreCase("hidden")))                                tb.framesetOk(false);                        }else                            if (org.jsoup.helper.StringUtil.in(name, "param", "source", "track")) {                                tb.insertEmpty(startTag);                            }else                                if (name.equals("hr")) {                                    if (tb.inButtonScope("p")) {                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                    }                                    tb.insertEmpty(startTag);                                    tb.framesetOk(false);                                }else                                    if (name.equals("image")) {                                        startTag.name("img");                                        return tb.process(startTag);                                    }else                                        if (name.equals("isindex")) {                                            tb.error(this);                                            if ((tb.getFormElement()) != null)                                                return false;                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                            tb.process(new org.jsoup.parser.Token.StartTag("form"));                                            if (startTag.attributes.hasKey("action")) {                                                org.jsoup.nodes.Element form = tb.getFormElement();                                                form.attr("action", startTag.attributes.get("action"));                                            }                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.StartTag("label"));                                            java.lang.String prompt = (startTag.attributes.hasKey("prompt")) ? startTag.attributes.get("prompt") : "This is a searchable index. Enter search keywords: ";                                            tb.process(new org.jsoup.parser.Token.Character(prompt));                                            org.jsoup.nodes.Attributes inputAttribs = new org.jsoup.nodes.Attributes();                                            for (org.jsoup.nodes.Attribute attr : startTag.attributes) {                                                if (!(org.jsoup.helper.StringUtil.in(attr.getKey(), "name", "action", "prompt")))                                                    inputAttribs.put(attr);                                            }                                            inputAttribs.put("name", "isindex");                                            tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs));                                            tb.process(new org.jsoup.parser.Token.EndTag("label"));                                            tb.process(new org.jsoup.parser.Token.StartTag("hr"));                                            tb.process(new org.jsoup.parser.Token.EndTag("form"));                                        }else                                            if (name.equals("textarea")) {                                                tb.insert(startTag);                                                tb.tokeniser.transition(org.jsoup.parser.TokeniserState.Rcdata);                                                tb.markInsertionMode();                                                tb.framesetOk(false);                                                tb.transition(org.jsoup.parser.HtmlTreeBuilderState.Text);                                            }else                                                if (name.equals("xmp")) {                                                    if (tb.inButtonScope("p")) {                                                        tb.process(new org.jsoup.parser.Token.EndTag("p"));                                                    }                                                    tb.reconstructFormattingElements();                                                    tb.framesetOk(false);                                                    org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                }else                                                    if (name.equals("iframe")) {                                                        tb.framesetOk(false);                                                        org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                    }else                                                        if (name.equals("noembed")) {                                                            org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb);                                                        }else                                                            if (name.equals("select")) {                                                                tb.reconstructFormattingElements();                                                                tb.insert(startTag);                                                                tb.framesetOk(false);                                                                org.jsoup.parser.HtmlTreeBuilderState state = tb.state();                                                                if (((((state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTable)) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCaption))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InTableBody))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InRow))) || (state.equals(org.jsoup.parser.HtmlTreeBuilderState.InCell)))                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelectInTable);                                                                else                                                                    tb.transition(org.jsoup.parser.HtmlTreeBuilderState.InSelect);                                                            }else                                                                if (org.jsoup.helper.StringUtil.in("optgroup", "option")) {                                                                    if (tb.currentElement().nodeName().equals("option"))                                                                        tb.process(new org.jsoup.parser.Token.EndTag("option"));                                                                    tb.reconstructFormattingElements();                                                                    tb.insert(startTag);                                                                }else                                                                    if (org.jsoup.helper.StringUtil.in("rp", "rt")) {                                                                        if (tb.inScope("ruby")) {                                                                            tb.generateImpliedEndTags();                                                                            if (!(tb.currentElement().nodeName().equals("ruby"))) {                                                                                tb.error(this);                                                                                tb.popStackToBefore("ruby");                                                                            }                                                                            tb.insert(startTag);                                                                        }                                                                    }else                                                                        if (name.equals("math")) {                                                                            tb.reconstructFormattingElements();                                                                            tb.insert(startTag);                                                                            tb.tokeniser.acknowledgeSelfClosingFlag();                                                                        }else                                                                            if (name.equals("svg")) {                                                                                tb.reconstructFormattingElements();                                                                                tb.insert(startTag);                                                                                tb.tokeniser.acknowledgeSelfClosingFlag();                                                                            }else                                                                                if (org.jsoup.helper.StringUtil.in(name, "caption", "col", "colgroup", "frame", "head", "tbody", "td", "tfoot", "th", "thead", "tr")) {                                                                                    tb.error(this);                                                                                    return false;                                                                                }else {                                                                                    tb.reconstructFormattingElements();                                                                                    tb.insert(startTag);                                                                                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	3.088722697075587E-7
3496	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"xmp"	2.9474326325273455E-7
3497	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	2.893742682273341E-7
3498	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"noembed"	2.771175001339772E-7
3499	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	2.7134028902932336E-7
3500	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"iframe"	2.7073677083503656E-7
3501	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.677479460131835E-7
3502	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::childNode	2.595493009658202E-7
3503	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"label"	2.5690460107839697E-7
3504	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.560762021225058E-7
3505	org.jsoup.parser.HtmlTreeBuilderState::::645::::31854::::38455::::if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {    OUTER : for (int i = 0; i < 8; i++) {        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);        if (formatEl == null)            return anyOtherEndTag(t, tb);        else            if (!(tb.onStack(formatEl))) {                tb.error(this);                tb.removeFromActiveFormattingElements(formatEl);                return true;            }else                if (!(tb.inScope(formatEl.nodeName()))) {                    tb.error(this);                    return false;                }else                    if ((tb.currentElement()) != formatEl)                        tb.error(this);        org.jsoup.nodes.Element furthestBlock = null;        org.jsoup.nodes.Element commonAncestor = null;        boolean seenFormattingElement = false;        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {            org.jsoup.nodes.Element el = stack.get(si);            if (el == formatEl) {                commonAncestor = stack.get((si - 1));                seenFormattingElement = true;            }else                if (seenFormattingElement && (tb.isSpecial(el))) {                    furthestBlock = el;                    break;                }        }        if (furthestBlock == null) {            tb.popStackToClose(formatEl.nodeName());            tb.removeFromActiveFormattingElements(formatEl);            return true;        }        org.jsoup.nodes.Element node = furthestBlock;        org.jsoup.nodes.Element lastNode = furthestBlock;        INNER : for (int j = 0; j < 3; j++) {            if (tb.onStack(node))                node = tb.aboveOnStack(node);            if (!(tb.isInActiveFormattingElements(node))) {                tb.removeFromStack(node);                continue INNER;            }else                if (node == formatEl)                    break INNER;            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());            tb.replaceActiveFormattingElement(node, replacement);            tb.replaceOnStack(node, replacement);            node = replacement;            if (lastNode == furthestBlock) {            }            if ((lastNode.parent()) != null)                lastNode.remove();            node.appendChild(lastNode);            lastNode = node;        }        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {            if ((lastNode.parent()) != null)                lastNode.remove();            tb.insertInFosterParent(lastNode);        }else {            if ((lastNode.parent()) != null)                lastNode.remove();            commonAncestor.appendChild(lastNode);        }        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);        for (org.jsoup.nodes.Node childNode : childNodes) {            adopter.appendChild(childNode);        }        furthestBlock.appendChild(adopter);        tb.removeFromActiveFormattingElements(formatEl);        tb.removeFromStack(formatEl);        tb.insertOnStackAfter(furthestBlock, adopter);    }}else    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {        if (!(tb.inScope("name"))) {            if (!(tb.inScope(name))) {                tb.error(this);                return false;            }            tb.generateImpliedEndTags();            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);            tb.clearFormattingElementsToLastMarker();        }    }else        if (name.equals("br")) {            tb.error(this);            tb.process(new org.jsoup.parser.Token.StartTag("br"));            return false;        }else {            return anyOtherEndTag(t, tb);        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.560762021225058E-7
3506	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataDoubleEscapeEnd	2.5109039201938366E-7
3507	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"This is a searchable index. Enter search keywords: "	2.505272327439206E-7
3508	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"xmp"	2.4888773934889886E-7
3509	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"This is a searchable index. Enter search keywords: "	2.4276809616199555E-7
3510	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"xmp"	2.411393386243096E-7
3511	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"iframe"	2.3694887269214593E-7
3512	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	2.3543165892078733E-7
3513	org.jsoup.parser.HtmlTreeBuilderState::::649::::32115::::37512::::OUTER : for (int i = 0; i < 8; i++) {    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);    if (formatEl == null)        return anyOtherEndTag(t, tb);    else        if (!(tb.onStack(formatEl))) {            tb.error(this);            tb.removeFromActiveFormattingElements(formatEl);            return true;        }else            if (!(tb.inScope(formatEl.nodeName()))) {                tb.error(this);                return false;            }else                if ((tb.currentElement()) != formatEl)                    tb.error(this);    org.jsoup.nodes.Element furthestBlock = null;    org.jsoup.nodes.Element commonAncestor = null;    boolean seenFormattingElement = false;    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {        org.jsoup.nodes.Element el = stack.get(si);        if (el == formatEl) {            commonAncestor = stack.get((si - 1));            seenFormattingElement = true;        }else            if (seenFormattingElement && (tb.isSpecial(el))) {                furthestBlock = el;                break;            }    }    if (furthestBlock == null) {        tb.popStackToClose(formatEl.nodeName());        tb.removeFromActiveFormattingElements(formatEl);        return true;    }    org.jsoup.nodes.Element node = furthestBlock;    org.jsoup.nodes.Element lastNode = furthestBlock;    INNER : for (int j = 0; j < 3; j++) {        if (tb.onStack(node))            node = tb.aboveOnStack(node);        if (!(tb.isInActiveFormattingElements(node))) {            tb.removeFromStack(node);            continue INNER;        }else            if (node == formatEl)                break INNER;        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());        tb.replaceActiveFormattingElement(node, replacement);        tb.replaceOnStack(node, replacement);        node = replacement;        if (lastNode == furthestBlock) {        }        if ((lastNode.parent()) != null)            lastNode.remove();        node.appendChild(lastNode);        lastNode = node;    }    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {        if ((lastNode.parent()) != null)            lastNode.remove();        tb.insertInFosterParent(lastNode);    }else {        if ((lastNode.parent()) != null)            lastNode.remove();        commonAncestor.appendChild(lastNode);    }    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);    for (org.jsoup.nodes.Node childNode : childNodes) {        adopter.appendChild(childNode);    }    furthestBlock.appendChild(adopter);    tb.removeFromActiveFormattingElements(formatEl);    tb.removeFromStack(formatEl);    tb.insertOnStackAfter(furthestBlock, adopter);}::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	2.3543165892078733E-7
3514	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"noembed"	2.31790391352827E-7
3515	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"ruby"	2.2652236804278766E-7
3516	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscapedEndTagOpen	2.1970409301696074E-7
3517	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AfterDoctypeSystemKeyword	2.1970409301696074E-7
3518	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	2.1421601765472902E-7
3519	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"label"	2.1299652377404494E-7
3520	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	2.117025465600283E-7
3521	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"ruby"	2.0301194152611817E-7
3522	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	1.999349498110804E-7
3523	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"iframe"	1.994795981423456E-7
3524	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"noembed"	1.9813477776573095E-7
3525	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"label"	1.9631197842829879E-7
3526	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"iframe"	1.9172468720296517E-7
3527	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	1.8851009553616152E-7
3528	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	1.8851009553616152E-7
3529	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEscapeStartDash	1.8831779401453776E-7
3530	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.ScriptDataEndTagName	1.8831779401453776E-7
3531	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.RawtextEndTagOpen	1.8831779401453776E-7
3532	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.RawtextEndTagName	1.8831779401453776E-7
3533	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.RCDATAEndTagOpen	1.8831779401453776E-7
3534	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CommentStart	1.8831779401453776E-7
3535	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.CdataSection	1.8831779401453776E-7
3536	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.AfterDoctypePublicKeyword	1.8831779401453776E-7
3537	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"This is a searchable index. Enter search keywords: "	1.8395035982927142E-7
3538	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"frame"	1.7739131911376232E-7
3539	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	1.7280092090814806E-7
3540	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.6770554181356862E-7
3541	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::if (notIgnored)    return tb.process(endTag);	1.6698282983564024E-7
3542	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"noembed"	1.6644288860151523E-7
3543	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	1.6566038698632377E-7
3544	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.593737773887997E-7
3545	org.jsoup.parser.HtmlTreeBuilderState::::642::::31709::::38455::::if (name.equals("sarcasm")) {    return anyOtherEndTag(t, tb);}else    if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {        OUTER : for (int i = 0; i < 8; i++) {            org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);            if (formatEl == null)                return anyOtherEndTag(t, tb);            else                if (!(tb.onStack(formatEl))) {                    tb.error(this);                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }else                    if (!(tb.inScope(formatEl.nodeName()))) {                        tb.error(this);                        return false;                    }else                        if ((tb.currentElement()) != formatEl)                            tb.error(this);            org.jsoup.nodes.Element furthestBlock = null;            org.jsoup.nodes.Element commonAncestor = null;            boolean seenFormattingElement = false;            java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();            for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                org.jsoup.nodes.Element el = stack.get(si);                if (el == formatEl) {                    commonAncestor = stack.get((si - 1));                    seenFormattingElement = true;                }else                    if (seenFormattingElement && (tb.isSpecial(el))) {                        furthestBlock = el;                        break;                    }            }            if (furthestBlock == null) {                tb.popStackToClose(formatEl.nodeName());                tb.removeFromActiveFormattingElements(formatEl);                return true;            }            org.jsoup.nodes.Element node = furthestBlock;            org.jsoup.nodes.Element lastNode = furthestBlock;            INNER : for (int j = 0; j < 3; j++) {                if (tb.onStack(node))                    node = tb.aboveOnStack(node);                if (!(tb.isInActiveFormattingElements(node))) {                    tb.removeFromStack(node);                    continue INNER;                }else                    if (node == formatEl)                        break INNER;                org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                tb.replaceActiveFormattingElement(node, replacement);                tb.replaceOnStack(node, replacement);                node = replacement;                if (lastNode == furthestBlock) {                }                if ((lastNode.parent()) != null)                    lastNode.remove();                node.appendChild(lastNode);                lastNode = node;            }            if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                if ((lastNode.parent()) != null)                    lastNode.remove();                tb.insertInFosterParent(lastNode);            }else {                if ((lastNode.parent()) != null)                    lastNode.remove();                commonAncestor.appendChild(lastNode);            }            org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());            org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);            for (org.jsoup.nodes.Node childNode : childNodes) {                adopter.appendChild(childNode);            }            furthestBlock.appendChild(adopter);            tb.removeFromActiveFormattingElements(formatEl);            tb.removeFromStack(formatEl);            tb.insertOnStackAfter(furthestBlock, adopter);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {            if (!(tb.inScope("name"))) {                if (!(tb.inScope(name))) {                    tb.error(this);                    return false;                }                tb.generateImpliedEndTags();                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose(name);                tb.clearFormattingElementsToLastMarker();            }        }else            if (name.equals("br")) {                tb.error(this);                tb.process(new org.jsoup.parser.Token.StartTag("br"));                return false;            }else {                return anyOtherEndTag(t, tb);            }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.593737773887997E-7
3546	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"noembed"	1.590498168879098E-7
3547	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	1.570917462801346E-7
3548	org.jsoup.parser.TokeniserState::::901::::30491::::30494::::org.jsoup.parser.TokeniserState.Data::::org.jsoup.parser.TokeniserState.Doctype	1.569314950121148E-7
3549	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"ruby"	1.5489893037568505E-7
3550	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"This is a searchable index. Enter search keywords: "	1.526880874669806E-7
3551	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::inputAttribs	1.5122186169432138E-7
3552	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::prompt	1.4347930107270017E-7
3553	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"This is a searchable index. Enter search keywords: "	1.411878464007217E-7
3554	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"type"	1.359277589109791E-7
3555	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::attribute	1.3103313302907008E-7
3556	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"hidden"	1.3089339746983175E-7
3557	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::prompt	1.3074198830503414E-7
3558	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	1.2070759233685828E-7
3559	org.jsoup.parser.HtmlTreeBuilderState::::632::::31110::::38455::::if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {    if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");    }}else    if (name.equals("sarcasm")) {        return anyOtherEndTag(t, tb);    }else        if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {            OUTER : for (int i = 0; i < 8; i++) {                org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                if (formatEl == null)                    return anyOtherEndTag(t, tb);                else                    if (!(tb.onStack(formatEl))) {                        tb.error(this);                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }else                        if (!(tb.inScope(formatEl.nodeName()))) {                            tb.error(this);                            return false;                        }else                            if ((tb.currentElement()) != formatEl)                                tb.error(this);                org.jsoup.nodes.Element furthestBlock = null;                org.jsoup.nodes.Element commonAncestor = null;                boolean seenFormattingElement = false;                java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                    org.jsoup.nodes.Element el = stack.get(si);                    if (el == formatEl) {                        commonAncestor = stack.get((si - 1));                        seenFormattingElement = true;                    }else                        if (seenFormattingElement && (tb.isSpecial(el))) {                            furthestBlock = el;                            break;                        }                }                if (furthestBlock == null) {                    tb.popStackToClose(formatEl.nodeName());                    tb.removeFromActiveFormattingElements(formatEl);                    return true;                }                org.jsoup.nodes.Element node = furthestBlock;                org.jsoup.nodes.Element lastNode = furthestBlock;                INNER : for (int j = 0; j < 3; j++) {                    if (tb.onStack(node))                        node = tb.aboveOnStack(node);                    if (!(tb.isInActiveFormattingElements(node))) {                        tb.removeFromStack(node);                        continue INNER;                    }else                        if (node == formatEl)                            break INNER;                    org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                    tb.replaceActiveFormattingElement(node, replacement);                    tb.replaceOnStack(node, replacement);                    node = replacement;                    if (lastNode == furthestBlock) {                    }                    if ((lastNode.parent()) != null)                        lastNode.remove();                    node.appendChild(lastNode);                    lastNode = node;                }                if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    tb.insertInFosterParent(lastNode);                }else {                    if ((lastNode.parent()) != null)                        lastNode.remove();                    commonAncestor.appendChild(lastNode);                }                org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                for (org.jsoup.nodes.Node childNode : childNodes) {                    adopter.appendChild(childNode);                }                furthestBlock.appendChild(adopter);                tb.removeFromActiveFormattingElements(formatEl);                tb.removeFromStack(formatEl);                tb.insertOnStackAfter(furthestBlock, adopter);            }        }else            if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                if (!(tb.inScope("name"))) {                    if (!(tb.inScope(name))) {                        tb.error(this);                        return false;                    }                    tb.generateImpliedEndTags();                    if (!(tb.currentElement().nodeName().equals(name)))                        tb.error(this);                    tb.popStackToClose(name);                    tb.clearFormattingElementsToLastMarker();                }            }else                if (name.equals("br")) {                    tb.error(this);                    tb.process(new org.jsoup.parser.Token.StartTag("br"));                    return false;                }else {                    return anyOtherEndTag(t, tb);                }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	1.2070759233685828E-7
3560	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::prompt	1.2042024007705926E-7
3561	org.jsoup.parser.TokeniserState::::813::::27330::::27350::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.1517898079214498E-7
3562	org.jsoup.parser.TokeniserState::::813::::27330::::27350::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	1.1517898079214498E-7
3563	org.jsoup.parser.TokeniserState::::813::::27330::::27350::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	1.1517898079214498E-7
3564	org.jsoup.parser.TokeniserState::::813::::27330::::27350::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	1.1517898079214498E-7
3565	org.jsoup.parser.TokeniserState::::813::::27330::::27350::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.1517898079214498E-7
3566	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::prompt	1.1118655765480126E-7
3567	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::attribute	1.1059811614177188E-7
3568	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::attr	1.1054904523544374E-7
3569	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"frame"	1.0969983462208167E-7
3570	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::new org.jsoup.nodes.Attributes()	1.0963720471832058E-7
3571	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"ruby"	1.0789440340253665E-7
3572	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::prompt	1.0754146091653828E-7
3573	org.jsoup.parser.TokeniserState::::887::::30021::::30041::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.0339557689481609E-7
3574	org.jsoup.parser.TokeniserState::::887::::30021::::30041::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	1.0339557689481609E-7
3575	org.jsoup.parser.TokeniserState::::887::::30021::::30041::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	1.0339557689481609E-7
3576	org.jsoup.parser.TokeniserState::::887::::30021::::30041::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	1.0339557689481609E-7
3577	org.jsoup.parser.TokeniserState::::887::::30021::::30041::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	1.0339557689481609E-7
3578	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	1.0282368847426992E-7
3579	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::prompt	1.0211509987187474E-7
3580	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"math"	1.013864456897735E-7
3581	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"frame"	9.087781806854858E-8
3582	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	9.04294588210419E-8
3583	org.jsoup.parser.HtmlTreeBuilderState::::622::::30609::::38455::::if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {    if (!(tb.inScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {        if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");        }    }else        if (name.equals("sarcasm")) {            return anyOtherEndTag(t, tb);        }else            if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                OUTER : for (int i = 0; i < 8; i++) {                    org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                    if (formatEl == null)                        return anyOtherEndTag(t, tb);                    else                        if (!(tb.onStack(formatEl))) {                            tb.error(this);                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }else                            if (!(tb.inScope(formatEl.nodeName()))) {                                tb.error(this);                                return false;                            }else                                if ((tb.currentElement()) != formatEl)                                    tb.error(this);                    org.jsoup.nodes.Element furthestBlock = null;                    org.jsoup.nodes.Element commonAncestor = null;                    boolean seenFormattingElement = false;                    java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                    for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                        org.jsoup.nodes.Element el = stack.get(si);                        if (el == formatEl) {                            commonAncestor = stack.get((si - 1));                            seenFormattingElement = true;                        }else                            if (seenFormattingElement && (tb.isSpecial(el))) {                                furthestBlock = el;                                break;                            }                    }                    if (furthestBlock == null) {                        tb.popStackToClose(formatEl.nodeName());                        tb.removeFromActiveFormattingElements(formatEl);                        return true;                    }                    org.jsoup.nodes.Element node = furthestBlock;                    org.jsoup.nodes.Element lastNode = furthestBlock;                    INNER : for (int j = 0; j < 3; j++) {                        if (tb.onStack(node))                            node = tb.aboveOnStack(node);                        if (!(tb.isInActiveFormattingElements(node))) {                            tb.removeFromStack(node);                            continue INNER;                        }else                            if (node == formatEl)                                break INNER;                        org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                        tb.replaceActiveFormattingElement(node, replacement);                        tb.replaceOnStack(node, replacement);                        node = replacement;                        if (lastNode == furthestBlock) {                        }                        if ((lastNode.parent()) != null)                            lastNode.remove();                        node.appendChild(lastNode);                        lastNode = node;                    }                    if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        tb.insertInFosterParent(lastNode);                    }else {                        if ((lastNode.parent()) != null)                            lastNode.remove();                        commonAncestor.appendChild(lastNode);                    }                    org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                    org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                    for (org.jsoup.nodes.Node childNode : childNodes) {                        adopter.appendChild(childNode);                    }                    furthestBlock.appendChild(adopter);                    tb.removeFromActiveFormattingElements(formatEl);                    tb.removeFromStack(formatEl);                    tb.insertOnStackAfter(furthestBlock, adopter);                }            }else                if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                    if (!(tb.inScope("name"))) {                        if (!(tb.inScope(name))) {                            tb.error(this);                            return false;                        }                        tb.generateImpliedEndTags();                        if (!(tb.currentElement().nodeName().equals(name)))                            tb.error(this);                        tb.popStackToClose(name);                        tb.clearFormattingElementsToLastMarker();                    }                }else                    if (name.equals("br")) {                        tb.error(this);                        tb.process(new org.jsoup.parser.Token.StartTag("br"));                        return false;                    }else {                        return anyOtherEndTag(t, tb);                    }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	9.04294588210419E-8
3584	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::prompt	8.916133553332115E-8
3585	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::prompt	8.33117373995932E-8
3586	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::attr	8.171723156224036E-8
3587	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"type"	8.136313627659312E-8
3588	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::childNode	8.014805779569671E-8
3589	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"hidden"	8.013036148452352E-8
3590	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"svg"	7.719354209759307E-8
3591	org.jsoup.parser.TokeniserState::::731::::24401::::24421::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	7.542074592670137E-8
3592	org.jsoup.parser.TokeniserState::::731::::24401::::24421::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.ScriptData)	7.542074592670137E-8
3593	org.jsoup.parser.TokeniserState::::731::::24401::::24421::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataEndTag(t, r, org.jsoup.parser.TokeniserState.Rawtext)	7.542074592670137E-8
3594	org.jsoup.parser.TokeniserState::::731::::24401::::24421::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataEscaped, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped)	7.542074592670137E-8
3595	org.jsoup.parser.TokeniserState::::731::::24401::::24421::::char c = r.consume()::::INSERT::::STATEMENT::::org.jsoup.parser.TokeniserState.handleDataDoubleEscapeTag(t, r, org.jsoup.parser.TokeniserState.ScriptDataDoubleEscaped, org.jsoup.parser.TokeniserState.ScriptDataEscaped)	7.542074592670137E-8
3596	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"math"	7.249400652253688E-8
3597	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"frame"	7.16005263534219E-8
3598	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::new org.jsoup.nodes.Attributes()	6.999421319417354E-8
3599	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"type"	6.803643445740176E-8
3600	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"hidden"	6.657328532928559E-8
3601	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::prompt	5.852901883206098E-8
3602	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::childNode	5.84334176376568E-8
3603	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"math"	5.775374752925203E-8
3604	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"frame"	5.625726959755804E-8
3605	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"type"	5.339605404820363E-8
3606	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"hidden"	5.2388581330312994E-8
3607	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::attribute	5.1237524903487725E-8
3608	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::new org.jsoup.nodes.Attributes()	4.8934209729218477E-8
3609	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"math"	4.625978896314496E-8
3610	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"svg"	4.602359223726479E-8
3611	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::new org.jsoup.nodes.Attributes()	4.544821371817751E-8
3612	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	4.28432035309458E-8
3613	org.jsoup.parser.HtmlTreeBuilderState::::612::::30114::::38455::::if (name.equals("li")) {    if (!(tb.inListItemScope(name))) {        tb.error(this);        return false;    }else {        tb.generateImpliedEndTags(name);        if (!(tb.currentElement().nodeName().equals(name)))            tb.error(this);        tb.popStackToClose(name);    }}else    if (org.jsoup.helper.StringUtil.in(name, "dd", "dt")) {        if (!(tb.inScope(name))) {            tb.error(this);            return false;        }else {            tb.generateImpliedEndTags(name);            if (!(tb.currentElement().nodeName().equals(name)))                tb.error(this);            tb.popStackToClose(name);        }    }else        if (org.jsoup.helper.StringUtil.in(name, "h1", "h2", "h3", "h4", "h5", "h6")) {            if (!(tb.inScope(new java.lang.String[]{ "h1", "h2", "h3", "h4", "h5", "h6" }))) {                tb.error(this);                return false;            }else {                tb.generateImpliedEndTags(name);                if (!(tb.currentElement().nodeName().equals(name)))                    tb.error(this);                tb.popStackToClose("h1", "h2", "h3", "h4", "h5", "h6");            }        }else            if (name.equals("sarcasm")) {                return anyOtherEndTag(t, tb);            }else                if (org.jsoup.helper.StringUtil.in(name, "a", "b", "big", "code", "em", "font", "i", "nobr", "s", "small", "strike", "strong", "tt", "u")) {                    OUTER : for (int i = 0; i < 8; i++) {                        org.jsoup.nodes.Element formatEl = tb.getActiveFormattingElement(name);                        if (formatEl == null)                            return anyOtherEndTag(t, tb);                        else                            if (!(tb.onStack(formatEl))) {                                tb.error(this);                                tb.removeFromActiveFormattingElements(formatEl);                                return true;                            }else                                if (!(tb.inScope(formatEl.nodeName()))) {                                    tb.error(this);                                    return false;                                }else                                    if ((tb.currentElement()) != formatEl)                                        tb.error(this);                        org.jsoup.nodes.Element furthestBlock = null;                        org.jsoup.nodes.Element commonAncestor = null;                        boolean seenFormattingElement = false;                        java.util.LinkedList<org.jsoup.nodes.Element> stack = tb.getStack();                        for (int si = 0; (si < (stack.size())) && (si < 64); si++) {                            org.jsoup.nodes.Element el = stack.get(si);                            if (el == formatEl) {                                commonAncestor = stack.get((si - 1));                                seenFormattingElement = true;                            }else                                if (seenFormattingElement && (tb.isSpecial(el))) {                                    furthestBlock = el;                                    break;                                }                        }                        if (furthestBlock == null) {                            tb.popStackToClose(formatEl.nodeName());                            tb.removeFromActiveFormattingElements(formatEl);                            return true;                        }                        org.jsoup.nodes.Element node = furthestBlock;                        org.jsoup.nodes.Element lastNode = furthestBlock;                        INNER : for (int j = 0; j < 3; j++) {                            if (tb.onStack(node))                                node = tb.aboveOnStack(node);                            if (!(tb.isInActiveFormattingElements(node))) {                                tb.removeFromStack(node);                                continue INNER;                            }else                                if (node == formatEl)                                    break INNER;                            org.jsoup.nodes.Element replacement = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(node.nodeName()), tb.getBaseUri());                            tb.replaceActiveFormattingElement(node, replacement);                            tb.replaceOnStack(node, replacement);                            node = replacement;                            if (lastNode == furthestBlock) {                            }                            if ((lastNode.parent()) != null)                                lastNode.remove();                            node.appendChild(lastNode);                            lastNode = node;                        }                        if (org.jsoup.helper.StringUtil.in(commonAncestor.nodeName(), "table", "tbody", "tfoot", "thead", "tr")) {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            tb.insertInFosterParent(lastNode);                        }else {                            if ((lastNode.parent()) != null)                                lastNode.remove();                            commonAncestor.appendChild(lastNode);                        }                        org.jsoup.nodes.Element adopter = new org.jsoup.nodes.Element(org.jsoup.parser.Tag.valueOf(name), tb.getBaseUri());                        org.jsoup.nodes.Node[] childNodes = furthestBlock.childNodes().toArray(new org.jsoup.nodes.Node[furthestBlock.childNodeSize()]);                        for (org.jsoup.nodes.Node childNode : childNodes) {                            adopter.appendChild(childNode);                        }                        furthestBlock.appendChild(adopter);                        tb.removeFromActiveFormattingElements(formatEl);                        tb.removeFromStack(formatEl);                        tb.insertOnStackAfter(furthestBlock, adopter);                    }                }else                    if (org.jsoup.helper.StringUtil.in(name, "applet", "marquee", "object")) {                        if (!(tb.inScope("name"))) {                            if (!(tb.inScope(name))) {                                tb.error(this);                                return false;                            }                            tb.generateImpliedEndTags();                            if (!(tb.currentElement().nodeName().equals(name)))                                tb.error(this);                            tb.popStackToClose(name);                            tb.clearFormattingElementsToLastMarker();                        }                    }else                        if (name.equals("br")) {                            tb.error(this);                            tb.process(new org.jsoup.parser.Token.StartTag("br"));                            return false;                        }else {                            return anyOtherEndTag(t, tb);                        }::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	4.28432035309458E-8
3614	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"rt"	4.265222887638747E-8
3615	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"rp"	4.265222887638747E-8
3616	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"type"	4.1384154729740084E-8
3617	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"hidden"	4.099001992279018E-8
3618	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"rt"	3.920908713665789E-8
3619	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"rp"	3.920908713665789E-8
3620	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"svg"	3.8529593707059066E-8
3621	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"math"	3.841719548853385E-8
3622	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::attr	3.415834993565848E-8
3623	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"svg"	3.0224181536719034E-8
3624	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"rt"	2.946619771900614E-8
3625	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"rp"	2.946619771900614E-8
3626	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::new org.jsoup.nodes.Attributes()	2.697633789790465E-8
3627	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"rt"	2.420733058264997E-8
3628	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"rp"	2.420733058264997E-8
3629	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::childNode	2.4129808736599773E-8
3630	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"svg"	2.338533187902773E-8
3631	org.jsoup.parser.HtmlTreeBuilderState::::612::::30118::::30121::::name::::"href"	2.1815566244971956E-8
3632	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"rt"	2.1732155327654518E-8
3633	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"rp"	2.1732155327654518E-8
3634	org.jsoup.parser.HtmlTreeBuilderState::::773::::39195::::39198::::name::::"href"	2.0135321603803348E-8
3635	org.jsoup.parser.HtmlTreeBuilderState::::642::::31713::::31716::::name::::"href"	1.511920765720039E-8
3636	org.jsoup.parser.HtmlTreeBuilderState::::400::::18074::::18077::::name::::"href"	1.2425496853984492E-8
3637	org.jsoup.parser.HtmlTreeBuilderState::::389::::17525::::17528::::name::::"href"	1.1167152863580658E-8
3638	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::org.jsoup.parser.Tokeniser.replacementChar	0.0
3639	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'`'	0.0
3640	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'\u0000'	0.0
3641	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'\t'	0.0
3642	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'\r'	0.0
3643	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'\n'	0.0
3644	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'\f'	0.0
3645	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'\''	0.0
3646	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'?'	0.0
3647	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'>'	0.0
3648	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'='	0.0
3649	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'<'	0.0
3650	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'/'	0.0
3651	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'-'	0.0
3652	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'&'	0.0
3653	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'"'	0.0
3654	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::'!'	0.0
3655	org.jsoup.parser.TokeniserState::::888::::30063::::30063::::c::::' '	0.0
3656	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::org.jsoup.parser.Tokeniser.replacementChar	0.0
3657	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'`'	0.0
3658	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'\u0000'	0.0
3659	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'\t'	0.0
3660	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'\r'	0.0
3661	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'\n'	0.0
3662	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'\f'	0.0
3663	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'\''	0.0
3664	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'?'	0.0
3665	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'>'	0.0
3666	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'='	0.0
3667	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'<'	0.0
3668	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'/'	0.0
3669	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'-'	0.0
3670	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'&'	0.0
3671	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'"'	0.0
3672	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::'!'	0.0
3673	org.jsoup.parser.TokeniserState::::814::::27372::::27372::::c::::' '	0.0
3674	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"script"	0.0
3675	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"]]>"	0.0
3676	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"[CDATA["	0.0
3677	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"SYSTEM"	0.0
3678	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"PUBLIC"	0.0
3679	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"DOCTYPE"	0.0
3680	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"</"	0.0
3681	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"<"	0.0
3682	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"<!"	0.0
3683	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"--"	0.0
3684	org.jsoup.parser.TokeniserState::::811::::27309::::27313::::value::::"--!"	0.0
3685	org.jsoup.parser.TokeniserState::::810::::27239::::27256::::(value.length()) > 0::::true	0.0
3686	org.jsoup.parser.TokeniserState::::810::::27239::::27256::::(value.length()) > 0::::ref != null	0.0
3687	org.jsoup.parser.TokeniserState::::810::::27239::::27256::::(value.length()) > 0::::false	0.0
3688	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::org.jsoup.parser.Tokeniser.replacementChar	0.0
3689	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'`'	0.0
3690	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'\u0000'	0.0
3691	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'\t'	0.0
3692	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'\r'	0.0
3693	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'\n'	0.0
3694	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'\f'	0.0
3695	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'\''	0.0
3696	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'?'	0.0
3697	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'>'	0.0
3698	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'='	0.0
3699	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'<'	0.0
3700	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'/'	0.0
3701	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'-'	0.0
3702	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'&'	0.0
3703	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'"'	0.0
3704	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::'!'	0.0
3705	org.jsoup.parser.TokeniserState::::809::::27212::::27219::::org.jsoup.parser.TokeniserState.nullChar::::' '	0.0
3706	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::org.jsoup.parser.Tokeniser.replacementChar	0.0
3707	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'`'	0.0
3708	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'\u0000'	0.0
3709	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'\t'	0.0
3710	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'\r'	0.0
3711	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'\n'	0.0
3712	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'\f'	0.0
3713	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'\''	0.0
3714	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'?'	0.0
3715	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'>'	0.0
3716	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'='	0.0
3717	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'<'	0.0
3718	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'/'	0.0
3719	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'-'	0.0
3720	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'&'	0.0
3721	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'"'	0.0
3722	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::'!'	0.0
3723	org.jsoup.parser.TokeniserState::::732::::24443::::24443::::c::::' '	0.0
3724	org.jsoup.parser.Token::::76::::2434::::2448::::newAttribute()::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	0.0
3725	org.jsoup.parser.Token::::65::::2022::::2030::::attribute::::new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())	0.0
3726	org.jsoup.parser.Token::::65::::2022::::2030::::attribute::::new org.jsoup.nodes.Attribute(pendingAttributeName, "")	0.0
3727	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::systemIdentifier.toString()	0.0
3728	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::publicIdentifier.toString()	0.0
3729	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::pendingAttributeValue.toString()	0.0
3730	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::name.toString()	0.0
3731	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::name()	0.0
3732	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::getData()	0.0
3733	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::data.toString()	0.0
3734	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::attributes.toString()	0.0
3735	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::((("<" + (name())) + " ") + (attributes.toString())) + ">"	0.0
3736	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::(("<" + (name())) + " ") + (attributes.toString())	0.0
3737	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::("</" + (name())) + ">"	0.0
3738	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::("<" + (name())) + ">"	0.0
3739	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::("<" + (name())) + " "	0.0
3740	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::("<!--" + (getData())) + "-->"	0.0
3741	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"TypeMayBeWeakened"	0.0
3742	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::">"	0.0
3743	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"</" + (name())	0.0
3744	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"</"	0.0
3745	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"<" + (name())	0.0
3746	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"<"	0.0
3747	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"<!--" + (getData())	0.0
3748	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"<!--"	0.0
3749	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::"-->"	0.0
3750	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::""	0.0
3751	org.jsoup.parser.Token::::64::::1934::::1953::::pendingAttributeName::::" "	0.0
3752	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::type = org.jsoup.parser.Token.TokenType.StartTag	0.0
3753	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::type = org.jsoup.parser.Token.TokenType.EndTag	0.0
3754	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::type = org.jsoup.parser.Token.TokenType.EOF	0.0
3755	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::type = org.jsoup.parser.Token.TokenType.Doctype	0.0
3756	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::type = org.jsoup.parser.Token.TokenType.Comment	0.0
3757	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::type = org.jsoup.parser.Token.TokenType.Character	0.0
3758	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::this.data = data	0.0
3759	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::this.attributes = attributes	0.0
3760	org.jsoup.parser.Token::::64::::1908::::1989::::attribute = new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())::::attributes = new org.jsoup.nodes.Attributes()	0.0
3761	org.jsoup.parser.Token::::64::::1908::::1916::::attribute::::new org.jsoup.nodes.Attribute(pendingAttributeName, pendingAttributeValue.toString())	0.0
3762	org.jsoup.parser.Token::::64::::1908::::1916::::attribute::::new org.jsoup.nodes.Attribute(pendingAttributeName, "")	0.0
3763	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.StartTag	0.0
3764	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.EndTag	0.0
3765	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.EOF	0.0
3766	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.Doctype	0.0
3767	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.Comment	0.0
3768	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.Character	0.0
3769	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::selfClosing	0.0
3770	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::forceQuirks	0.0
3771	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::false	0.0
3772	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::(tagName) == null	0.0
3773	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::(pendingAttributeName) == null	0.0
3774	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::(pendingAttributeName) != null	0.0
3775	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::(attributes) == null	0.0
3776	org.jsoup.parser.Token::::61::::1763::::1791::::(pendingAttributeValue) == null::::(attributes) != null	0.0
3777	org.jsoup.parser.Token::::61::::1763::::1783::::pendingAttributeValue::::new java.lang.StringBuilder()	0.0
3778	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::type = org.jsoup.parser.Token.TokenType.StartTag	0.0
3779	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::type = org.jsoup.parser.Token.TokenType.EndTag	0.0
3780	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::type = org.jsoup.parser.Token.TokenType.EOF	0.0
3781	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::type = org.jsoup.parser.Token.TokenType.Doctype	0.0
3782	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::type = org.jsoup.parser.Token.TokenType.Comment	0.0
3783	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::type = org.jsoup.parser.Token.TokenType.Character	0.0
3784	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::this.data = data	0.0
3785	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::this.attributes = attributes	0.0
3786	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::pendingAttributeName = null	0.0
3787	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::attributes = new org.jsoup.nodes.Attributes()	0.0
3788	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::newAttribute()	0.0
3789	org.jsoup.parser.Token::::133::::4054::::4097::::pendingAttributeValue = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::ensureAttributeValue()	0.0
3790	org.jsoup.parser.Token::::133::::4054::::4074::::pendingAttributeValue::::new java.lang.StringBuilder()	0.0
3791	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.StartTag	0.0
3792	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.EndTag	0.0
3793	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.EOF	0.0
3794	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.Doctype	0.0
3795	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.Comment	0.0
3796	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::type) == (org.jsoup.parser.Token.TokenType.Character	0.0
3797	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::selfClosing	0.0
3798	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::forceQuirks	0.0
3799	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::false	0.0
3800	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::(tagName) == null	0.0
3801	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::(pendingAttributeName) == null	0.0
3802	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::(pendingAttributeName) != null	0.0
3803	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::(attributes) == null	0.0
3804	org.jsoup.parser.Token::::132::::4007::::4035::::(pendingAttributeValue) == null::::(attributes) != null	0.0
3805	org.jsoup.parser.Token::::132::::4007::::4027::::pendingAttributeValue::::new java.lang.StringBuilder()	0.0
3806	org.jsoup.parser.Token::::132::::4003::::4097::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();::::INSERT::::STATEMENT::::newAttribute()	0.0
3807	org.jsoup.parser.Token::::132::::4003::::4097::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();::::INSERT::::STATEMENT::::ensureAttributeValue()	0.0
3808	org.jsoup.parser.Token::::118::::3625::::3630::::append::::systemIdentifier.toString()	0.0
3809	org.jsoup.parser.Token::::118::::3625::::3630::::append::::publicIdentifier.toString()	0.0
3810	org.jsoup.parser.Token::::118::::3625::::3630::::append::::pendingAttributeValue.toString()	0.0
3811	org.jsoup.parser.Token::::118::::3625::::3630::::append::::name.toString()	0.0
3812	org.jsoup.parser.Token::::118::::3625::::3630::::append::::name()	0.0
3813	org.jsoup.parser.Token::::118::::3625::::3630::::append::::getData()	0.0
3814	org.jsoup.parser.Token::::118::::3625::::3630::::append::::data.toString()	0.0
3815	org.jsoup.parser.Token::::118::::3625::::3630::::append::::attributes.toString()	0.0
3816	org.jsoup.parser.Token::::118::::3625::::3630::::append::::((("<" + (name())) + " ") + (attributes.toString())) + ">"	0.0
3817	org.jsoup.parser.Token::::118::::3625::::3630::::append::::(("<" + (name())) + " ") + (attributes.toString())	0.0
3818	org.jsoup.parser.Token::::118::::3625::::3630::::append::::("</" + (name())) + ">"	0.0
3819	org.jsoup.parser.Token::::118::::3625::::3630::::append::::("<" + (name())) + ">"	0.0
3820	org.jsoup.parser.Token::::118::::3625::::3630::::append::::("<" + (name())) + " "	0.0
3821	org.jsoup.parser.Token::::118::::3625::::3630::::append::::("<!--" + (getData())) + "-->"	0.0
3822	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"TypeMayBeWeakened"	0.0
3823	org.jsoup.parser.Token::::118::::3625::::3630::::append::::">"	0.0
3824	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"</" + (name())	0.0
3825	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"</"	0.0
3826	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"<" + (name())	0.0
3827	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"<"	0.0
3828	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"<!--" + (getData())	0.0
3829	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"<!--"	0.0
3830	org.jsoup.parser.Token::::118::::3625::::3630::::append::::"-->"	0.0
3831	org.jsoup.parser.Token::::118::::3625::::3630::::append::::""	0.0
3832	org.jsoup.parser.Token::::118::::3625::::3630::::append::::" "	0.0
3833	org.jsoup.parser.Token::::118::::3596::::3632::::pendingAttributeValue.append(append)::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	0.0
3834	org.jsoup.parser.Token::::117::::3560::::3582::::ensureAttributeValue()::::INSERT::::STATEMENT::::if ((pendingAttributeValue) == null)    pendingAttributeValue = new java.lang.StringBuilder();	0.0
3835	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::true	0.0
3836	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::isEmpty()	0.0
3837	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::false	0.0
3838	org.jsoup.parser.Tag::::82::::2641::::2653::::formatAsBlock::::!(isEmpty())	0.0
3839	org.jsoup.parser.ParseErrorList::::20::::449::::455::::maxSize::::16	0.0
3840	org.jsoup.parser.ParseErrorList::::20::::449::::455::::maxSize::::0	0.0
3841	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
3842	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
3843	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
3844	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
3845	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(t)	0.0
3846	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
3847	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
3848	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
3849	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
3850	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
3851	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
3852	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
3853	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
3854	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
3855	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
3856	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
3857	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
3858	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
3859	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
3860	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
3861	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
3862	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
3863	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
3864	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
3865	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
3866	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
3867	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
3868	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
3869	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
3870	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
3871	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
3872	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
3873	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
3874	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
3875	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::handleMissingTr(t, tb)	0.0
3876	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::exitTableBody(t, tb)	0.0
3877	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::anythingElse(t, tb)	0.0
3878	org.jsoup.parser.HtmlTreeBuilderState::::784::::39575::::39578::::true::::anyOtherEndTag(t, tb)	0.0
3879	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
3880	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
3881	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
3882	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
3883	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
3884	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
3885	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
3886	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
3887	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
3888	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
3889	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
3890	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
3891	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
3892	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
3893	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
3894	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
3895	org.jsoup.parser.HtmlTreeBuilderState::::776::::39346::::39351::::break::::INSERT::::STATEMENT::::closeCell(tb)	0.0
3896	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"xmp"	0.0
3897	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"wbr"	0.0
3898	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"ul"	0.0
3899	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"u"	0.0
3900	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"type"	0.0
3901	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"tt"	0.0
3902	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"track"	0.0
3903	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"tr"	0.0
3904	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"title"	0.0
3905	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"thead"	0.0
3906	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"th"	0.0
3907	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"tfoot"	0.0
3908	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"textarea"	0.0
3909	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"td"	0.0
3910	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"tbody"	0.0
3911	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"table"	0.0
3912	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"svg"	0.0
3913	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"summary"	0.0
3914	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"style"	0.0
3915	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"strong"	0.0
3916	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"strike"	0.0
3917	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"source"	0.0
3918	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"small"	0.0
3919	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"select"	0.0
3920	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"section"	0.0
3921	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"script"	0.0
3922	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"sarcasm"	0.0
3923	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"s"	0.0
3924	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"ruby"	0.0
3925	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"rt"	0.0
3926	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"rp"	0.0
3927	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"prompt"	0.0
3928	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"pre"	0.0
3929	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"plaintext"	0.0
3930	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"param"	0.0
3931	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"p"	0.0
3932	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"option"	0.0
3933	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"optgroup"	0.0
3934	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"ol"	0.0
3935	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"object"	0.0
3936	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"noscript"	0.0
3937	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"noframes"	0.0
3938	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"noembed"	0.0
3939	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"nobr"	0.0
3940	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"nav"	0.0
3941	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"name"	0.0
3942	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"meta"	0.0
3943	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"menu"	0.0
3944	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"math"	0.0
3945	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"marquee"	0.0
3946	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"listing"	0.0
3947	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"link"	0.0
3948	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"li"	0.0
3949	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"label"	0.0
3950	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"keygen"	0.0
3951	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"isindex"	0.0
3952	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"input"	0.0
3953	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"img"	0.0
3954	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"image"	0.0
3955	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"iframe"	0.0
3956	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"i"	0.0
3957	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"html"	0.0
3958	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"href"	0.0
3959	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"hr"	0.0
3960	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"hidden"	0.0
3961	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"hgroup"	0.0
3962	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"header"	0.0
3963	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"head"	0.0
3964	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"h6"	0.0
3965	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"h5"	0.0
3966	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"h4"	0.0
3967	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"h3"	0.0
3968	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"h2"	0.0
3969	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"h1"	0.0
3970	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"frameset"	0.0
3971	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"frame"	0.0
3972	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"form"	0.0
3973	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"footer"	0.0
3974	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"font"	0.0
3975	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"figure"	0.0
3976	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"figcaption"	0.0
3977	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"fieldset"	0.0
3978	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"embed"	0.0
3979	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"em"	0.0
3980	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"dt"	0.0
3981	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"dl"	0.0
3982	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"div"	0.0
3983	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"dir"	0.0
3984	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"details"	0.0
3985	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"dd"	0.0
3986	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"command"	0.0
3987	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"colgroup"	0.0
3988	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"col"	0.0
3989	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"code"	0.0
3990	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"center"	0.0
3991	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"caption"	0.0
3992	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"button"	0.0
3993	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"br"	0.0
3994	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"body"	0.0
3995	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"blockquote"	0.0
3996	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"big"	0.0
3997	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"bgsound"	0.0
3998	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"basefont"	0.0
3999	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"base"	0.0
4000	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"b"	0.0
4001	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"aside"	0.0
4002	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"article"	0.0
4003	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"area"	0.0
4004	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"applet"	0.0
4005	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"address"	0.0
4006	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"action"	0.0
4007	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"a"	0.0
4008	org.jsoup.parser.HtmlTreeBuilderState::::775::::39319::::39322::::name::::"This is a searchable index. Enter search keywords: "	0.0
4009	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"xmp"	0.0
4010	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"wbr"	0.0
4011	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"ul"	0.0
4012	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"u"	0.0
4013	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"type"	0.0
4014	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"tt"	0.0
4015	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"track"	0.0
4016	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"tr"	0.0
4017	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"title"	0.0
4018	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"thead"	0.0
4019	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"th"	0.0
4020	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"tfoot"	0.0
4021	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"textarea"	0.0
4022	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"td"	0.0
4023	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"tbody"	0.0
4024	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"table"	0.0
4025	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"svg"	0.0
4026	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"summary"	0.0
4027	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"style"	0.0
4028	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"strong"	0.0
4029	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"strike"	0.0
4030	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"source"	0.0
4031	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"small"	0.0
4032	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"select"	0.0
4033	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"section"	0.0
4034	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"script"	0.0
4035	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"sarcasm"	0.0
4036	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"s"	0.0
4037	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"ruby"	0.0
4038	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"rt"	0.0
4039	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"rp"	0.0
4040	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"prompt"	0.0
4041	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"pre"	0.0
4042	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"plaintext"	0.0
4043	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"param"	0.0
4044	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"p"	0.0
4045	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"option"	0.0
4046	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"optgroup"	0.0
4047	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"ol"	0.0
4048	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"object"	0.0
4049	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"noscript"	0.0
4050	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"noframes"	0.0
4051	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"noembed"	0.0
4052	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"nobr"	0.0
4053	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"nav"	0.0
4054	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"name"	0.0
4055	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"meta"	0.0
4056	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"menu"	0.0
4057	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"math"	0.0
4058	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"marquee"	0.0
4059	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"listing"	0.0
4060	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"link"	0.0
4061	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"li"	0.0
4062	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"label"	0.0
4063	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"keygen"	0.0
4064	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"isindex"	0.0
4065	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"input"	0.0
4066	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"img"	0.0
4067	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"image"	0.0
4068	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"iframe"	0.0
4069	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"i"	0.0
4070	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"html"	0.0
4071	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"href"	0.0
4072	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"hr"	0.0
4073	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"hidden"	0.0
4074	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"hgroup"	0.0
4075	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"header"	0.0
4076	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"head"	0.0
4077	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"h6"	0.0
4078	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"h5"	0.0
4079	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"h4"	0.0
4080	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"h3"	0.0
4081	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"h2"	0.0
4082	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"h1"	0.0
4083	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"frameset"	0.0
4084	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"frame"	0.0
4085	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"form"	0.0
4086	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"footer"	0.0
4087	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"font"	0.0
4088	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"figure"	0.0
4089	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"figcaption"	0.0
4090	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"fieldset"	0.0
4091	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"embed"	0.0
4092	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"em"	0.0
4093	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"dt"	0.0
4094	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"dl"	0.0
4095	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"div"	0.0
4096	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"dir"	0.0
4097	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"details"	0.0
4098	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"dd"	0.0
4099	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"command"	0.0
4100	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"colgroup"	0.0
4101	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"col"	0.0
4102	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"code"	0.0
4103	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"center"	0.0
4104	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"caption"	0.0
4105	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"button"	0.0
4106	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"br"	0.0
4107	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"body"	0.0
4108	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"blockquote"	0.0
4109	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"big"	0.0
4110	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"bgsound"	0.0
4111	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"basefont"	0.0
4112	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"base"	0.0
4113	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"b"	0.0
4114	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"aside"	0.0
4115	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"article"	0.0
4116	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"area"	0.0
4117	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"applet"	0.0
4118	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"address"	0.0
4119	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"action"	0.0
4120	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"a"	0.0
4121	org.jsoup.parser.HtmlTreeBuilderState::::772::::39163::::39166::::name::::"This is a searchable index. Enter search keywords: "	0.0
4122	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"xmp"	0.0
4123	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"wbr"	0.0
4124	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"ul"	0.0
4125	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"u"	0.0
4126	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"type"	0.0
4127	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"tt"	0.0
4128	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"track"	0.0
4129	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"tr"	0.0
4130	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"title"	0.0
4131	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"thead"	0.0
4132	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"th"	0.0
4133	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"tfoot"	0.0
4134	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"textarea"	0.0
4135	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"td"	0.0
4136	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"tbody"	0.0
4137	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"table"	0.0
4138	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"svg"	0.0
4139	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"summary"	0.0
4140	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"style"	0.0
4141	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"strong"	0.0
4142	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"strike"	0.0
4143	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"source"	0.0
4144	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"small"	0.0
4145	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"select"	0.0
4146	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"section"	0.0
4147	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"script"	0.0
4148	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"sarcasm"	0.0
4149	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"s"	0.0
4150	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"ruby"	0.0
4151	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"rt"	0.0
4152	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"rp"	0.0
4153	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"prompt"	0.0
4154	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"pre"	0.0
4155	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"plaintext"	0.0
4156	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"param"	0.0
4157	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"p"	0.0
4158	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"option"	0.0
4159	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"optgroup"	0.0
4160	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"ol"	0.0
4161	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"object"	0.0
4162	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"noscript"	0.0
4163	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"noframes"	0.0
4164	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"noembed"	0.0
4165	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"nobr"	0.0
4166	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"nav"	0.0
4167	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"name"	0.0
4168	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"meta"	0.0
4169	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"menu"	0.0
4170	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"math"	0.0
4171	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"marquee"	0.0
4172	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"listing"	0.0
4173	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"link"	0.0
4174	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"li"	0.0
4175	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"label"	0.0
4176	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"keygen"	0.0
4177	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"isindex"	0.0
4178	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"input"	0.0
4179	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"img"	0.0
4180	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"image"	0.0
4181	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"iframe"	0.0
4182	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"i"	0.0
4183	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"html"	0.0
4184	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"href"	0.0
4185	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"hr"	0.0
4186	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"hidden"	0.0
4187	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"hgroup"	0.0
4188	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"header"	0.0
4189	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"head"	0.0
4190	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"h6"	0.0
4191	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"h5"	0.0
4192	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"h4"	0.0
4193	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"h3"	0.0
4194	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"h2"	0.0
4195	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"h1"	0.0
4196	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"frameset"	0.0
4197	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"frame"	0.0
4198	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"form"	0.0
4199	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"footer"	0.0
4200	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"font"	0.0
4201	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"figure"	0.0
4202	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"figcaption"	0.0
4203	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"fieldset"	0.0
4204	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"embed"	0.0
4205	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"em"	0.0
4206	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"dt"	0.0
4207	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"dl"	0.0
4208	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"div"	0.0
4209	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"dir"	0.0
4210	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"details"	0.0
4211	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"dd"	0.0
4212	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"command"	0.0
4213	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"colgroup"	0.0
4214	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"col"	0.0
4215	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"code"	0.0
4216	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"center"	0.0
4217	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"caption"	0.0
4218	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"button"	0.0
4219	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"br"	0.0
4220	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"body"	0.0
4221	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"blockquote"	0.0
4222	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"big"	0.0
4223	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"bgsound"	0.0
4224	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"basefont"	0.0
4225	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"base"	0.0
4226	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"b"	0.0
4227	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"aside"	0.0
4228	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"article"	0.0
4229	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"area"	0.0
4230	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"applet"	0.0
4231	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"address"	0.0
4232	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"action"	0.0
4233	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"a"	0.0
4234	org.jsoup.parser.HtmlTreeBuilderState::::771::::39108::::39111::::name::::"This is a searchable index. Enter search keywords: "	0.0
4235	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"xmp"	0.0
4236	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"wbr"	0.0
4237	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"ul"	0.0
4238	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"u"	0.0
4239	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"type"	0.0
4240	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"tt"	0.0
4241	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"track"	0.0
4242	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"tr"	0.0
4243	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"title"	0.0
4244	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"thead"	0.0
4245	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"th"	0.0
4246	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"tfoot"	0.0
4247	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"textarea"	0.0
4248	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"td"	0.0
4249	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"tbody"	0.0
4250	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"table"	0.0
4251	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"svg"	0.0
4252	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"summary"	0.0
4253	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"style"	0.0
4254	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"strong"	0.0
4255	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"strike"	0.0
4256	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"source"	0.0
4257	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"small"	0.0
4258	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"select"	0.0
4259	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"section"	0.0
4260	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"script"	0.0
4261	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"sarcasm"	0.0
4262	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"s"	0.0
4263	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"ruby"	0.0
4264	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"rt"	0.0
4265	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"rp"	0.0
4266	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"prompt"	0.0
4267	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"pre"	0.0
4268	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"plaintext"	0.0
4269	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"param"	0.0
4270	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"p"	0.0
4271	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"option"	0.0
4272	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"optgroup"	0.0
4273	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"ol"	0.0
4274	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"object"	0.0
4275	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"noscript"	0.0
4276	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"noframes"	0.0
4277	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"noembed"	0.0
4278	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"nobr"	0.0
4279	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"nav"	0.0
4280	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"name"	0.0
4281	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"meta"	0.0
4282	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"menu"	0.0
4283	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"math"	0.0
4284	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"marquee"	0.0
4285	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"listing"	0.0
4286	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"link"	0.0
4287	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"li"	0.0
4288	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"label"	0.0
4289	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"keygen"	0.0
4290	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"isindex"	0.0
4291	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"input"	0.0
4292	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"img"	0.0
4293	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"image"	0.0
4294	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"iframe"	0.0
4295	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"i"	0.0
4296	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"html"	0.0
4297	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"href"	0.0
4298	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"hr"	0.0
4299	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"hidden"	0.0
4300	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"hgroup"	0.0
4301	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"header"	0.0
4302	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"head"	0.0
4303	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"h6"	0.0
4304	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"h5"	0.0
4305	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"h4"	0.0
4306	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"h3"	0.0
4307	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"h2"	0.0
4308	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"h1"	0.0
4309	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"frameset"	0.0
4310	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"frame"	0.0
4311	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"form"	0.0
4312	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"footer"	0.0
4313	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"font"	0.0
4314	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"figure"	0.0
4315	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"figcaption"	0.0
4316	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"fieldset"	0.0
4317	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"embed"	0.0
4318	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"em"	0.0
4319	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"dt"	0.0
4320	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"dl"	0.0
4321	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"div"	0.0
4322	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"dir"	0.0
4323	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"details"	0.0
4324	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"dd"	0.0
4325	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"command"	0.0
4326	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"colgroup"	0.0
4327	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"col"	0.0
4328	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"code"	0.0
4329	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"center"	0.0
4330	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"caption"	0.0
4331	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"button"	0.0
4332	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"br"	0.0
4333	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"body"	0.0
4334	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"blockquote"	0.0
4335	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"big"	0.0
4336	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"bgsound"	0.0
4337	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"basefont"	0.0
4338	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"base"	0.0
4339	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"b"	0.0
4340	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"aside"	0.0
4341	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"article"	0.0
4342	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"area"	0.0
4343	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"applet"	0.0
4344	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"address"	0.0
4345	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"action"	0.0
4346	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"a"	0.0
4347	org.jsoup.parser.HtmlTreeBuilderState::::725::::36689::::36692::::name::::"This is a searchable index. Enter search keywords: "	0.0
4348	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::true	0.0
4349	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4350	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4351	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4352	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4353	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(t)	0.0
4354	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(startTag)	0.0
4355	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4356	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4357	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4358	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4359	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4360	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4361	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4362	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4363	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4364	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4365	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4366	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4367	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4368	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4369	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4370	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4371	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4372	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4373	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4374	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4375	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4376	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4377	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4378	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4379	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4380	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4381	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4382	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4383	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4384	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::tb.process(endTag)	0.0
4385	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::si < 64	0.0
4386	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::seenFormattingElement	0.0
4387	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::remainingA != null	0.0
4388	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4389	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4390	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4391	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::notIgnored	0.0
4392	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::node == formatEl	0.0
4393	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::j < 3	0.0
4394	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::i > 0	0.0
4395	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::i < 8	0.0
4396	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::handleMissingTr(t, tb)	0.0
4397	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::furthestBlock == null	0.0
4398	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::formatEl == null	0.0
4399	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::false	0.0
4400	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::exitTableBody(t, tb)	0.0
4401	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::el == formatEl	0.0
4402	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::currentForm == null	0.0
4403	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::anythingElse(t, tb)	0.0
4404	org.jsoup.parser.HtmlTreeBuilderState::::720::::36436::::36460::::(lastNode.parent()) != null::::anyOtherEndTag(t, tb)	0.0
4405	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4406	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(startTag)	0.0
4407	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4408	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4409	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4410	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4411	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4412	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4413	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4414	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4415	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4416	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4417	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4418	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4419	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4420	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4421	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4422	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4423	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4424	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	0.0
4425	org.jsoup.parser.HtmlTreeBuilderState::::697::::35079::::35090::::break INNER::::INSERT::::STATEMENT::::closeCell(tb)	0.0
4426	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::true	0.0
4427	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4428	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4429	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4430	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4431	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(t)	0.0
4432	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(startTag)	0.0
4433	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4434	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4435	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4436	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4437	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4438	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4439	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4440	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4441	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4442	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4443	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4444	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4445	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4446	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4447	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4448	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4449	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4450	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4451	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4452	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4453	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4454	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4455	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4456	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4457	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4458	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4459	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4460	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4461	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4462	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::tb.process(endTag)	0.0
4463	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::si < 64	0.0
4464	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::seenFormattingElement	0.0
4465	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::remainingA != null	0.0
4466	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4467	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4468	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4469	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::notIgnored	0.0
4470	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::lastNode == furthestBlock	0.0
4471	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::j < 3	0.0
4472	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::i > 0	0.0
4473	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::i < 8	0.0
4474	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::handleMissingTr(t, tb)	0.0
4475	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::furthestBlock == null	0.0
4476	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::false	0.0
4477	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::exitTableBody(t, tb)	0.0
4478	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::currentForm == null	0.0
4479	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::anythingElse(t, tb)	0.0
4480	org.jsoup.parser.HtmlTreeBuilderState::::696::::35025::::35040::::node == formatEl::::anyOtherEndTag(t, tb)	0.0
4481	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4482	org.jsoup.parser.HtmlTreeBuilderState::::696::::35021::::35090::::if (node == formatEl)    break INNER;::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4483	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::seenFormattingElement = true	0.0
4484	org.jsoup.parser.HtmlTreeBuilderState::::692::::34734::::34762::::node = tb.aboveOnStack(node)::::furthestBlock = el	0.0
4485	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::j++	0.0
4486	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::8	0.0
4487	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::64	0.0
4488	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::3	0.0
4489	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::2	0.0
4490	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::1	0.0
4491	org.jsoup.parser.HtmlTreeBuilderState::::690::::34637::::34637::::j::::0	0.0
4492	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::j++	0.0
4493	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::8	0.0
4494	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::64	0.0
4495	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::3	0.0
4496	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::2	0.0
4497	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::1	0.0
4498	org.jsoup.parser.HtmlTreeBuilderState::::690::::34630::::34630::::j::::0	0.0
4499	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::true	0.0
4500	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4501	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4502	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4503	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4504	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(t)	0.0
4505	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(startTag)	0.0
4506	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4507	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4508	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4509	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4510	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4511	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4512	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4513	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4514	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4515	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4516	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4517	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4518	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4519	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4520	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4521	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4522	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4523	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4524	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4525	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4526	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4527	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4528	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4529	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4530	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4531	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4532	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4533	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4534	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4535	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::tb.process(endTag)	0.0
4536	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::si < 64	0.0
4537	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::seenFormattingElement	0.0
4538	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::remainingA != null	0.0
4539	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4540	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4541	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4542	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::notIgnored	0.0
4543	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::node == formatEl	0.0
4544	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::j < 3	0.0
4545	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::i > 0	0.0
4546	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::i < 8	0.0
4547	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::handleMissingTr(t, tb)	0.0
4548	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::formatEl == null	0.0
4549	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::false	0.0
4550	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::exitTableBody(t, tb)	0.0
4551	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::el == formatEl	0.0
4552	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::currentForm == null	0.0
4553	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::anythingElse(t, tb)	0.0
4554	org.jsoup.parser.HtmlTreeBuilderState::::679::::33902::::33922::::furthestBlock == null::::anyOtherEndTag(t, tb)	0.0
4555	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4556	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(startTag)	0.0
4557	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4558	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4559	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4560	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4561	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4562	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4563	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4564	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4565	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4566	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4567	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4568	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4569	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4570	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4571	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4572	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4573	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4574	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::org.jsoup.parser.HtmlTreeBuilderState.handleRawtext(startTag, tb)	0.0
4575	org.jsoup.parser.HtmlTreeBuilderState::::676::::33799::::33804::::break::::INSERT::::STATEMENT::::closeCell(tb)	0.0
4576	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::seenFormattingElement = true	0.0
4577	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::node = replacement	0.0
4578	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::lastNode = node	0.0
4579	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4580	org.jsoup.parser.HtmlTreeBuilderState::::675::::33743::::33761::::furthestBlock = el::::INSERT::::STATEMENT::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4581	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::true	0.0
4582	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::si < 64	0.0
4583	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::remainingA != null	0.0
4584	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4585	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4586	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::notIgnored	0.0
4587	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::node == formatEl	0.0
4588	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::lastNode == furthestBlock	0.0
4589	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::j < 3	0.0
4590	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::i > 0	0.0
4591	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::i < 8	0.0
4592	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::furthestBlock == null	0.0
4593	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::formatEl == null	0.0
4594	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::false	0.0
4595	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33702::::seenFormattingElement && (tb.isSpecial(el))::::currentForm == null	0.0
4596	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::true	0.0
4597	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4598	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4599	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4600	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4601	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(t)	0.0
4602	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(startTag)	0.0
4603	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4604	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4605	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4606	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4607	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4608	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4609	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4610	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4611	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4612	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4613	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4614	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4615	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4616	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4617	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4618	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4619	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4620	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4621	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4622	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4623	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4624	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4625	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4626	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4627	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4628	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4629	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4630	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4631	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4632	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::tb.process(endTag)	0.0
4633	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::si < 64	0.0
4634	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::remainingA != null	0.0
4635	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4636	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4637	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4638	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::node == formatEl	0.0
4639	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::lastNode == furthestBlock	0.0
4640	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::j < 3	0.0
4641	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::i > 0	0.0
4642	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::i < 8	0.0
4643	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::handleMissingTr(t, tb)	0.0
4644	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::furthestBlock == null	0.0
4645	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::formatEl == null	0.0
4646	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::false	0.0
4647	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::exitTableBody(t, tb)	0.0
4648	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::el == formatEl	0.0
4649	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::currentForm == null	0.0
4650	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::anythingElse(t, tb)	0.0
4651	org.jsoup.parser.HtmlTreeBuilderState::::674::::33662::::33682::::seenFormattingElement::::anyOtherEndTag(t, tb)	0.0
4652	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4653	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4654	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4655	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4656	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(t)	0.0
4657	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(startTag)	0.0
4658	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4659	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4660	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4661	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4662	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4663	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4664	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4665	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4666	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4667	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4668	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4669	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4670	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4671	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4672	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4673	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4674	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4675	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4676	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4677	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4678	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4679	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4680	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4681	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4682	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4683	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4684	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4685	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4686	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4687	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::tb.process(endTag)	0.0
4688	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::si < 64	0.0
4689	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::seenFormattingElement	0.0
4690	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::remainingA != null	0.0
4691	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4692	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4693	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4694	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::notIgnored	0.0
4695	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::node == formatEl	0.0
4696	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::lastNode == furthestBlock	0.0
4697	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::j < 3	0.0
4698	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::i > 0	0.0
4699	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::i < 8	0.0
4700	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::handleMissingTr(t, tb)	0.0
4701	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::furthestBlock == null	0.0
4702	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::formatEl == null	0.0
4703	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::exitTableBody(t, tb)	0.0
4704	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::el == formatEl	0.0
4705	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::currentForm == null	0.0
4706	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::anythingElse(t, tb)	0.0
4707	org.jsoup.parser.HtmlTreeBuilderState::::673::::33613::::33616::::true::::anyOtherEndTag(t, tb)	0.0
4708	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::node = replacement	0.0
4709	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::lastNode = node	0.0
4710	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33617::::seenFormattingElement = true::::furthestBlock = el	0.0
4711	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::true	0.0
4712	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4713	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4714	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4715	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4716	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(t)	0.0
4717	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(startTag)	0.0
4718	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4719	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4720	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4721	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4722	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4723	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4724	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4725	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4726	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4727	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4728	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4729	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4730	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4731	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4732	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4733	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4734	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4735	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4736	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4737	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4738	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4739	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4740	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4741	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4742	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4743	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4744	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4745	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4746	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4747	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::tb.process(endTag)	0.0
4748	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::si < 64	0.0
4749	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::remainingA != null	0.0
4750	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4751	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4752	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4753	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::node == formatEl	0.0
4754	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::lastNode == furthestBlock	0.0
4755	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::j < 3	0.0
4756	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::i > 0	0.0
4757	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::i < 8	0.0
4758	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::handleMissingTr(t, tb)	0.0
4759	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::furthestBlock == null	0.0
4760	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::formatEl == null	0.0
4761	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::false	0.0
4762	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::exitTableBody(t, tb)	0.0
4763	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::el == formatEl	0.0
4764	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::currentForm == null	0.0
4765	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::anythingElse(t, tb)	0.0
4766	org.jsoup.parser.HtmlTreeBuilderState::::673::::33589::::33609::::seenFormattingElement::::anyOtherEndTag(t, tb)	0.0
4767	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::j++	0.0
4768	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::j	0.0
4769	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::i--	0.0
4770	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::i++	0.0
4771	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::i	0.0
4772	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::8	0.0
4773	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::64	0.0
4774	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::3	0.0
4775	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::2	0.0
4776	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::1	0.0
4777	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33549::::si - 1::::0	0.0
4778	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::si++	0.0
4779	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::si - 1	0.0
4780	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::8	0.0
4781	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::64	0.0
4782	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::3	0.0
4783	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::2	0.0
4784	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::1	0.0
4785	org.jsoup.parser.HtmlTreeBuilderState::::672::::33544::::33545::::si::::0	0.0
4786	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::seenFormattingElement = true	0.0
4787	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::node = replacement	0.0
4788	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::lastNode = node	0.0
4789	org.jsoup.parser.HtmlTreeBuilderState::::672::::33517::::33551::::commonAncestor = stack.get((si - 1))::::furthestBlock = el	0.0
4790	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::true	0.0
4791	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4792	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4793	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4794	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4795	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(t)	0.0
4796	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(startTag)	0.0
4797	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4798	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4799	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4800	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4801	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4802	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4803	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4804	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4805	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4806	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4807	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4808	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4809	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4810	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4811	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4812	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4813	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4814	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4815	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4816	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4817	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4818	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4819	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4820	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4821	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4822	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4823	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4824	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4825	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4826	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::tb.process(endTag)	0.0
4827	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::si < 64	0.0
4828	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::seenFormattingElement	0.0
4829	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::remainingA != null	0.0
4830	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4831	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4832	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4833	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::notIgnored	0.0
4834	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::lastNode == furthestBlock	0.0
4835	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::j < 3	0.0
4836	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::i > 0	0.0
4837	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::i < 8	0.0
4838	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::handleMissingTr(t, tb)	0.0
4839	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::furthestBlock == null	0.0
4840	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::false	0.0
4841	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::exitTableBody(t, tb)	0.0
4842	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::currentForm == null	0.0
4843	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::anythingElse(t, tb)	0.0
4844	org.jsoup.parser.HtmlTreeBuilderState::::671::::33463::::33476::::el == formatEl::::anyOtherEndTag(t, tb)	0.0
4845	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::si++	0.0
4846	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::si - 1	0.0
4847	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::8	0.0
4848	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::64	0.0
4849	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::3	0.0
4850	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::2	0.0
4851	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::1	0.0
4852	org.jsoup.parser.HtmlTreeBuilderState::::670::::33422::::33423::::si::::0	0.0
4853	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::si++	0.0
4854	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::si - 1	0.0
4855	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::8	0.0
4856	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::64	0.0
4857	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::3	0.0
4858	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::2	0.0
4859	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::1	0.0
4860	org.jsoup.parser.HtmlTreeBuilderState::::669::::33359::::33360::::si::::0	0.0
4861	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::true	0.0
4862	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4863	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4864	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4865	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4866	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(t)	0.0
4867	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(startTag)	0.0
4868	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4869	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4870	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4871	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4872	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4873	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4874	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4875	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4876	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4877	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4878	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4879	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4880	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4881	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4882	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4883	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4884	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4885	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4886	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4887	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4888	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4889	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4890	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4891	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4892	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4893	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4894	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4895	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4896	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4897	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::tb.process(endTag)	0.0
4898	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::seenFormattingElement	0.0
4899	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::remainingA != null	0.0
4900	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4901	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4902	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4903	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::notIgnored	0.0
4904	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::node == formatEl	0.0
4905	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::lastNode == furthestBlock	0.0
4906	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::j < 3	0.0
4907	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::i > 0	0.0
4908	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::i < 8	0.0
4909	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::handleMissingTr(t, tb)	0.0
4910	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::furthestBlock == null	0.0
4911	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::formatEl == null	0.0
4912	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::false	0.0
4913	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::exitTableBody(t, tb)	0.0
4914	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::el == formatEl	0.0
4915	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::currentForm == null	0.0
4916	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::anythingElse(t, tb)	0.0
4917	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33356::::si < 64::::anyOtherEndTag(t, tb)	0.0
4918	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::si++	0.0
4919	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::si - 1	0.0
4920	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::8	0.0
4921	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::64	0.0
4922	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::3	0.0
4923	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::2	0.0
4924	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::1	0.0
4925	org.jsoup.parser.HtmlTreeBuilderState::::669::::33350::::33351::::si::::0	0.0
4926	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::true	0.0
4927	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4928	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4929	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4930	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4931	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(t)	0.0
4932	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(startTag)	0.0
4933	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4934	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4935	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
4936	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
4937	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
4938	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
4939	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
4940	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
4941	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
4942	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
4943	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
4944	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
4945	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
4946	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
4947	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
4948	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
4949	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
4950	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
4951	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
4952	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
4953	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
4954	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
4955	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
4956	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
4957	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
4958	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
4959	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
4960	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
4961	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
4962	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::tb.process(endTag)	0.0
4963	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::seenFormattingElement	0.0
4964	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::remainingA != null	0.0
4965	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
4966	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
4967	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
4968	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::notIgnored	0.0
4969	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::node == formatEl	0.0
4970	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::lastNode == furthestBlock	0.0
4971	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::j < 3	0.0
4972	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::i > 0	0.0
4973	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::i < 8	0.0
4974	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::handleMissingTr(t, tb)	0.0
4975	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::furthestBlock == null	0.0
4976	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::formatEl == null	0.0
4977	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::false	0.0
4978	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::exitTableBody(t, tb)	0.0
4979	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::el == formatEl	0.0
4980	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::currentForm == null	0.0
4981	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::anythingElse(t, tb)	0.0
4982	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33345::::si < (stack.size())::::anyOtherEndTag(t, tb)	0.0
4983	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::si++	0.0
4984	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::si - 1	0.0
4985	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::8	0.0
4986	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::64	0.0
4987	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::3	0.0
4988	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::2	0.0
4989	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::1	0.0
4990	org.jsoup.parser.HtmlTreeBuilderState::::669::::33329::::33330::::si::::0	0.0
4991	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
4992	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
4993	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
4994	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
4995	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(t)	0.0
4996	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(startTag)	0.0
4997	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
4998	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
4999	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
5000	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
5001	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
5002	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
5003	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
5004	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
5005	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
5006	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
5007	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
5008	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
5009	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
5010	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
5011	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
5012	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
5013	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
5014	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
5015	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
5016	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
5017	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
5018	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
5019	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
5020	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
5021	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
5022	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
5023	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
5024	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
5025	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
5026	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::tb.process(endTag)	0.0
5027	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::si < 64	0.0
5028	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::seenFormattingElement	0.0
5029	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::remainingA != null	0.0
5030	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
5031	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
5032	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
5033	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::notIgnored	0.0
5034	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::node == formatEl	0.0
5035	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::lastNode == furthestBlock	0.0
5036	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::j < 3	0.0
5037	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::i > 0	0.0
5038	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::i < 8	0.0
5039	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::handleMissingTr(t, tb)	0.0
5040	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::furthestBlock == null	0.0
5041	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::formatEl == null	0.0
5042	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::exitTableBody(t, tb)	0.0
5043	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::el == formatEl	0.0
5044	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::currentForm == null	0.0
5045	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::anythingElse(t, tb)	0.0
5046	org.jsoup.parser.HtmlTreeBuilderState::::665::::33044::::33048::::false::::anyOtherEndTag(t, tb)	0.0
5047	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::true	0.0
5048	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::si < 64	0.0
5049	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::seenFormattingElement	0.0
5050	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::remainingA != null	0.0
5051	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
5052	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
5053	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::notIgnored	0.0
5054	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::lastNode == furthestBlock	0.0
5055	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::j < 3	0.0
5056	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::i > 0	0.0
5057	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::i < 8	0.0
5058	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::furthestBlock == null	0.0
5059	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::false	0.0
5060	org.jsoup.parser.HtmlTreeBuilderState::::660::::32785::::32815::::(tb.currentElement()) != formatEl::::currentForm == null	0.0
5061	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::true	0.0
5062	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InTable)	0.0
5063	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InSelect)	0.0
5064	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InHead)	0.0
5065	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(t, org.jsoup.parser.HtmlTreeBuilderState.InBody)	0.0
5066	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(t)	0.0
5067	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(startTag)	0.0
5068	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag(name))	0.0
5069	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("tr"))	0.0
5070	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("tbody"))	0.0
5071	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("label"))	0.0
5072	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("input", inputAttribs))	0.0
5073	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("hr"))	0.0
5074	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("head"))	0.0
5075	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("form"))	0.0
5076	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("colgroup"))	0.0
5077	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("br"))	0.0
5078	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.StartTag("body"))	0.0
5079	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("tr"))	0.0
5080	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("th"))	0.0
5081	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("td"))	0.0
5082	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("table"))	0.0
5083	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("select"))	0.0
5084	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("p"))	0.0
5085	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("option"))	0.0
5086	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("optgroup"))	0.0
5087	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("noscript"))	0.0
5088	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("nobr"))	0.0
5089	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("li"))	0.0
5090	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("label"))	0.0
5091	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("form"))	0.0
5092	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("caption"))	0.0
5093	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("button"))	0.0
5094	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("body"))	0.0
5095	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.EndTag("a"))	0.0
5096	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(new org.jsoup.parser.Token.Character(prompt))	0.0
5097	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::tb.process(endTag)	0.0
5098	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::si < 64	0.0
5099	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::seenFormattingElement	0.0
5100	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::remainingA != null	0.0
5101	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
5102	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
5103	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::org.jsoup.parser.HtmlTreeBuilderState.InBody.process(t, tb)	0.0
5104	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::notIgnored	0.0
5105	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::lastNode == furthestBlock	0.0
5106	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::j < 3	0.0
5107	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::i > 0	0.0
5108	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::i < 8	0.0
5109	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::handleMissingTr(t, tb)	0.0
5110	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::furthestBlock == null	0.0
5111	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::false	0.0
5112	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::exitTableBody(t, tb)	0.0
5113	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::currentForm == null	0.0
5114	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::anythingElse(t, tb)	0.0
5115	org.jsoup.parser.HtmlTreeBuilderState::::651::::32261::::32276::::formatEl == null::::anyOtherEndTag(t, tb)	0.0
5116	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"xmp"	0.0
5117	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"wbr"	0.0
5118	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"ul"	0.0
5119	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"u"	0.0
5120	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"type"	0.0
5121	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"tt"	0.0
5122	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"track"	0.0
5123	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"tr"	0.0
5124	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"title"	0.0
5125	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"thead"	0.0
5126	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"th"	0.0
5127	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"tfoot"	0.0
5128	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"textarea"	0.0
5129	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"td"	0.0
5130	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"tbody"	0.0
5131	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"table"	0.0
5132	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"svg"	0.0
5133	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"summary"	0.0
5134	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"style"	0.0
5135	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"strong"	0.0
5136	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"strike"	0.0
5137	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"source"	0.0
5138	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"small"	0.0
5139	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"select"	0.0
5140	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"section"	0.0
5141	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"script"	0.0
5142	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"sarcasm"	0.0
5143	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"s"	0.0
5144	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"ruby"	0.0
5145	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"rt"	0.0
5146	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"rp"	0.0
5147	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"prompt"	0.0
5148	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"pre"	0.0
5149	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"plaintext"	0.0
5150	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"param"	0.0
5151	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"p"	0.0
5152	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"option"	0.0
5153	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"optgroup"	0.0
5154	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"ol"	0.0
5155	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"object"	0.0
5156	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"noscript"	0.0
5157	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"noframes"	0.0
5158	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"noembed"	0.0
5159	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"nobr"	0.0
5160	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"nav"	0.0
5161	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"name"	0.0
5162	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"meta"	0.0
5163	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"menu"	0.0
5164	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"math"	0.0
5165	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"marquee"	0.0
5166	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"listing"	0.0
5167	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"link"	0.0
5168	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"li"	0.0
5169	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"label"	0.0
5170	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"keygen"	0.0
5171	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"isindex"	0.0
5172	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"input"	0.0
5173	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"img"	0.0
5174	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"image"	0.0
5175	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"iframe"	0.0
5176	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"i"	0.0
5177	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"html"	0.0
5178	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"href"	0.0
5179	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"hr"	0.0
5180	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"hidden"	0.0
5181	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"hgroup"	0.0
5182	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"header"	0.0
5183	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"head"	0.0
5184	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"h6"	0.0
5185	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"h5"	0.0
5186	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"h4"	0.0
5187	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"h3"	0.0
5188	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"h2"	0.0
5189	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"h1"	0.0
5190	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"frameset"	0.0
5191	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"frame"	0.0
5192	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"form"	0.0
5193	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"footer"	0.0
5194	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"font"	0.0
5195	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"figure"	0.0
5196	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"figcaption"	0.0
5197	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"fieldset"	0.0
5198	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"embed"	0.0
5199	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"em"	0.0
5200	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"dt"	0.0
5201	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"dl"	0.0
5202	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"div"	0.0
5203	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"dir"	0.0
5204	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"details"	0.0
5205	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"dd"	0.0
5206	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"command"	0.0
5207	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"colgroup"	0.0
5208	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"col"	0.0
5209	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"code"	0.0
5210	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"center"	0.0
5211	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"caption"	0.0
5212	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"button"	0.0
5213	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"br"	0.0
5214	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"body"	0.0
5215	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"blockquote"	0.0
5216	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"big"	0.0
5217	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"bgsound"	0.0
5218	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"basefont"	0.0
5219	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"base"	0.0
5220	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"b"	0.0
5221	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"aside"	0.0
5222	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"article"	0.0
5223	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"area"	0.0
5224	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"applet"	0.0
5225	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"address"	0.0
5226	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"action"	0.0
5227	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"a"	0.0
5228	org.jsoup.parser.HtmlTreeBuilderState::::650::::32222::::32225::::name::::"This is a searchable index. Enter search keywords: "	0.0
5229	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::i--	0.0
5230	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::i++	0.0
5231	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::8	0.0
5232	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::64	0.0
5233	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::3	0.0
5234	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::2	0.0
5235	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::1	0.0
5236	org.jsoup.parser.HtmlTreeBuilderState::::649::::32138::::32138::::i::::0	0.0
5237	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::i--	0.0
5238	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::i++	0.0
5239	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::8	0.0
5240	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::64	0.0
5241	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::3	0.0
5242	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::2	0.0
5243	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::1	0.0
5244	org.jsoup.parser.HtmlTreeBuilderState::::649::::32131::::32131::::i::::0	0.0
5245	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"xmp"	0.0
5246	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"wbr"	0.0
5247	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"ul"	0.0
5248	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"u"	0.0
5249	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"type"	0.0
5250	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"tt"	0.0
5251	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"track"	0.0
5252	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"tr"	0.0
5253	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"title"	0.0
5254	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"thead"	0.0
5255	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"th"	0.0
5256	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"tfoot"	0.0
5257	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"textarea"	0.0
5258	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"td"	0.0
5259	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"tbody"	0.0
5260	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"table"	0.0
5261	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"svg"	0.0
5262	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"summary"	0.0
5263	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"style"	0.0
5264	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"strong"	0.0
5265	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"strike"	0.0
5266	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"source"	0.0
5267	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"small"	0.0
5268	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"select"	0.0
5269	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"section"	0.0
5270	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"script"	0.0
5271	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"sarcasm"	0.0
5272	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"s"	0.0
5273	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"ruby"	0.0
5274	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"rt"	0.0
5275	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"rp"	0.0
5276	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"prompt"	0.0
5277	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"pre"	0.0
5278	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"plaintext"	0.0
5279	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"param"	0.0
5280	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"p"	0.0
5281	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"option"	0.0
5282	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"optgroup"	0.0
5283	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"ol"	0.0
5284	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"object"	0.0
5285	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"noscript"	0.0
5286	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"noframes"	0.0
5287	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"noembed"	0.0
5288	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"nobr"	0.0
5289	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"nav"	0.0
5290	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"name"	0.0
5291	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"meta"	0.0
5292	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"menu"	0.0
5293	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"math"	0.0
5294	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"marquee"	0.0
5295	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"listing"	0.0
5296	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"link"	0.0
5297	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"li"	0.0
5298	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"label"	0.0
5299	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"keygen"	0.0
5300	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"isindex"	0.0
5301	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"input"	0.0
5302	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"img"	0.0
5303	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"image"	0.0
5304	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"iframe"	0.0
5305	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"i"	0.0
5306	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"html"	0.0
5307	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"href"	0.0
5308	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"hr"	0.0
5309	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"hidden"	0.0
5310	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"hgroup"	0.0
5311	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"header"	0.0
5312	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"head"	0.0
5313	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"h6"	0.0
5314	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"h5"	0.0
5315	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"h4"	0.0
5316	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"h3"	0.0
5317	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"h2"	0.0
5318	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"h1"	0.0
5319	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"frameset"	0.0
5320	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"frame"	0.0
5321	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"form"	0.0
5322	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"footer"	0.0
5323	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"font"	0.0
5324	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"figure"	0.0
5325	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"figcaption"	0.0
5326	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"fieldset"	0.0
5327	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"embed"	0.0
5328	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"em"	0.0
5329	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"dt"	0.0
5330	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"dl"	0.0
5331	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"div"	0.0
5332	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"dir"	0.0
5333	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"details"	0.0
5334	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"dd"	0.0
5335	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"command"	0.0
5336	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"colgroup"	0.0
5337	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"col"	0.0
5338	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"code"	0.0
5339	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"center"	0.0
5340	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"caption"	0.0
5341	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"button"	0.0
5342	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"br"	0.0
5343	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"body"	0.0
5344	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"blockquote"	0.0
5345	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"big"	0.0
5346	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"bgsound"	0.0
5347	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"basefont"	0.0
5348	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"base"	0.0
5349	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"b"	0.0
5350	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"aside"	0.0
5351	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"article"	0.0
5352	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"area"	0.0
5353	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"applet"	0.0
5354	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"address"	0.0
5355	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"action"	0.0
5356	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"a"	0.0
5357	org.jsoup.parser.HtmlTreeBuilderState::::645::::31872::::31875::::name::::"This is a searchable index. Enter search keywords: "	0.0
5358	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"xmp"	0.0
5359	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"wbr"	0.0
5360	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"ul"	0.0
5361	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"u"	0.0
5362	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"type"	0.0
5363	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"tt"	0.0
5364	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"track"	0.0
5365	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"tr"	0.0
5366	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"title"	0.0
5367	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"thead"	0.0
5368	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"th"	0.0
5369	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"tfoot"	0.0
5370	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"textarea"	0.0
5371	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"td"	0.0
5372	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"tbody"	0.0
5373	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"table"	0.0
5374	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"svg"	0.0
5375	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"summary"	0.0
5376	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"style"	0.0
5377	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"strong"	0.0
5378	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"strike"	0.0
5379	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"source"	0.0
5380	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"small"	0.0
5381	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"select"	0.0
5382	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"section"	0.0
5383	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"script"	0.0
5384	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"sarcasm"	0.0
5385	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"s"	0.0
5386	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"ruby"	0.0
5387	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"rt"	0.0
5388	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"rp"	0.0
5389	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"prompt"	0.0
5390	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"pre"	0.0
5391	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"plaintext"	0.0
5392	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"param"	0.0
5393	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"p"	0.0
5394	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"option"	0.0
5395	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"optgroup"	0.0
5396	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"ol"	0.0
5397	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"object"	0.0
5398	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"noscript"	0.0
5399	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"noframes"	0.0
5400	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"noembed"	0.0
5401	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"nobr"	0.0
5402	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"nav"	0.0
5403	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"name"	0.0
5404	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"meta"	0.0
5405	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"menu"	0.0
5406	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"math"	0.0
5407	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"marquee"	0.0
5408	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"listing"	0.0
5409	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"link"	0.0
5410	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"li"	0.0
5411	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"label"	0.0
5412	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"keygen"	0.0
5413	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"isindex"	0.0
5414	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"input"	0.0
5415	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"img"	0.0
5416	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"image"	0.0
5417	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"iframe"	0.0
5418	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"i"	0.0
5419	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"html"	0.0
5420	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"href"	0.0
5421	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"hr"	0.0
5422	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"hidden"	0.0
5423	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"hgroup"	0.0
5424	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"header"	0.0
5425	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"head"	0.0
5426	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"h6"	0.0
5427	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"h5"	0.0
5428	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"h4"	0.0
5429	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"h3"	0.0
5430	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"h2"	0.0
5431	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"h1"	0.0
5432	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"frameset"	0.0
5433	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"frame"	0.0
5434	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"form"	0.0
5435	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"footer"	0.0
5436	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"font"	0.0
5437	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"figure"	0.0
5438	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"figcaption"	0.0
5439	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"fieldset"	0.0
5440	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"embed"	0.0
5441	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"em"	0.0
5442	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"dt"	0.0
5443	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"dl"	0.0
5444	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"div"	0.0
5445	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"dir"	0.0
5446	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"details"	0.0
5447	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"dd"	0.0
5448	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"command"	0.0
5449	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"colgroup"	0.0
5450	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"col"	0.0
5451	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"code"	0.0
5452	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"center"	0.0
5453	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"caption"	0.0
5454	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"button"	0.0
5455	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"br"	0.0
5456	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"body"	0.0
5457	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"blockquote"	0.0
5458	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"big"	0.0
5459	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"bgsound"	0.0
5460	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"basefont"	0.0
5461	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"base"	0.0
5462	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"b"	0.0
5463	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"aside"	0.0
5464	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"article"	0.0
5465	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"area"	0.0
5466	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"applet"	0.0
5467	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"address"	0.0
5468	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"action"	0.0
5469	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"a"	0.0
5470	org.jsoup.parser.HtmlTreeBuilderState::::632::::31128::::31131::::name::::"This is a searchable index. Enter search keywords: "	0.0
5471	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"xmp"	0.0
5472	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"wbr"	0.0
5473	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"ul"	0.0
5474	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"u"	0.0
5475	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"type"	0.0
5476	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"tt"	0.0
5477	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"track"	0.0
5478	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"tr"	0.0
5479	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"title"	0.0
5480	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"thead"	0.0
5481	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"th"	0.0
5482	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"tfoot"	0.0
5483	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"textarea"	0.0
5484	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"td"	0.0
5485	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"tbody"	0.0
5486	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"table"	0.0
5487	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"svg"	0.0
5488	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"summary"	0.0
5489	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"style"	0.0
5490	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"strong"	0.0
5491	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"strike"	0.0
5492	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"source"	0.0
5493	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"small"	0.0
5494	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"select"	0.0
5495	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"section"	0.0
5496	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"script"	0.0
5497	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"sarcasm"	0.0
5498	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"s"	0.0
5499	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"ruby"	0.0
5500	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"rt"	0.0
5501	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"rp"	0.0
5502	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"prompt"	0.0
5503	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"pre"	0.0
5504	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"plaintext"	0.0
5505	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"param"	0.0
5506	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"p"	0.0
5507	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"option"	0.0
5508	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"optgroup"	0.0
5509	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"ol"	0.0
5510	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"object"	0.0
5511	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"noscript"	0.0
5512	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"noframes"	0.0
5513	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"noembed"	0.0
5514	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"nobr"	0.0
5515	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"nav"	0.0
5516	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"name"	0.0
5517	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"meta"	0.0
5518	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"menu"	0.0
5519	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"math"	0.0
5520	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"marquee"	0.0
5521	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"listing"	0.0
5522	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"link"	0.0
5523	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"li"	0.0
5524	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"label"	0.0
5525	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"keygen"	0.0
5526	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"isindex"	0.0
5527	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"input"	0.0
5528	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"img"	0.0
5529	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"image"	0.0
5530	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"iframe"	0.0
5531	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"i"	0.0
5532	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"html"	0.0
5533	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"href"	0.0
5534	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"hr"	0.0
5535	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"hidden"	0.0
5536	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"hgroup"	0.0
5537	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"header"	0.0
5538	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"head"	0.0
5539	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"h6"	0.0
5540	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"h5"	0.0
5541	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"h4"	0.0
5542	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"h3"	0.0
5543	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"h2"	0.0
5544	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"h1"	0.0
5545	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"frameset"	0.0
5546	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"frame"	0.0
5547	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"form"	0.0
5548	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"footer"	0.0
5549	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"font"	0.0
5550	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"figure"	0.0
5551	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"figcaption"	0.0
5552	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"fieldset"	0.0
5553	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"embed"	0.0
5554	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"em"	0.0
5555	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"dt"	0.0
5556	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"dl"	0.0
5557	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"div"	0.0
5558	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"dir"	0.0
5559	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"details"	0.0
5560	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"dd"	0.0
5561	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"command"	0.0
5562	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"colgroup"	0.0
5563	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"col"	0.0
5564	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"code"	0.0
5565	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"center"	0.0
5566	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"caption"	0.0
5567	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"button"	0.0
5568	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"br"	0.0
5569	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"body"	0.0
5570	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"blockquote"	0.0
5571	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"big"	0.0
5572	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"bgsound"	0.0
5573	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"basefont"	0.0
5574	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"base"	0.0
5575	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"b"	0.0
5576	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"aside"	0.0
5577	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"article"	0.0
5578	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"area"	0.0
5579	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"applet"	0.0
5580	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"address"	0.0
5581	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"action"	0.0
5582	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"a"	0.0
5583	org.jsoup.parser.HtmlTreeBuilderState::::622::::30627::::30630::::name::::"This is a searchable index. Enter search keywords: "	0.0
5584	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"xmp"	0.0
5585	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"wbr"	0.0
5586	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"ul"	0.0
5587	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"u"	0.0
5588	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"type"	0.0
5589	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"tt"	0.0
5590	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"track"	0.0
5591	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"tr"	0.0
5592	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"title"	0.0
5593	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"thead"	0.0
5594	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"th"	0.0
5595	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"tfoot"	0.0
5596	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"textarea"	0.0
5597	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"td"	0.0
5598	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"tbody"	0.0
5599	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"table"	0.0
5600	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"svg"	0.0
5601	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"summary"	0.0
5602	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"style"	0.0
5603	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"strong"	0.0
5604	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"strike"	0.0
5605	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"source"	0.0
5606	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"small"	0.0
5607	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"select"	0.0
5608	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"section"	0.0
5609	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"script"	0.0
5610	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"sarcasm"	0.0
5611	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"s"	0.0
5612	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"ruby"	0.0
5613	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"rt"	0.0
5614	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"rp"	0.0
5615	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"prompt"	0.0
5616	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"pre"	0.0
5617	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"plaintext"	0.0
5618	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"param"	0.0
5619	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"p"	0.0
5620	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"option"	0.0
5621	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"optgroup"	0.0
5622	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"ol"	0.0
5623	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"object"	0.0
5624	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"noscript"	0.0
5625	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"noframes"	0.0
5626	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"noembed"	0.0
5627	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"nobr"	0.0
5628	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"nav"	0.0
5629	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"name"	0.0
5630	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"meta"	0.0
5631	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"menu"	0.0
5632	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"math"	0.0
5633	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"marquee"	0.0
5634	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"listing"	0.0
5635	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"link"	0.0
5636	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"li"	0.0
5637	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"label"	0.0
5638	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"keygen"	0.0
5639	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"isindex"	0.0
5640	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"input"	0.0
5641	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"img"	0.0
5642	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"image"	0.0
5643	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"iframe"	0.0
5644	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"i"	0.0
5645	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"html"	0.0
5646	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"href"	0.0
5647	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"hr"	0.0
5648	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"hidden"	0.0
5649	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"hgroup"	0.0
5650	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"header"	0.0
5651	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"head"	0.0
5652	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"h6"	0.0
5653	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"h5"	0.0
5654	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"h4"	0.0
5655	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"h3"	0.0
5656	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"h2"	0.0
5657	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"h1"	0.0
5658	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"frameset"	0.0
5659	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"frame"	0.0
5660	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"form"	0.0
5661	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"footer"	0.0
5662	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"font"	0.0
5663	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"figure"	0.0
5664	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"figcaption"	0.0
5665	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"fieldset"	0.0
5666	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"embed"	0.0
5667	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"em"	0.0
5668	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"dt"	0.0
5669	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"dl"	0.0
5670	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"div"	0.0
5671	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"dir"	0.0
5672	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"details"	0.0
5673	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"dd"	0.0
5674	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"command"	0.0
5675	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"colgroup"	0.0
5676	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"col"	0.0
5677	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"code"	0.0
5678	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"center"	0.0
5679	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"caption"	0.0
5680	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"button"	0.0
5681	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"br"	0.0
5682	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"body"	0.0
5683	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"blockquote"	0.0
5684	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"big"	0.0
5685	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"bgsound"	0.0
5686	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"basefont"	0.0
5687	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"base"	0.0
5688	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"b"	0.0
5689	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"aside"	0.0
5690	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"article"	0.0
5691	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"area"	0.0
5692	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"applet"	0.0
5693	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"address"	0.0
5694	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"action"	0.0
5695	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"a"	0.0
5696	org.jsoup.parser.HtmlTreeBuilderState::::415::::18873::::18876::::name::::"This is a searchable index. Enter search keywords: "	0.0
5697	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag(name)	0.0
5698	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("tr")	0.0
5699	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("tbody")	0.0
5700	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("label")	0.0
5701	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("input", inputAttribs)	0.0
5702	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("hr")	0.0
5703	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("head")	0.0
5704	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("form")	0.0
5705	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("colgroup")	0.0
5706	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("br")	0.0
5707	org.jsoup.parser.HtmlTreeBuilderState::::413::::18757::::18764::::startTag::::new org.jsoup.parser.Token.StartTag("body")	0.0
5708	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::true	0.0
5709	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::si < 64	0.0
5710	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::seenFormattingElement	0.0
5711	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::remainingA != null	0.0
5712	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(t)	0.0
5713	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::org.jsoup.parser.HtmlTreeBuilderState.isWhitespace(c)	0.0
5714	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::notIgnored	0.0
5715	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::node == formatEl	0.0
5716	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::lastNode == furthestBlock	0.0
5717	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::j < 3	0.0
5718	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::i > 0	0.0
5719	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::i < 8	0.0
5720	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::furthestBlock == null	0.0
5721	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::formatEl == null	0.0
5722	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::false	0.0
5723	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::el == formatEl	0.0
5724	org.jsoup.parser.HtmlTreeBuilderState::::401::::18122::::18163::::(tb.getActiveFormattingElement("a")) != null::::currentForm == null	0.0
5725	org.jsoup.parser.HtmlTreeBuilder::::664::::23322::::23333::::return null::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
5726	org.jsoup.parser.HtmlTreeBuilder::::664::::23322::::23333::::return null::::INSERT::::STATEMENT::::pop()	0.0
5727	org.jsoup.parser.HtmlTreeBuilder::::664::::23322::::23333::::return null::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5728	org.jsoup.parser.HtmlTreeBuilder::::664::::23322::::23333::::return null::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5729	org.jsoup.parser.HtmlTreeBuilder::::664::::23322::::23333::::return null::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5730	org.jsoup.parser.HtmlTreeBuilder::::664::::23322::::23333::::return null::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5731	org.jsoup.parser.HtmlTreeBuilder::::662::::23298::::23301::::next::::this.headElement	0.0
5732	org.jsoup.parser.HtmlTreeBuilder::::662::::23298::::23301::::next::::pop()	0.0
5733	org.jsoup.parser.HtmlTreeBuilder::::662::::23298::::23301::::next::::getFromStack("table")	0.0
5734	org.jsoup.parser.HtmlTreeBuilder::::662::::23291::::23302::::return next::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5735	org.jsoup.parser.HtmlTreeBuilder::::662::::23291::::23302::::return next::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5736	org.jsoup.parser.HtmlTreeBuilder::::662::::23291::::23302::::return next::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5737	org.jsoup.parser.HtmlTreeBuilder::::662::::23291::::23302::::return next::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5738	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"xmp"	0.0
5739	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"wbr"	0.0
5740	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"ul"	0.0
5741	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"tr"	0.0
5742	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"title"	0.0
5743	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"thead"	0.0
5744	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"th"	0.0
5745	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"tfoot"	0.0
5746	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"textarea"	0.0
5747	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"td"	0.0
5748	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"tbody"	0.0
5749	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"table"	0.0
5750	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"summary"	0.0
5751	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"style"	0.0
5752	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"select"	0.0
5753	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"section"	0.0
5754	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"script"	0.0
5755	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"rt"	0.0
5756	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"rp"	0.0
5757	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"pre"	0.0
5758	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"popping html!"	0.0
5759	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"pop td not in cell"	0.0
5760	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"plaintext"	0.0
5761	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"param"	0.0
5762	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"p"	0.0
5763	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"option"	0.0
5764	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"optgroup"	0.0
5765	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"ol"	0.0
5766	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"object"	0.0
5767	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"noscript"	0.0
5768	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"noframes"	0.0
5769	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"noembed"	0.0
5770	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"nav"	0.0
5771	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"meta"	0.0
5772	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"menu"	0.0
5773	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"marquee"	0.0
5774	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"listing"	0.0
5775	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"link"	0.0
5776	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"li"	0.0
5777	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"isindex"	0.0
5778	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"input"	0.0
5779	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"img"	0.0
5780	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"iframe"	0.0
5781	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"html"	0.0
5782	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"href"	0.0
5783	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"hr"	0.0
5784	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"hgroup"	0.0
5785	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"header"	0.0
5786	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"head"	0.0
5787	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"h6"	0.0
5788	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"h5"	0.0
5789	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"h4"	0.0
5790	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"h3"	0.0
5791	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"h2"	0.0
5792	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"h1"	0.0
5793	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"frameset"	0.0
5794	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"frame"	0.0
5795	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"form"	0.0
5796	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"footer"	0.0
5797	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"figure"	0.0
5798	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"figcaption"	0.0
5799	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"fieldset"	0.0
5800	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"embed"	0.0
5801	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"dt"	0.0
5802	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"dl"	0.0
5803	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"div"	0.0
5804	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"dir"	0.0
5805	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"details"	0.0
5806	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"dd"	0.0
5807	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"currentToken="	0.0
5808	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"command"	0.0
5809	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"colgroup"	0.0
5810	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"col"	0.0
5811	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"center"	0.0
5812	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"caption"	0.0
5813	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"button"	0.0
5814	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"br"	0.0
5815	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"body"	0.0
5816	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"blockquote"	0.0
5817	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"bgsound"	0.0
5818	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"basefont"	0.0
5819	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"base"	0.0
5820	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"aside"	0.0
5821	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"article"	0.0
5822	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"area"	0.0
5823	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"applet"	0.0
5824	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"address"	0.0
5825	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"Unexpected token [%s] when in state [%s]"	0.0
5826	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"TreeBuilder{" + "currentToken="	0.0
5827	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"TreeBuilder{"	0.0
5828	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"Should not be reachable"	0.0
5829	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::"InCell"	0.0
5830	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::", state="	0.0
5831	org.jsoup.parser.HtmlTreeBuilder::::661::::23264::::23271::::nodeName::::", currentElement="	0.0
5832	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23272::::next.nodeName().equals(nodeName)::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5833	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23272::::next.nodeName().equals(nodeName)::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5834	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23272::::next.nodeName().equals(nodeName)::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5835	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23272::::next.nodeName().equals(nodeName)::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5836	org.jsoup.parser.HtmlTreeBuilder::::661::::23241::::23244::::next::::this.headElement	0.0
5837	org.jsoup.parser.HtmlTreeBuilder::::661::::23237::::23302::::if (next.nodeName().equals(nodeName))    return next;::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5838	org.jsoup.parser.HtmlTreeBuilder::::661::::23237::::23302::::if (next.nodeName().equals(nodeName))    return next;::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5839	org.jsoup.parser.HtmlTreeBuilder::::661::::23237::::23302::::if (next.nodeName().equals(nodeName))    return next;::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5840	org.jsoup.parser.HtmlTreeBuilder::::661::::23237::::23302::::if (next.nodeName().equals(nodeName))    return next;::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5841	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::true	0.0
5842	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::this.framesetOk	0.0
5843	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::this.fosterInserts	0.0
5844	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::isFosterInserts()	0.0
5845	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::framesetOk	0.0
5846	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::fragmentParsing	0.0
5847	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::fosterInserts	0.0
5848	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::false	0.0
5849	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::baseUriSetFromDoc	0.0
5850	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23178::::next == null::::(formElement) != null	0.0
5851	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23170::::next::::this.headElement	0.0
5852	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23170::::next::::pop()	0.0
5853	org.jsoup.parser.HtmlTreeBuilder::::659::::23167::::23170::::next::::getFromStack("table")	0.0
5854	org.jsoup.parser.HtmlTreeBuilder::::657::::23090::::23312::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == null)        break;    else        if (next.nodeName().equals(nodeName))            return next;} ::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5855	org.jsoup.parser.HtmlTreeBuilder::::657::::23090::::23312::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == null)        break;    else        if (next.nodeName().equals(nodeName))            return next;} ::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5856	org.jsoup.parser.HtmlTreeBuilder::::657::::23090::::23312::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == null)        break;    else        if (next.nodeName().equals(nodeName))            return next;} ::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5857	org.jsoup.parser.HtmlTreeBuilder::::657::::23090::::23312::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == null)        break;    else        if (next.nodeName().equals(nodeName))            return next;} ::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5858	org.jsoup.parser.HtmlTreeBuilder::::656::::23041::::23058::::formattingElements::::new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element>()	0.0
5859	org.jsoup.parser.HtmlTreeBuilder::::656::::23018::::23080::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5860	org.jsoup.parser.HtmlTreeBuilder::::656::::23018::::23080::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5861	org.jsoup.parser.HtmlTreeBuilder::::656::::23018::::23080::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5862	org.jsoup.parser.HtmlTreeBuilder::::656::::23018::::23080::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5863	org.jsoup.parser.HtmlTreeBuilder::::652::::22940::::22941::::el::::this.headElement	0.0
5864	org.jsoup.parser.HtmlTreeBuilder::::652::::22940::::22941::::el::::pop()	0.0
5865	org.jsoup.parser.HtmlTreeBuilder::::652::::22940::::22941::::el::::getFromStack("table")	0.0
5866	org.jsoup.parser.HtmlTreeBuilder::::652::::22920::::22937::::formattingElements::::new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element>()	0.0
5867	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5868	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5869	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5870	org.jsoup.parser.HtmlTreeBuilder::::652::::22896::::22943::::return isElementInQueue(formattingElements, el)::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5871	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
5872	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::pop()	0.0
5873	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::insert(el)	0.0
5874	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5875	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5876	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5877	org.jsoup.parser.HtmlTreeBuilder::::646::::22795::::22800::::break::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5878	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5879	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5880	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5881	org.jsoup.parser.HtmlTreeBuilder::::645::::22766::::22777::::it.remove()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5882	org.jsoup.parser.HtmlTreeBuilder::::644::::22744::::22745::::el::::this.headElement	0.0
5883	org.jsoup.parser.HtmlTreeBuilder::::644::::22744::::22745::::el::::pop()	0.0
5884	org.jsoup.parser.HtmlTreeBuilder::::644::::22744::::22745::::el::::getFromStack("table")	0.0
5885	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::true	0.0
5886	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::this.framesetOk	0.0
5887	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::this.fosterInserts	0.0
5888	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::onStack(el)	0.0
5889	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::isFosterInserts()	0.0
5890	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::framesetOk	0.0
5891	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::fragmentParsing	0.0
5892	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::fosterInserts	0.0
5893	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::false	0.0
5894	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::baseUriSetFromDoc	0.0
5895	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22745::::next == el::::(formElement) != null	0.0
5896	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22739::::next::::this.headElement	0.0
5897	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22739::::next::::pop()	0.0
5898	org.jsoup.parser.HtmlTreeBuilder::::644::::22736::::22739::::next::::getFromStack("table")	0.0
5899	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5900	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5901	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5902	org.jsoup.parser.HtmlTreeBuilder::::642::::22659::::22824::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        break;    }} ::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5903	org.jsoup.parser.HtmlTreeBuilder::::641::::22610::::22627::::formattingElements::::new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element>()	0.0
5904	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5905	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5906	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5907	org.jsoup.parser.HtmlTreeBuilder::::641::::22587::::22649::::java.util.Iterator<org.jsoup.nodes.Element> it = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5908	org.jsoup.parser.HtmlTreeBuilder::::582::::20271::::20272::::in::::this.headElement	0.0
5909	org.jsoup.parser.HtmlTreeBuilder::::582::::20271::::20272::::in::::pop()	0.0
5910	org.jsoup.parser.HtmlTreeBuilder::::582::::20271::::20272::::in::::headElement	0.0
5911	org.jsoup.parser.HtmlTreeBuilder::::582::::20271::::20272::::in::::getFromStack("table")	0.0
5912	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::numSeen++	0.0
5913	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5914	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5915	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5916	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20274::::formattingElements.add(in)::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5917	org.jsoup.parser.HtmlTreeBuilder::::582::::20248::::20265::::formattingElements::::new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element>()	0.0
5918	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5919	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5920	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5921	org.jsoup.parser.HtmlTreeBuilder::::569::::19927::::20238::::while (iter.hasNext()) {    org.jsoup.nodes.Element el = iter.next();    if (el == null)        break;    if (isSameFormattingElement(in, el))        numSeen++;    if (numSeen == 3) {        iter.remove();        break;    }} ::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5922	org.jsoup.parser.HtmlTreeBuilder::::568::::19878::::19895::::formattingElements::::new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element>()	0.0
5923	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5924	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5925	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5926	org.jsoup.parser.HtmlTreeBuilder::::568::::19853::::19917::::java.util.Iterator<org.jsoup.nodes.Element> iter = formattingElements.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5927	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
5928	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::pop()	0.0
5929	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
5930	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
5931	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
5932	org.jsoup.parser.HtmlTreeBuilder::::567::::19828::::19843::::int numSeen = 0::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
5933	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"xmp"	0.0
5934	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"wbr"	0.0
5935	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"ul"	0.0
5936	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"tr"	0.0
5937	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"title"	0.0
5938	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"thead"	0.0
5939	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"th"	0.0
5940	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"tfoot"	0.0
5941	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"textarea"	0.0
5942	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"td"	0.0
5943	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"tbody"	0.0
5944	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"table"	0.0
5945	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"summary"	0.0
5946	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"style"	0.0
5947	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"select"	0.0
5948	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"section"	0.0
5949	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"script"	0.0
5950	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"rt"	0.0
5951	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"rp"	0.0
5952	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"pre"	0.0
5953	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"popping html!"	0.0
5954	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"pop td not in cell"	0.0
5955	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"plaintext"	0.0
5956	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"param"	0.0
5957	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"p"	0.0
5958	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"option"	0.0
5959	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"optgroup"	0.0
5960	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"ol"	0.0
5961	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"object"	0.0
5962	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"noscript"	0.0
5963	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"noframes"	0.0
5964	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"noembed"	0.0
5965	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"nav"	0.0
5966	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"meta"	0.0
5967	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"menu"	0.0
5968	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"marquee"	0.0
5969	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"listing"	0.0
5970	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"link"	0.0
5971	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"li"	0.0
5972	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"isindex"	0.0
5973	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"input"	0.0
5974	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"img"	0.0
5975	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"iframe"	0.0
5976	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"html"	0.0
5977	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"href"	0.0
5978	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"hr"	0.0
5979	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"hgroup"	0.0
5980	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"header"	0.0
5981	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"head"	0.0
5982	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"h6"	0.0
5983	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"h5"	0.0
5984	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"h4"	0.0
5985	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"h3"	0.0
5986	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"h2"	0.0
5987	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"h1"	0.0
5988	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"frameset"	0.0
5989	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"frame"	0.0
5990	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"form"	0.0
5991	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"footer"	0.0
5992	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"figure"	0.0
5993	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"figcaption"	0.0
5994	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"fieldset"	0.0
5995	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"embed"	0.0
5996	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"dt"	0.0
5997	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"dl"	0.0
5998	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"div"	0.0
5999	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"dir"	0.0
6000	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"details"	0.0
6001	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"dd"	0.0
6002	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"currentToken="	0.0
6003	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"command"	0.0
6004	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"colgroup"	0.0
6005	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"col"	0.0
6006	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"center"	0.0
6007	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"caption"	0.0
6008	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"button"	0.0
6009	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"br"	0.0
6010	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"body"	0.0
6011	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"blockquote"	0.0
6012	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"bgsound"	0.0
6013	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"basefont"	0.0
6014	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"base"	0.0
6015	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"aside"	0.0
6016	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"article"	0.0
6017	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"area"	0.0
6018	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"applet"	0.0
6019	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"address"	0.0
6020	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"Unexpected token [%s] when in state [%s]"	0.0
6021	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"TreeBuilder{" + "currentToken="	0.0
6022	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"TreeBuilder{"	0.0
6023	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"Should not be reachable"	0.0
6024	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::"InCell"	0.0
6025	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::", state="	0.0
6026	org.jsoup.parser.HtmlTreeBuilder::::555::::18907::::18910::::name::::", currentElement="	0.0
6027	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6028	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6029	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6030	org.jsoup.parser.HtmlTreeBuilder::::555::::18886::::19725::::return org.jsoup.helper.StringUtil.in(name, "address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "command", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "marquee", "menu", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "style", "summary", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "ul", "wbr", "xmp")::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6031	org.jsoup.parser.HtmlTreeBuilder::::554::::18863::::18864::::el::::this.headElement	0.0
6032	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6033	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6034	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6035	org.jsoup.parser.HtmlTreeBuilder::::554::::18849::::18876::::java.lang.String name = el.nodeName()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6036	org.jsoup.parser.HtmlTreeBuilder::::371::::12190::::12191::::in::::this.headElement	0.0
6037	org.jsoup.parser.HtmlTreeBuilder::::371::::12190::::12191::::in::::pop()	0.0
6038	org.jsoup.parser.HtmlTreeBuilder::::371::::12190::::12191::::in::::headElement	0.0
6039	org.jsoup.parser.HtmlTreeBuilder::::371::::12190::::12191::::in::::getFromStack("table")	0.0
6040	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12187::::i + 1::::3	0.0
6041	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12187::::i + 1::::1	0.0
6042	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12187::::i + 1::::0	0.0
6043	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12187::::i + 1::::-1	0.0
6044	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12185::::i::::i + 1	0.0
6045	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12185::::i::::3	0.0
6046	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12185::::i::::1	0.0
6047	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12185::::i::::0	0.0
6048	org.jsoup.parser.HtmlTreeBuilder::::371::::12185::::12185::::i::::-1	0.0
6049	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6050	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6051	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6052	org.jsoup.parser.HtmlTreeBuilder::::371::::12175::::12193::::stack.add((i + 1), in)::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6053	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::true	0.0
6054	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::this.framesetOk	0.0
6055	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::this.fosterInserts	0.0
6056	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::isFosterInserts()	0.0
6057	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::framesetOk	0.0
6058	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::fragmentParsing	0.0
6059	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::fosterInserts	0.0
6060	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::false	0.0
6061	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::baseUriSetFromDoc	0.0
6062	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12163::::i != (-1)::::(formElement) != null	0.0
6063	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12157::::i::::i + 1	0.0
6064	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12157::::i::::3	0.0
6065	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12157::::i::::1	0.0
6066	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12157::::i::::0	0.0
6067	org.jsoup.parser.HtmlTreeBuilder::::370::::12157::::12157::::i::::-1	0.0
6068	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6069	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6070	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6071	org.jsoup.parser.HtmlTreeBuilder::::370::::12141::::12165::::org.jsoup.helper.Validate.isTrue((i != (-1)))::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6072	org.jsoup.parser.HtmlTreeBuilder::::369::::12125::::12129::::after::::this.headElement	0.0
6073	org.jsoup.parser.HtmlTreeBuilder::::369::::12125::::12129::::after::::pop()	0.0
6074	org.jsoup.parser.HtmlTreeBuilder::::369::::12125::::12129::::after::::headElement	0.0
6075	org.jsoup.parser.HtmlTreeBuilder::::369::::12125::::12129::::after::::getFromStack("table")	0.0
6076	org.jsoup.parser.HtmlTreeBuilder::::369::::12099::::12131::::int i = stack.lastIndexOf(after)::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6077	org.jsoup.parser.HtmlTreeBuilder::::369::::12099::::12131::::int i = stack.lastIndexOf(after)::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6078	org.jsoup.parser.HtmlTreeBuilder::::369::::12099::::12131::::int i = stack.lastIndexOf(after)::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6079	org.jsoup.parser.HtmlTreeBuilder::::369::::12099::::12131::::int i = stack.lastIndexOf(after)::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6080	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6081	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6082	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6083	org.jsoup.parser.HtmlTreeBuilder::::362::::11964::::11980::::return it.next()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6084	org.jsoup.parser.HtmlTreeBuilder::::361::::11942::::11943::::el::::this.headElement	0.0
6085	org.jsoup.parser.HtmlTreeBuilder::::361::::11942::::11943::::el::::pop()	0.0
6086	org.jsoup.parser.HtmlTreeBuilder::::361::::11942::::11943::::el::::getFromStack("table")	0.0
6087	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::true	0.0
6088	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::this.framesetOk	0.0
6089	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::this.fosterInserts	0.0
6090	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::onStack(el)	0.0
6091	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::isFosterInserts()	0.0
6092	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::framesetOk	0.0
6093	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::fragmentParsing	0.0
6094	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::fosterInserts	0.0
6095	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::false	0.0
6096	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::baseUriSetFromDoc	0.0
6097	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11943::::next == el::::(formElement) != null	0.0
6098	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11937::::next::::this.headElement	0.0
6099	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11937::::next::::pop()	0.0
6100	org.jsoup.parser.HtmlTreeBuilder::::361::::11934::::11937::::next::::getFromStack("table")	0.0
6101	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6102	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6103	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6104	org.jsoup.parser.HtmlTreeBuilder::::359::::11857::::12004::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        return it.next();    }} ::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6105	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6106	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6107	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6108	org.jsoup.parser.HtmlTreeBuilder::::358::::11798::::11847::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6109	org.jsoup.parser.HtmlTreeBuilder::::357::::11785::::11786::::el::::this.headElement	0.0
6110	org.jsoup.parser.HtmlTreeBuilder::::357::::11785::::11786::::el::::pop()	0.0
6111	org.jsoup.parser.HtmlTreeBuilder::::357::::11785::::11786::::el::::getFromStack("table")	0.0
6112	org.jsoup.parser.HtmlTreeBuilder::::357::::11777::::11783::::onStack::::insert	0.0
6113	org.jsoup.parser.HtmlTreeBuilder::::357::::11777::::11783::::onStack::::aboveOnStack	0.0
6114	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
6115	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::pop()	0.0
6116	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::insertNode(el)	0.0
6117	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::insert(el)	0.0
6118	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::if (el == null)    break;	0.0
6119	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::if (baseUriSetFromDoc)    return ;	0.0
6120	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6121	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6122	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6123	org.jsoup.parser.HtmlTreeBuilder::::357::::11770::::11787::::assert onStack(el)::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6124	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::this.framesetOk	0.0
6125	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::this.fosterInserts	0.0
6126	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::onStack(el)	0.0
6127	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::next == null	0.0
6128	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::next == el	0.0
6129	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::isElementInQueue(stack, el)	0.0
6130	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::isElementInQueue(formattingElements, el)	0.0
6131	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::framesetOk	0.0
6132	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::fragmentParsing	0.0
6133	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::fosterInserts	0.0
6134	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::el == null	0.0
6135	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::baseUriSetFromDoc	0.0
6136	org.jsoup.parser.HtmlTreeBuilder::::289::::9982::::9985::::true::::(formElement) != null	0.0
6137	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
6138	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::pop()	0.0
6139	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6140	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6141	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6142	org.jsoup.parser.HtmlTreeBuilder::::289::::9975::::9986::::return true::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6143	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6144	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6145	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6146	org.jsoup.parser.HtmlTreeBuilder::::288::::9946::::9957::::it.remove()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6147	org.jsoup.parser.HtmlTreeBuilder::::287::::9924::::9925::::el::::this.headElement	0.0
6148	org.jsoup.parser.HtmlTreeBuilder::::287::::9924::::9925::::el::::pop()	0.0
6149	org.jsoup.parser.HtmlTreeBuilder::::287::::9924::::9925::::el::::getFromStack("table")	0.0
6150	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::true	0.0
6151	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::this.framesetOk	0.0
6152	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::this.fosterInserts	0.0
6153	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::onStack(el)	0.0
6154	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::isFosterInserts()	0.0
6155	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::framesetOk	0.0
6156	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::fragmentParsing	0.0
6157	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::fosterInserts	0.0
6158	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::false	0.0
6159	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::baseUriSetFromDoc	0.0
6160	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9925::::next == el::::(formElement) != null	0.0
6161	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9919::::next::::this.headElement	0.0
6162	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9919::::next::::pop()	0.0
6163	org.jsoup.parser.HtmlTreeBuilder::::287::::9916::::9919::::next::::getFromStack("table")	0.0
6164	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6165	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6166	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6167	org.jsoup.parser.HtmlTreeBuilder::::285::::9839::::10010::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == el) {        it.remove();        return true;    }} ::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6168	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6169	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6170	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6171	org.jsoup.parser.HtmlTreeBuilder::::284::::9780::::9829::::java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6172	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::this.framesetOk	0.0
6173	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::this.fosterInserts	0.0
6174	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::next == null	0.0
6175	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::next == element	0.0
6176	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::framesetOk	0.0
6177	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::fragmentParsing	0.0
6178	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::fosterInserts	0.0
6179	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::baseUriSetFromDoc	0.0
6180	org.jsoup.parser.HtmlTreeBuilder::::266::::9370::::9373::::true::::(formElement) != null	0.0
6181	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
6182	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::pop()	0.0
6183	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6184	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6185	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6186	org.jsoup.parser.HtmlTreeBuilder::::266::::9363::::9374::::return true::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6187	org.jsoup.parser.HtmlTreeBuilder::::265::::9336::::9342::::element::::this.headElement	0.0
6188	org.jsoup.parser.HtmlTreeBuilder::::265::::9336::::9342::::element::::pop()	0.0
6189	org.jsoup.parser.HtmlTreeBuilder::::265::::9336::::9342::::element::::getFromStack("table")	0.0
6190	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::true	0.0
6191	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::this.framesetOk	0.0
6192	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::this.fosterInserts	0.0
6193	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::isFosterInserts()	0.0
6194	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::framesetOk	0.0
6195	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::fragmentParsing	0.0
6196	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::fosterInserts	0.0
6197	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::false	0.0
6198	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::baseUriSetFromDoc	0.0
6199	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9342::::next == element::::(formElement) != null	0.0
6200	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9331::::next::::this.headElement	0.0
6201	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9331::::next::::pop()	0.0
6202	org.jsoup.parser.HtmlTreeBuilder::::265::::9328::::9331::::next::::getFromStack("table")	0.0
6203	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6204	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6205	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6206	org.jsoup.parser.HtmlTreeBuilder::::263::::9251::::9398::::while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == element) {        return true;    }} ::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6207	org.jsoup.parser.HtmlTreeBuilder::::262::::9215::::9219::::queue::::new org.jsoup.helper.DescendableLinkedList<org.jsoup.nodes.Element>()	0.0
6208	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6209	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6210	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6211	org.jsoup.parser.HtmlTreeBuilder::::262::::9192::::9241::::java.util.Iterator<org.jsoup.nodes.Element> it = queue.descendingIterator()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6212	org.jsoup.parser.HtmlTreeBuilder::::258::::9078::::9079::::el::::this.headElement	0.0
6213	org.jsoup.parser.HtmlTreeBuilder::::258::::9078::::9079::::el::::pop()	0.0
6214	org.jsoup.parser.HtmlTreeBuilder::::258::::9078::::9079::::el::::getFromStack("table")	0.0
6215	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6216	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6217	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6218	org.jsoup.parser.HtmlTreeBuilder::::258::::9047::::9081::::return isElementInQueue(stack, el)::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6219	org.jsoup.parser.HtmlTreeBuilder::::254::::8984::::8996::::return stack::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
6220	org.jsoup.parser.HtmlTreeBuilder::::254::::8984::::8996::::return stack::::INSERT::::STATEMENT::::pop()	0.0
6221	org.jsoup.parser.HtmlTreeBuilder::::254::::8984::::8996::::return stack::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6222	org.jsoup.parser.HtmlTreeBuilder::::254::::8984::::8996::::return stack::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6223	org.jsoup.parser.HtmlTreeBuilder::::254::::8984::::8996::::return stack::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6224	org.jsoup.parser.HtmlTreeBuilder::::254::::8984::::8996::::return stack::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6225	org.jsoup.parser.HtmlTreeBuilder::::152::::5118::::5137::::errors.canAddError()::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6226	org.jsoup.parser.HtmlTreeBuilder::::152::::5118::::5137::::errors.canAddError()::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6227	org.jsoup.parser.HtmlTreeBuilder::::152::::5118::::5137::::errors.canAddError()::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6228	org.jsoup.parser.HtmlTreeBuilder::::152::::5118::::5137::::errors.canAddError()::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6229	org.jsoup.parser.HtmlTreeBuilder::::152::::5114::::5269::::if (errors.canAddError())    errors.add(new org.jsoup.parser.ParseError(reader.pos(), "Unexpected token [%s] when in state [%s]", currentToken.tokenType(), state));::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6230	org.jsoup.parser.HtmlTreeBuilder::::152::::5114::::5269::::if (errors.canAddError())    errors.add(new org.jsoup.parser.ParseError(reader.pos(), "Unexpected token [%s] when in state [%s]", currentToken.tokenType(), state));::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6231	org.jsoup.parser.HtmlTreeBuilder::::152::::5114::::5269::::if (errors.canAddError())    errors.add(new org.jsoup.parser.ParseError(reader.pos(), "Unexpected token [%s] when in state [%s]", currentToken.tokenType(), state));::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6232	org.jsoup.parser.HtmlTreeBuilder::::152::::5114::::5269::::if (errors.canAddError())    errors.add(new org.jsoup.parser.ParseError(reader.pos(), "Unexpected token [%s] when in state [%s]", currentToken.tokenType(), state));::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
6233	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"xmp"	0.0
6234	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"wbr"	0.0
6235	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"ul"	0.0
6236	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"tr"	0.0
6237	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"title"	0.0
6238	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"thead"	0.0
6239	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"th"	0.0
6240	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"tfoot"	0.0
6241	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"textarea"	0.0
6242	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"td"	0.0
6243	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"tbody"	0.0
6244	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"table"	0.0
6245	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"summary"	0.0
6246	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"style"	0.0
6247	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"select"	0.0
6248	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"section"	0.0
6249	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"script"	0.0
6250	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"rt"	0.0
6251	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"rp"	0.0
6252	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"pre"	0.0
6253	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"popping html!"	0.0
6254	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"pop td not in cell"	0.0
6255	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"plaintext"	0.0
6256	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"param"	0.0
6257	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"p"	0.0
6258	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"option"	0.0
6259	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"optgroup"	0.0
6260	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"ol"	0.0
6261	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"object"	0.0
6262	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"noscript"	0.0
6263	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"noframes"	0.0
6264	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"noembed"	0.0
6265	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"nav"	0.0
6266	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"meta"	0.0
6267	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"menu"	0.0
6268	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"marquee"	0.0
6269	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"listing"	0.0
6270	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"link"	0.0
6271	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"li"	0.0
6272	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"isindex"	0.0
6273	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"input"	0.0
6274	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"img"	0.0
6275	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"iframe"	0.0
6276	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"html"	0.0
6277	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"href"	0.0
6278	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"hr"	0.0
6279	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"hgroup"	0.0
6280	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"header"	0.0
6281	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"head"	0.0
6282	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"h6"	0.0
6283	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"h5"	0.0
6284	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"h4"	0.0
6285	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"h3"	0.0
6286	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"h2"	0.0
6287	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"h1"	0.0
6288	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"frameset"	0.0
6289	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"frame"	0.0
6290	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"form"	0.0
6291	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"footer"	0.0
6292	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"figure"	0.0
6293	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"figcaption"	0.0
6294	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"fieldset"	0.0
6295	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"embed"	0.0
6296	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"dt"	0.0
6297	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"dl"	0.0
6298	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"div"	0.0
6299	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"dir"	0.0
6300	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"details"	0.0
6301	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"dd"	0.0
6302	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"currentToken="	0.0
6303	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"command"	0.0
6304	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"colgroup"	0.0
6305	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"col"	0.0
6306	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"center"	0.0
6307	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"caption"	0.0
6308	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"button"	0.0
6309	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"br"	0.0
6310	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"body"	0.0
6311	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"blockquote"	0.0
6312	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"bgsound"	0.0
6313	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"basefont"	0.0
6314	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"base"	0.0
6315	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"aside"	0.0
6316	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"article"	0.0
6317	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"area"	0.0
6318	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"applet"	0.0
6319	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"address"	0.0
6320	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"Unexpected token [%s] when in state [%s]"	0.0
6321	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"TreeBuilder{" + "currentToken="	0.0
6322	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"TreeBuilder{"	0.0
6323	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"Should not be reachable"	0.0
6324	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::"InCell"	0.0
6325	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::", state="	0.0
6326	org.jsoup.parser.HtmlTreeBuilder::::132::::4511::::4517::::baseUri::::", currentElement="	0.0
6327	org.jsoup.parser.HtmlTreeBuilder::::132::::4504::::4518::::return baseUri::::INSERT::::STATEMENT::::resetInsertionMode()	0.0
6328	org.jsoup.parser.HtmlTreeBuilder::::132::::4504::::4518::::return baseUri::::INSERT::::STATEMENT::::pop()	0.0
6329	org.jsoup.parser.HtmlTreeBuilder::::132::::4504::::4518::::return baseUri::::INSERT::::STATEMENT::::generateImpliedEndTags(null)	0.0
6330	org.jsoup.parser.HtmlTreeBuilder::::132::::4504::::4518::::return baseUri::::INSERT::::STATEMENT::::clearStackToContext("tr")	0.0
6331	org.jsoup.parser.HtmlTreeBuilder::::132::::4504::::4518::::return baseUri::::INSERT::::STATEMENT::::clearStackToContext("tbody", "tfoot", "thead")	0.0
6332	org.jsoup.parser.HtmlTreeBuilder::::132::::4504::::4518::::return baseUri::::INSERT::::STATEMENT::::clearStackToContext("table")	0.0
