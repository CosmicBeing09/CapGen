T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	294:298	14:14	value	[]	[T:value]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	303:306	14:14	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	294:306	14:14	value == null	[]	[T:value]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	354:365	15:15	checkedValue	[]	[java.lang.String:checkedValue]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	369:389	15:15	" should not be null"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	354:389	15:15	checkedValue + " should not be null"	[]	[java.lang.String:checkedValue]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.NullPointerException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	329:390	15:15	new java.lang.NullPointerException((checkedValue + " should not be null"))	[]	[java.lang.String:checkedValue]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	323:391	15:15	throw new java.lang.NullPointerException((checkedValue + " should not be null"))	[]	[java.lang.String:checkedValue]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	291:401	14:16	if (value == null) {    throw new java.lang.NullPointerException((checkedValue + " should not be null"));}	[]	[T:value, java.lang.String:checkedValue]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	418:422	17:17	value	[]	[T:value]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	411:423	17:17	return value	[]	[T:value]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	550:557	21:21	iterable	[]	[T:iterable]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	560:574	21:21	checkedIterable	[]	[java.lang.String:checkedIterable]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtInvocationImpl	537:576	21:21	org.mockito.internal.util.Checks.checkNotNull(iterable, checkedIterable)	[T:checkNotNull]	[java.lang.String:checkedIterable, T:iterable]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	591:612	22:22	java.lang.Object item	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	605:612	22:22	iterable	[]	[T:iterable]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	642:645	23:23	item	[]	[java.lang.Object:item]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	648:657	23:23	"item in "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	661:675	23:23	checkedIterable	[]	[java.lang.String:checkedIterable]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	648:675	23:23	"item in " + checkedIterable	[]	[java.lang.String:checkedIterable]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	629:677	23:23	org.mockito.internal.util.Checks.checkNotNull(item, ("item in " + checkedIterable))	[java.lang.Object:checkNotNull]	[java.lang.String:checkedIterable, java.lang.Object:item]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	586:687	22:24	for (java.lang.Object item : iterable) {    org.mockito.internal.util.Checks.checkNotNull(item, ("item in " + checkedIterable));}	[java.lang.Object:checkNotNull]	[java.lang.String:checkedIterable, java.lang.Object:item, T:iterable]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	704:711	25:25	iterable	[]	[T:iterable]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	697:712	25:25	return iterable	[]	[T:iterable]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
