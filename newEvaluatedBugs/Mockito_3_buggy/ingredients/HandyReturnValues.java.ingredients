java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	359:369	12:12	"unchecked"	[]	[]	[spoon.support.reflect.declaration.CtAnnotationImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.SuppressWarnings	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	341:370	12:12	@java.lang.SuppressWarnings("unchecked")	[]	[]	[spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	417:420	15:15	byte	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	452:452	16:16	0	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	445:453	16:16	return 0	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	508:508	20:20	0	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	501:509	20:20	return 0	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	565:568	24:24	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	558:569	24:24	return null	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	628:632	28:28	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	621:633	28:28	return false	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	692:693	32:32	""	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	685:694	32:32	return ""	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.Class<T>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	855:859	37:37	clazz	[]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	834:860	37:37	isPrimitiveOrWrapper(clazz)	[boolean:isPrimitiveOrWrapper]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<T>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	918:922	38:38	clazz	[]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtInvocationImpl	884:923	38:38	defaultValueForPrimitiveOrWrapper(clazz)	[T:defaultValueForPrimitiveOrWrapper]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	877:924	38:38	return defaultValueForPrimitiveOrWrapper(clazz)	[T:defaultValueForPrimitiveOrWrapper]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	830:934	37:39	if (isPrimitiveOrWrapper(clazz)) {    return defaultValueForPrimitiveOrWrapper(clazz);}	[boolean:isPrimitiveOrWrapper, T:defaultValueForPrimitiveOrWrapper]	[java.lang.Class<T>:clazz]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	952:955	40:40	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	945:956	40:40	return null	[]	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashMap	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1009:1021	44:44	new java.util.HashMap()	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1002:1022	44:44	return new java.util.HashMap()	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.util.LinkedList	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1077:1092	48:48	new java.util.LinkedList()	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1070:1093	48:48	return new java.util.LinkedList()	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.util.HashSet	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1146:1158	52:52	new java.util.HashSet()	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1139:1159	52:52	return new java.util.HashSet()	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1224:1231	56:56	instance	[]	[T:instance]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1236:1239	56:56	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1224:1239	56:56	instance == null	[]	[T:instance]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1243:1246	56:56	null	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1264:1271	56:56	instance	[]	[T:instance]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<? extends java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	1264:1282	56:56	instance.getClass()	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
? extends java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	1254:1283	56:56	(T) (returnFor(instance.getClass()))	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtConditionalImpl	1224:1283	56:56	instance == null ? null : ((T) (returnFor(instance.getClass())))	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1217:1284	56:56	return instance == null ? null : ((T) (returnFor(instance.getClass())))	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
