java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2271:2318	58:58	"org.mockito.configuration.MockitoConfiguration"	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2420:2430	63:63	"unchecked"	[]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.declaration.CtAnnotationImpl]	[]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	2419:2431	63:63	{ "unchecked" }	[]	[]	[spoon.support.reflect.declaration.CtAnnotationImpl]	[]
java.lang.SuppressWarnings	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2401:2432	63:63	@java.lang.SuppressWarnings({ "unchecked" })	[]	[]	[]	[]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2543:2560	66:66	java.lang.Class configClass	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	2588:2598	68:68	configClass	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	2610:2614	68:68	java.lang.Class	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2624:2655	68:68	org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME	[]	[java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<?>	Expression	class spoon.support.reflect.code.CtInvocationImpl	2610:2656	68:68	(java.lang.Class) (java.lang.Class.forName(org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME))	[]	[java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	2588:2657	68:68	configClass = ((java.lang.Class) (java.lang.Class.forName(org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME)))	[]	[java.lang.Class:configClass, java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2803:2806	71:71	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2796:2807	71:71	return null	[]	[]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	2570:2817	67:72	try {    configClass = ((java.lang.Class) (java.lang.Class.forName(org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME)));} catch (java.lang.ClassNotFoundException e) {    return null;}	[]	[java.lang.Class:configClass, java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2877:2887	75:75	configClass	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	2877:2901	75:75	(org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance())	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2846:2902	75:75	return ((org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance()))	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2997:3040	77:77	"MockitoConfiguration class must implement "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3044:3070	77:77	org.mockito.configuration.IMockitoConfiguration.class	[]	[java.lang.Class:class]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3044:3080	77:77	org.mockito.configuration.IMockitoConfiguration.class.getName()	[java.lang.String:getName]	[java.lang.Class:class]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2997:3080	77:77	"MockitoConfiguration class must implement " + (org.mockito.configuration.IMockitoConfiguration.class.getName())	[java.lang.String:getName]	[java.lang.Class:class]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3084:3096	77:77	" interface."	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2997:3096	77:77	("MockitoConfiguration class must implement " + (org.mockito.configuration.IMockitoConfiguration.class.getName())) + " interface."	[java.lang.String:getName]	[java.lang.Class:class]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.ClassCastException	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3099:3099	77:77	e	[]	[java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.exceptions.misusing.MockitoConfigurationException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2963:3100	77:77	new org.mockito.exceptions.misusing.MockitoConfigurationException((("MockitoConfiguration class must implement " + (org.mockito.configuration.IMockitoConfiguration.class.getName())) + " interface."), e)	[java.lang.String:getName]	[java.lang.Class:class, java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2957:3101	77:77	throw new org.mockito.exceptions.misusing.MockitoConfigurationException((("MockitoConfiguration class must implement " + (org.mockito.configuration.IMockitoConfiguration.class.getName())) + " interface."), e)	[java.lang.String:getName]	[java.lang.Class:class, java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3187:3210	79:79	"Unable to instantiate "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3214:3245	79:79	org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME	[]	[java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3187:3245	79:79	"Unable to instantiate " + (org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME)	[]	[java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3248:3297	79:79	" class. Does it have a safe, no-arg constructor?"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3187:3297	79:79	("Unable to instantiate " + (org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME)) + " class. Does it have a safe, no-arg constructor?"	[]	[java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.Exception	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3300:3300	79:79	e	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
org.mockito.exceptions.misusing.MockitoConfigurationException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	3153:3301	79:79	new org.mockito.exceptions.misusing.MockitoConfigurationException((("Unable to instantiate " + (org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME)) + " class. Does it have a safe, no-arg constructor?"), e)	[]	[java.lang.Exception:e, java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	3147:3302	79:79	throw new org.mockito.exceptions.misusing.MockitoConfigurationException((("Unable to instantiate " + (org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME)) + " class. Does it have a safe, no-arg constructor?"), e)	[]	[java.lang.Exception:e, java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	2828:3312	74:80	try {    return ((org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance()));} catch (java.lang.ClassCastException e) {    throw new org.mockito.exceptions.misusing.MockitoConfigurationException((("MockitoConfiguration class must implement " + (org.mockito.configuration.IMockitoConfiguration.class.getName())) + " interface."), e);} catch (java.lang.Exception e) {    throw new org.mockito.exceptions.misusing.MockitoConfigurationException((("Unable to instantiate " + (org.mockito.internal.configuration.ClassPathLoader.MOCKITO_CONFIGURATION_CLASS_NAME)) + " class. Does it have a safe, no-arg constructor?"), e);}	[java.lang.String:getName]	[java.lang.Class:configClass, java.lang.Class:class, java.lang.Exception:e, java.lang.ClassCastException:e, java.lang.String:MOCKITO_CONFIGURATION_CLASS_NAME]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
