org.mockito.internal.configuration.injection.scanner.MockScanner::::61::::1817::::1827::::fieldReader::::new org.mockito.internal.util.reflection.FieldReader(instance, field)	true
org.mockito.internal.configuration.injection.MockInjection::::86::::2893::::2915::::postInjectionStrategies::::injectionStrategies	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::73::::2742::::2760::::spyAnnotationEngine::::delegate	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::56::::2043::::2060::::processInjectMocks::::processIndependentAnnotations	true
org.mockito.internal.configuration.injection.MockInjectionStrategy::::42::::1129::::1136::::strategy::::nextStrategy	true
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3410::::getArgumentMatcherStorage::::validateMostStuff	false
org.mockito.internal.configuration.injection.scanner.MockScanner::::62::::1861::::1872::::mockInstance::::instance	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::75::::2827::::2838::::classContext::::clazz	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::75::::2812::::2823::::classContext::::clazz	false
org.mockito.internal.configuration.InjectingAnnotationEngine::::69::::2547::::2558::::classContext::::clazz	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::63::::2348::::2359::::classContext::::clazz	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::63::::2333::::2344::::classContext::::clazz	false
org.mockito.internal.configuration.InjectingAnnotationEngine::::73::::2770::::2781::::classContext::::clazz	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::71::::2662::::2673::::classContext::::clazz	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::61::::2250::::2261::::classContext::::clazz	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::55::::1965::::1993::::processIndependentAnnotations::::processInjectMocks	true
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3410::::getArgumentMatcherStorage::::validateState	false
org.mockito.internal.configuration.InjectingAnnotationEngine::::68::::2525::::2529::::clazz::::classContext	false
org.mockito.internal.configuration.InjectingAnnotationEngine::::60::::2228::::2232::::clazz::::classContext	false
org.mockito.internal.configuration.InjectingAnnotationEngine::::71::::2645::::2652::::delegate::::spyAnnotationEngine	true
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3421::::getArgumentMatcherStorage().reset()::::INSERT::::STATEMENT::::validateState()	true
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3421::::getArgumentMatcherStorage().reset()::::INSERT::::STATEMENT::::validateMostStuff()	true
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3421::::getArgumentMatcherStorage().reset()::::INSERT::::STATEMENT::::resetOngoingStubbing()	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::56::::2043::::2100::::processInjectMocks(testInstance.getClass(), testInstance)::::INSERT::::STATEMENT::::injectMocks(testInstance)	true
org.mockito.MockitoAnnotations::::121::::5016::::5047::::boolean alreadyAssigned = false::::INSERT::::STATEMENT::::org.mockito.MockitoAnnotations.throwIfAlreadyAssigned(field, alreadyAssigned)	false
org.mockito.internal.util.MockUtil::::70::::2531::::2545::::getMockSettings::::getMockName	false
org.mockito.internal.configuration.DefaultAnnotationEngine::::62::::2537::::2579::::java.lang.reflect.Field[] fields = clazz.getDeclaredFields()::::INSERT::::STATEMENT::::throwIfAlreadyAssigned(field, alreadyAssigned)	false
org.mockito.internal.configuration.InjectingAnnotationEngine::::55::::1965::::2033::::processIndependentAnnotations(testInstance.getClass(), testInstance)::::INSERT::::STATEMENT::::injectMocks(testInstance)	true
org.mockito.internal.configuration.injection.MockInjectionStrategy::::42::::1108::::1119::::nextStrategy::::strategy	true
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3410::::getArgumentMatcherStorage::::resetOngoingStubbing	false
org.mockito.internal.configuration.injection.scanner.MockScanner::::61::::1804::::1842::::preparedMock(fieldReader.read(), field)::::INSERT::::PARAMETER::::preparedMock(mockInstance,fieldReader.read(), field)	false
org.mockito.internal.configuration.injection.scanner.MockScanner::::61::::1804::::1842::::preparedMock(fieldReader.read(), field)::::INSERT::::PARAMETER::::preparedMock(instance,fieldReader.read(), field)	false
org.mockito.internal.configuration.injection.MockInjectionStrategy::::42::::1108::::1138::::nextStrategy.thenTry(strategy)::::INSERT::::STATEMENT::::nextStrategy.thenTry(strategy)	true
org.mockito.internal.configuration.injection.MockInjection::::86::::2893::::2915::::postInjectionStrategies::::new org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler()	true
org.mockito.internal.util.reflection.FieldReader::::29::::687::::691::::field::::this.field	true
org.mockito.internal.progress.ThreadSafeMockingProgress::::60::::1755::::1777::::org.mockito.internal.progress.ThreadSafeMockingProgress.threadSafely().reset()::::DELETE::::STATEMENT	true
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3421::::getArgumentMatcherStorage().reset()::::DELETE::::STATEMENT	true
org.mockito.internal.progress.ThreadSafeMockingProgress::::64::::1835::::1872::::org.mockito.internal.progress.ThreadSafeMockingProgress.threadSafely().resetOngoingStubbing()::::DELETE::::STATEMENT	true
org.mockito.internal.util.reflection.AccessibilityChanger::::30::::879::::915::::accessibleObject.setAccessible(true)::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.injection.scanner.MockScanner::::47::::1313::::1333::::mocks.addAll(scan())::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.injection.scanner.InjectMocksScanner::::40::::1047::::1081::::mockDependentFields.addAll(scan())::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.injection.MockInjection::::86::::2893::::2958::::postInjectionStrategies.thenTry(new org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler())::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::56::::2043::::2100::::processInjectMocks(testInstance.getClass(), testInstance)::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::55::::1965::::2033::::processIndependentAnnotations(testInstance.getClass(), testInstance)::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::100::::3689::::3784::::new org.mockito.internal.configuration.DefaultInjectionEngine().injectMocksOnFields(mockDependentFields, mocks, testClassInstance)::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.DefaultInjectionEngine::::20::::587::::834::::org.mockito.internal.configuration.injection.MockInjection.onFields(needingInjection, testClassInstance).withMocks(mocks).tryConstructorInjection().tryPropertyOrFieldInjection().handleSpyAnnotation().apply()::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.injection.scanner.InjectMocksScanner::::50::::1326::::1330::::clazz::::this.clazz	true
org.mockito.internal.configuration.injection.scanner.MockScanner::::57::::1634::::1638::::clazz::::this.clazz	true
org.mockito.internal.configuration.injection.MockInjectionStrategy::::42::::1129::::1136::::strategy::::nextStrategy.thenTry(strategy)	true
org.mockito.internal.progress.ArgumentMatcherStorageImpl::::123::::4416::::4436::::matcherStack.clear()::::INSERT::::STATEMENT::::assertStateFor("Not(?)", org.mockito.internal.progress.ArgumentMatcherStorageImpl.ONE_SUB_MATCHER)	false
org.mockito.internal.configuration.injection.scanner.MockScanner::::59::::1751::::1758::::instance::::mockInstance	false
org.mockito.internal.progress.ArgumentMatcherStorageImpl::::123::::4416::::4436::::matcherStack.clear()::::INSERT::::STATEMENT::::assertStateFor("Or(?)", org.mockito.internal.progress.ArgumentMatcherStorageImpl.TWO_SUB_MATCHERS)	false
org.mockito.internal.progress.ArgumentMatcherStorageImpl::::123::::4416::::4436::::matcherStack.clear()::::INSERT::::STATEMENT::::assertStateFor("And(?)", org.mockito.internal.progress.ArgumentMatcherStorageImpl.TWO_SUB_MATCHERS)	false
org.mockito.internal.configuration.InjectingAnnotationEngine::::61::::2243::::2386::::while (classContext != (java.lang.Object.class)) {    injectMocks(testInstance);    classContext = classContext.getSuperclass();} ::::INSERT::::STATEMENT::::injectMocks(testInstance)	true
org.mockito.internal.configuration.injection.MockInjectionStrategy::::42::::1108::::1138::::nextStrategy.thenTry(strategy)::::DELETE::::STATEMENT	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::68::::2501::::2530::::java.lang.Class<?> classContext = clazz::::INSERT::::STATEMENT::::injectMocks(testInstance)	true
org.mockito.MockitoAnnotations::::121::::5016::::5047::::boolean alreadyAssigned = false::::INSERT::::STATEMENT::::org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(annotationEngine, testClass, field)	true
org.mockito.internal.configuration.injection.MockInjectionStrategy::::42::::1108::::1138::::nextStrategy.thenTry(strategy)::::INSERT::::STATEMENT::::if ((nextStrategy) != null) {    nextStrategy.thenTry(strategy);}else {    nextStrategy = strategy;}	true
org.mockito.internal.util.MockUtil::::74::::2666::::2707::::return (org.mockito.internal.util.MockUtil.mockMaker.getHandler(mock)) != null::::INSERT::::STATEMENT::::if (mock == null) {    throw new org.mockito.exceptions.misusing.NotAMockException("Argument should be a mock, but is null!");}	true
org.mockito.MockitoAnnotations::::122::::5057::::5665::::for (java.lang.annotation.Annotation annotation : field.getAnnotations()) {    java.lang.Object mock = annotationEngine.createMockFor(annotation, field);    if (mock != null) {        org.mockito.MockitoAnnotations.throwIfAlreadyAssigned(field, alreadyAssigned);        alreadyAssigned = true;        try {            new org.mockito.internal.util.reflection.FieldSetter(testClass, field).set(mock);        } catch (java.lang.Exception e) {            throw new org.mockito.exceptions.base.MockitoException(((("Problems setting field " + (field.getName())) + " annotated with ") + annotation), e);        }    }}::::INSERT::::STATEMENT::::org.mockito.MockitoAnnotations.throwIfAlreadyAssigned(field, alreadyAssigned)	true
org.mockito.internal.configuration.SpyAnnotationEngine::::50::::1667::::1711::::!(field.isAnnotationPresent(org.mockito.internal.configuration.InjectMocks.class))::::DELETE::::INFIX	false
org.mockito.internal.configuration.DefaultAnnotationEngine::::63::::2589::::3370::::for (java.lang.reflect.Field field : fields) {    boolean alreadyAssigned = false;    for (java.lang.annotation.Annotation annotation : field.getAnnotations()) {        java.lang.Object mock = createMockFor(annotation, field);        if (mock != null) {            throwIfAlreadyAssigned(field, alreadyAssigned);            alreadyAssigned = true;            try {                new org.mockito.internal.util.reflection.FieldSetter(testInstance, field).set(mock);            } catch (java.lang.Exception e) {                throw new org.mockito.exceptions.base.MockitoException(((("Problems setting field " + (field.getName())) + " annotated with ") + annotation), e);            }        }    }}::::INSERT::::STATEMENT::::throwIfAlreadyAssigned(field, alreadyAssigned)	false
org.mockito.MockitoAnnotations::::121::::5016::::5047::::boolean alreadyAssigned = false::::INSERT::::STATEMENT::::if (testClass == null) {    throw new org.mockito.exceptions.base.MockitoException("testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class");}	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::69::::2540::::2865::::while (classContext != (java.lang.Object.class)) {    delegate.process(classContext, testInstance);    spyAnnotationEngine.process(classContext, testInstance);    classContext = classContext.getSuperclass();} ::::INSERT::::STATEMENT::::injectMocks(testInstance)	true
org.mockito.internal.configuration.injection.scanner.InjectMocksScanner::::40::::1047::::1065::::mockDependentFields::::scan()	true
org.mockito.internal.configuration.InjectingAnnotationEngine::::60::::2204::::2233::::java.lang.Class<?> classContext = clazz::::INSERT::::STATEMENT::::injectMocks(testInstance)	true
org.mockito.internal.configuration.injection.MockInjectionStrategy::::42::::1108::::1119::::nextStrategy::::nextStrategy.thenTry(strategy)	true
org.mockito.internal.util.MockUtil::::70::::2531::::2570::::getMockSettings(mock).getDefaultAnswer()::::DELETE::::INFIX	false
org.mockito.internal.configuration.injection.scanner.MockScanner::::86::::2622::::2646::::mockUtil.isMock(instance)::::DELETE::::INFIX	false
org.mockito.internal.progress.MockingProgressImpl::::105::::3386::::3421::::getArgumentMatcherStorage().reset()::::INSERT::::STATEMENT::::if ((verificationMode) == null) {    return null;}	false
org.mockito.internal.configuration.injection.scanner.MockScanner::::47::::1313::::1317::::mocks::::scan()	true
org.mockito.internal.configuration.injection.scanner.MockScanner::::80::::2380::::2409::::field.getAnnotation(org.mockito.Spy.class)::::DELETE::::INFIX	false
org.mockito.internal.configuration.injection.scanner.InjectMocksScanner::::52::::1414::::1451::::field.getAnnotation(org.mockito.InjectMocks.class)::::DELETE::::INFIX	false
org.mockito.internal.configuration.SpyAnnotationEngine::::50::::1627::::1662::::field.isAnnotationPresent(org.mockito.internal.configuration.Spy.class)::::DELETE::::INFIX	false
org.mockito.internal.util.MockUtil::::74::::2673::::2698::::org.mockito.internal.util.MockUtil.mockMaker.getHandler(mock)::::DELETE::::INFIX	false
org.mockito.internal.progress.MockingProgressImpl::::49::::1707::::1730::::iOngoingStubbing = null::::this.iOngoingStubbing = iOngoingStubbing	false
org.mockito.internal.progress.MockingProgressImpl::::103::::3318::::3343::::stubbingInProgress = null::::stubbingInProgress = new org.mockito.internal.debugging.LocationImpl()	false
org.mockito.internal.progress.MockingProgressImpl::::49::::1707::::1730::::iOngoingStubbing = null::::INSERT::::STATEMENT::::if ((verificationMode) == null) {    return null;}	false
org.mockito.internal.configuration.injection.scanner.MockScanner::::62::::1861::::1872::::mockInstance::::this.instance	true
org.mockito.internal.configuration.injection.scanner.MockScanner::::61::::1804::::1842::::preparedMock(fieldReader.read(), field)::::INSERT::::PARAMETER::::preparedMock(this.instance,fieldReader.read(), field)	false
org.mockito.internal.progress.MockingProgressImpl::::103::::3318::::3343::::stubbingInProgress = null::::INSERT::::STATEMENT::::if ((verificationMode) == null) {    return null;}	false
org.mockito.internal.progress.MockingProgressImpl::::104::::3353::::3376::::verificationMode = null::::INSERT::::STATEMENT::::if ((verificationMode) == null) {    return null;}	false
org.mockito.MockitoAnnotations::::122::::5057::::5665::::for (java.lang.annotation.Annotation annotation : field.getAnnotations()) {    java.lang.Object mock = annotationEngine.createMockFor(annotation, field);    if (mock != null) {        org.mockito.MockitoAnnotations.throwIfAlreadyAssigned(field, alreadyAssigned);        alreadyAssigned = true;        try {            new org.mockito.internal.util.reflection.FieldSetter(testClass, field).set(mock);        } catch (java.lang.Exception e) {            throw new org.mockito.exceptions.base.MockitoException(((("Problems setting field " + (field.getName())) + " annotated with ") + annotation), e);        }    }}::::INSERT::::STATEMENT::::org.mockito.MockitoAnnotations.processAnnotationDeprecatedWay(annotationEngine, testClass, field)	true
org.mockito.MockitoAnnotations::::122::::5057::::5665::::for (java.lang.annotation.Annotation annotation : field.getAnnotations()) {    java.lang.Object mock = annotationEngine.createMockFor(annotation, field);    if (mock != null) {        org.mockito.MockitoAnnotations.throwIfAlreadyAssigned(field, alreadyAssigned);        alreadyAssigned = true;        try {            new org.mockito.internal.util.reflection.FieldSetter(testClass, field).set(mock);        } catch (java.lang.Exception e) {            throw new org.mockito.exceptions.base.MockitoException(((("Problems setting field " + (field.getName())) + " annotated with ") + annotation), e);        }    }}::::INSERT::::STATEMENT::::if (testClass == null) {    throw new org.mockito.exceptions.base.MockitoException("testClass cannot be null. For info how to use @Mock annotations see examples in javadoc for MockitoAnnotations class");}	true
org.mockito.internal.util.MockUtil::::70::::2508::::2526::::isMockitoMock(mock)::::DELETE::::INFIX	false
org.mockito.internal.progress.ArgumentMatcherStorageImpl::::123::::4416::::4436::::matcherStack.clear()::::DELETE::::STATEMENT	false
