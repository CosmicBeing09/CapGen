Field	java.lang.String	getGenericSignature	[]
Field	sun.reflect.generics.factory.GenericsFactory	getFactory	[]
Field	sun.reflect.generics.repository.FieldRepository	getGenericInfo	[]
Field		java.lang.reflect.Field	[java.lang.Class, java.lang.String, java.lang.Class, int, int, java.lang.String, byte[]]
Field	java.lang.reflect.Field	copy	[]
Field	java.lang.Class<?>	getDeclaringClass	[]
Field	java.lang.String	getName	[]
Field	int	getModifiers	[]
Field	boolean	isEnumConstant	[]
Field	boolean	isSynthetic	[]
Field	java.lang.Class<?>	getType	[]
Field	java.lang.reflect.Type	getGenericType	[]
Field	boolean	equals	[java.lang.Object]
Field	int	hashCode	[]
Field	java.lang.String	toString	[]
Field	java.lang.String	toGenericString	[]
Field	java.lang.Object	get	[java.lang.Object]
Field	boolean	getBoolean	[java.lang.Object]
Field	byte	getByte	[java.lang.Object]
Field	char	getChar	[java.lang.Object]
Field	short	getShort	[java.lang.Object]
Field	int	getInt	[java.lang.Object]
Field	long	getLong	[java.lang.Object]
Field	float	getFloat	[java.lang.Object]
Field	double	getDouble	[java.lang.Object]
Field	void	set	[java.lang.Object, java.lang.Object]
Field	void	setBoolean	[java.lang.Object, boolean]
Field	void	setByte	[java.lang.Object, byte]
Field	void	setChar	[java.lang.Object, char]
Field	void	setShort	[java.lang.Object, short]
Field	void	setInt	[java.lang.Object, int]
Field	void	setLong	[java.lang.Object, long]
Field	void	setFloat	[java.lang.Object, float]
Field	void	setDouble	[java.lang.Object, double]
Field	sun.reflect.FieldAccessor	getFieldAccessor	[java.lang.Object]
Field	sun.reflect.FieldAccessor	acquireFieldAccessor	[boolean]
Field	sun.reflect.FieldAccessor	getFieldAccessor	[boolean]
Field	void	setFieldAccessor	[sun.reflect.FieldAccessor, boolean]
Field	T	getAnnotation	[java.lang.Class]
Field	T[]	getAnnotationsByType	[java.lang.Class]
Field	java.lang.annotation.Annotation[]	getDeclaredAnnotations	[]
Field	java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.annotation.Annotation>	declaredAnnotations	[]
Field	byte[]	getTypeAnnotationBytes0	[]
Field	java.lang.reflect.AnnotatedType	getAnnotatedType	[]
Node		java.util.HashMap$Node	[int, K, V, java.util.HashMap$Node]
Node	K	getKey	[]
Node	V	getValue	[]
Node	java.lang.String	toString	[]
Node	int	hashCode	[]
Node	V	setValue	[V]
Node	boolean	equals	[java.lang.Object]
KeySet		java.util.HashMap$KeySet	[]
KeySet	int	size	[]
KeySet	void	clear	[]
KeySet	java.util.Iterator<K>	iterator	[]
KeySet	boolean	contains	[java.lang.Object]
KeySet	boolean	remove	[java.lang.Object]
KeySet	java.util.Spliterator<K>	spliterator	[]
KeySet	void	forEach	[java.util.function.Consumer]
Values		java.util.HashMap$Values	[]
Values	int	size	[]
Values	void	clear	[]
Values	java.util.Iterator<V>	iterator	[]
Values	boolean	contains	[java.lang.Object]
Values	java.util.Spliterator<V>	spliterator	[]
Values	void	forEach	[java.util.function.Consumer]
EntrySet		java.util.HashMap$EntrySet	[]
EntrySet	int	size	[]
EntrySet	void	clear	[]
EntrySet	java.util.Iterator<java.util.Map.Entry<K, V>>	iterator	[]
EntrySet	boolean	contains	[java.lang.Object]
EntrySet	boolean	remove	[java.lang.Object]
EntrySet	java.util.Spliterator<java.util.Map.Entry<K, V>>	spliterator	[]
EntrySet	void	forEach	[java.util.function.Consumer]
HashIterator		java.util.HashMap$HashIterator	[]
HashIterator	boolean	hasNext	[]
HashIterator	java.util.HashMap.Node<K, V>	nextNode	[]
HashIterator	void	remove	[]
KeyIterator		java.util.HashMap$KeyIterator	[]
KeyIterator	K	next	[]
ValueIterator		java.util.HashMap$ValueIterator	[]
ValueIterator	V	next	[]
EntryIterator		java.util.HashMap$EntryIterator	[]
EntryIterator	java.util.Map.Entry<K, V>	next	[]
HashMapSpliterator		java.util.HashMap$HashMapSpliterator	[java.util.HashMap, int, int, int, int]
HashMapSpliterator	int	getFence	[]
HashMapSpliterator	long	estimateSize	[]
KeySpliterator		java.util.HashMap$KeySpliterator	[java.util.HashMap, int, int, int, int]
KeySpliterator	java.util.HashMap.KeySpliterator<K, V>	trySplit	[]
KeySpliterator	void	forEachRemaining	[java.util.function.Consumer]
KeySpliterator	boolean	tryAdvance	[java.util.function.Consumer]
KeySpliterator	int	characteristics	[]
ValueSpliterator		java.util.HashMap$ValueSpliterator	[java.util.HashMap, int, int, int, int]
ValueSpliterator	java.util.HashMap.ValueSpliterator<K, V>	trySplit	[]
ValueSpliterator	void	forEachRemaining	[java.util.function.Consumer]
ValueSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
ValueSpliterator	int	characteristics	[]
EntrySpliterator		java.util.HashMap$EntrySpliterator	[java.util.HashMap, int, int, int, int]
EntrySpliterator	java.util.HashMap.EntrySpliterator<K, V>	trySplit	[]
EntrySpliterator	void	forEachRemaining	[java.util.function.Consumer]
EntrySpliterator	boolean	tryAdvance	[java.util.function.Consumer]
EntrySpliterator	int	characteristics	[]
TreeNode		java.util.HashMap$TreeNode	[int, K, V, java.util.HashMap$Node]
TreeNode	java.util.HashMap.TreeNode<K, V>	root	[]
TreeNode	void	moveRootToFront	[java.util.HashMap$Node[], java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	find	[int, java.lang.Object, java.lang.Class]
TreeNode	java.util.HashMap.TreeNode<K, V>	getTreeNode	[int, java.lang.Object]
TreeNode	int	tieBreakOrder	[java.lang.Object, java.lang.Object]
TreeNode	void	treeify	[java.util.HashMap$Node[]]
TreeNode	java.util.HashMap.Node<K, V>	untreeify	[java.util.HashMap]
TreeNode	java.util.HashMap.TreeNode<K, V>	putTreeVal	[java.util.HashMap, java.util.HashMap$Node[], int, K, V]
TreeNode	void	removeTreeNode	[java.util.HashMap, java.util.HashMap$Node[], boolean]
TreeNode	void	split	[java.util.HashMap, java.util.HashMap$Node[], int, int]
TreeNode	java.util.HashMap.TreeNode<K, V>	rotateLeft	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	rotateRight	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	balanceInsertion	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	balanceDeletion	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	boolean	checkInvariants	[java.util.HashMap$TreeNode]
HashMap	int	hash	[java.lang.Object]
HashMap	java.lang.Class<?>	comparableClassFor	[java.lang.Object]
HashMap	int	compareComparables	[java.lang.Class, java.lang.Object, java.lang.Object]
HashMap	int	tableSizeFor	[int]
HashMap		java.util.HashMap	[int, float]
HashMap		java.util.HashMap	[int]
HashMap		java.util.HashMap	[]
HashMap		java.util.HashMap	[java.util.Map]
HashMap	void	putMapEntries	[java.util.Map, boolean]
HashMap	int	size	[]
HashMap	boolean	isEmpty	[]
HashMap	V	get	[java.lang.Object]
HashMap	java.util.HashMap.Node<K, V>	getNode	[int, java.lang.Object]
HashMap	boolean	containsKey	[java.lang.Object]
HashMap	V	put	[K, V]
HashMap	V	putVal	[int, K, V, boolean, boolean]
HashMap	java.util.HashMap.Node<K, V>[]	resize	[]
HashMap	void	treeifyBin	[java.util.HashMap$Node[], int]
HashMap	void	putAll	[java.util.Map]
HashMap	V	remove	[java.lang.Object]
HashMap	java.util.HashMap.Node<K, V>	removeNode	[int, java.lang.Object, java.lang.Object, boolean, boolean]
HashMap	void	clear	[]
HashMap	boolean	containsValue	[java.lang.Object]
HashMap	java.util.Set<K>	keySet	[]
HashMap	java.util.Collection<V>	values	[]
HashMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
HashMap	V	getOrDefault	[java.lang.Object, V]
HashMap	V	putIfAbsent	[K, V]
HashMap	boolean	remove	[java.lang.Object, java.lang.Object]
HashMap	boolean	replace	[K, V, V]
HashMap	V	replace	[K, V]
HashMap	V	computeIfAbsent	[K, java.util.function.Function]
HashMap	V	computeIfPresent	[K, java.util.function.BiFunction]
HashMap	V	compute	[K, java.util.function.BiFunction]
HashMap	V	merge	[K, V, java.util.function.BiFunction]
HashMap	void	forEach	[java.util.function.BiConsumer]
HashMap	void	replaceAll	[java.util.function.BiFunction]
HashMap	java.lang.Object	clone	[]
HashMap	float	loadFactor	[]
HashMap	int	capacity	[]
HashMap	void	writeObject	[java.io.ObjectOutputStream]
HashMap	void	readObject	[java.io.ObjectInputStream]
HashMap	java.util.HashMap.Node<K, V>	newNode	[int, K, V, java.util.HashMap$Node]
HashMap	java.util.HashMap.Node<K, V>	replacementNode	[java.util.HashMap$Node, java.util.HashMap$Node]
HashMap	java.util.HashMap.TreeNode<K, V>	newTreeNode	[int, K, V, java.util.HashMap$Node]
HashMap	java.util.HashMap.TreeNode<K, V>	replacementTreeNode	[java.util.HashMap$Node, java.util.HashMap$Node]
HashMap	void	reinitialize	[]
HashMap	void	afterNodeAccess	[java.util.HashMap$Node]
HashMap	void	afterNodeInsertion	[boolean]
HashMap	void	afterNodeRemoval	[java.util.HashMap$Node]
HashMap	void	internalWriteEntries	[java.io.ObjectOutputStream]
MockitoException		org.mockito.exceptions.base.MockitoException	[java.lang.String, java.lang.Throwable]
MockitoException		org.mockito.exceptions.base.MockitoException	[java.lang.String]
MockitoException	void	filterStackTrace	[]
MockitoException	java.lang.StackTraceElement[]	getUnfilteredStackTrace	[]
Reporter		org.mockito.exceptions.Reporter	[]
Reporter	void	checkedExceptionInvalid	[java.lang.Throwable]
Reporter	void	cannotStubWithNullThrowable	[]
Reporter	void	unfinishedStubbing	[org.mockito.invocation.Location]
Reporter	void	incorrectUseOfApi	[]
Reporter	void	missingMethodInvocation	[]
Reporter	void	unfinishedVerificationException	[org.mockito.invocation.Location]
Reporter	void	notAMockPassedToVerify	[java.lang.Class]
Reporter	void	nullPassedToVerify	[]
Reporter	void	notAMockPassedToWhenMethod	[]
Reporter	void	nullPassedToWhenMethod	[]
Reporter	void	mocksHaveToBePassedToVerifyNoMoreInteractions	[]
Reporter	void	notAMockPassedToVerifyNoMoreInteractions	[]
Reporter	void	nullPassedToVerifyNoMoreInteractions	[]
Reporter	void	notAMockPassedWhenCreatingInOrder	[]
Reporter	void	nullPassedWhenCreatingInOrder	[]
Reporter	void	mocksHaveToBePassedWhenCreatingInOrder	[]
Reporter	void	inOrderRequiresFamiliarMock	[]
Reporter	void	invalidUseOfMatchers	[int, java.util.List]
Reporter	void	incorrectUseOfAdditionalMatchers	[java.lang.String, int, java.util.Collection]
Reporter	void	stubPassedToVerify	[]
Reporter	void	reportNoSubMatchersFound	[java.lang.String]
Reporter	java.lang.Object	locationsOf	[java.util.Collection]
Reporter	void	argumentsAreDifferent	[java.lang.String, java.lang.String, org.mockito.invocation.Location]
Reporter	void	wantedButNotInvoked	[org.mockito.invocation.DescribedInvocation]
Reporter	void	wantedButNotInvoked	[org.mockito.invocation.DescribedInvocation, java.util.List]
Reporter	java.lang.String	createWantedButNotInvokedMessage	[org.mockito.invocation.DescribedInvocation]
Reporter	void	wantedButNotInvokedInOrder	[org.mockito.invocation.DescribedInvocation, org.mockito.invocation.DescribedInvocation]
Reporter	void	tooManyActualInvocations	[int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location]
Reporter	java.lang.String	createTooManyInvocationsMessage	[int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location]
Reporter	void	neverWantedButInvoked	[org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location]
Reporter	void	tooManyActualInvocationsInOrder	[int, int, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location]
Reporter	java.lang.String	createTooLittleInvocationsMessage	[org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location]
Reporter	void	tooLittleActualInvocations	[org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location]
Reporter	void	tooLittleActualInvocationsInOrder	[org.mockito.internal.reporting.Discrepancy, org.mockito.invocation.DescribedInvocation, org.mockito.invocation.Location]
Reporter	void	noMoreInteractionsWanted	[org.mockito.invocation.Invocation, java.util.List]
Reporter	void	noMoreInteractionsWantedInOrder	[org.mockito.invocation.Invocation]
Reporter	void	cannotMockFinalClass	[java.lang.Class]
Reporter	void	cannotStubVoidMethodWithAReturnValue	[java.lang.String]
Reporter	void	onlyVoidMethodsCanBeSetToDoNothing	[]
Reporter	void	wrongTypeOfReturnValue	[java.lang.String, java.lang.String, java.lang.String]
Reporter	void	wrongTypeReturnedByDefaultAnswer	[java.lang.Object, java.lang.String, java.lang.String, java.lang.String]
Reporter	void	wantedAtMostX	[int, int]
Reporter	void	misplacedArgumentMatcher	[java.util.List]
Reporter	void	smartNullPointerException	[java.lang.String, org.mockito.invocation.Location]
Reporter	void	noArgumentValueWasCaptured	[]
Reporter	void	extraInterfacesDoesNotAcceptNullParameters	[]
Reporter	void	extraInterfacesAcceptsOnlyInterfaces	[java.lang.Class]
Reporter	void	extraInterfacesCannotContainMockedType	[java.lang.Class]
Reporter	void	extraInterfacesRequiresAtLeastOneInterface	[]
Reporter	void	mockedTypeIsInconsistentWithSpiedInstanceType	[java.lang.Class, java.lang.Object]
Reporter	void	cannotCallAbstractRealMethod	[]
Reporter	void	cannotVerifyToString	[]
Reporter	void	moreThanOneAnnotationNotAllowed	[java.lang.String]
Reporter	void	unsupportedCombinationOfAnnotations	[java.lang.String, java.lang.String]
Reporter	void	cannotInitializeForSpyAnnotation	[java.lang.String, java.lang.Exception]
Reporter	void	cannotInitializeForInjectMocksAnnotation	[java.lang.String, java.lang.Exception]
Reporter	void	atMostAndNeverShouldNotBeUsedWithTimeout	[]
Reporter	void	fieldInitialisationThrewException	[java.lang.reflect.Field, java.lang.Throwable]
Reporter	void	invocationListenerDoesNotAcceptNullParameters	[]
Reporter	void	invocationListenersRequiresAtLeastOneListener	[]
Reporter	void	invocationListenerThrewException	[org.mockito.listeners.InvocationListener, java.lang.Throwable]
Reporter	void	cannotInjectDependency	[java.lang.reflect.Field, java.lang.Object, java.lang.Exception]
Reporter	java.lang.String	exceptionCauseMessageIfAvailable	[java.lang.Exception]
Reporter	void	mockedTypeIsInconsistentWithDelegatedInstanceType	[java.lang.Class, java.lang.Object]
Reporter	void	spyAndDelegateAreMutuallyExclusive	[]
Reporter	void	invalidArgumentRangeAtIdentityAnswerCreationTime	[]
Reporter	int	invalidArgumentPositionRangeAtInvocationTime	[org.mockito.invocation.InvocationOnMock, boolean, int]
Reporter	java.lang.StringBuilder	possibleArgumentTypesOf	[org.mockito.invocation.InvocationOnMock]
Reporter	void	wrongTypeOfArgumentToReturn	[org.mockito.invocation.InvocationOnMock, java.lang.String, java.lang.Class, int]
Reporter	void	defaultAnswerDoesNotAcceptNullParameter	[]
Reporter	void	serializableWontWorkForObjectsThatDontImplementSerializable	[java.lang.Class]
Reporter	void	delegatedMethodHasWrongReturnType	[java.lang.reflect.Method, java.lang.reflect.Method, java.lang.Object, java.lang.Object]
Reporter	void	delegatedMethodDoesNotExistOnDelegate	[java.lang.reflect.Method, java.lang.Object, java.lang.Object]
Reporter	void	usingConstructorWithFancySerializable	[org.mockito.mock.SerializableMode]
Reporter	void	cannotCreateTimerWithNegativeDurationTime	[long]
Reporter	org.mockito.mock.MockName	safelyGetMockName	[java.lang.Object]
DefaultAnnotationEngine		org.mockito.internal.configuration.DefaultAnnotationEngine	[]
DefaultAnnotationEngine	java.lang.Object	createMockFor	[java.lang.annotation.Annotation, java.lang.reflect.Field]
1	java.lang.Object	process	[A extends java.lang.annotation.Annotation, java.lang.reflect.Field]
DefaultAnnotationEngine	org.mockito.internal.configuration.FieldAnnotationProcessor<A>	forAnnotation	[A extends java.lang.annotation.Annotation]
DefaultAnnotationEngine	void	registerAnnotationProcessor	[java.lang.Class, org.mockito.internal.configuration.FieldAnnotationProcessor]
DefaultAnnotationEngine	void	process	[java.lang.Class, java.lang.Object]
DefaultAnnotationEngine	void	throwIfAlreadyAssigned	[java.lang.reflect.Field, boolean]
FieldSetter		org.mockito.internal.util.reflection.FieldSetter	[java.lang.Object, java.lang.reflect.Field]
FieldSetter	void	set	[java.lang.Object]
MockitoAnnotations		org.mockito.MockitoAnnotations	[]
MockitoAnnotations	void	initMocks	[java.lang.Object]
MockitoAnnotations	void	scanDeprecatedWay	[org.mockito.configuration.AnnotationEngine, java.lang.Object, java.lang.Class]
MockitoAnnotations	void	processAnnotationDeprecatedWay	[org.mockito.configuration.AnnotationEngine, java.lang.Object, java.lang.reflect.Field]
MockitoAnnotations	void	throwIfAlreadyAssigned	[java.lang.reflect.Field, boolean]
