IOException		java.io.IOException	[]
IOException		java.io.IOException	[java.lang.String]
IOException		java.io.IOException	[java.lang.String, java.lang.Throwable]
IOException		java.io.IOException	[java.lang.Throwable]
TreeInfo		java.util.regex.Pattern$TreeInfo	[]
TreeInfo	void	reset	[]
BitClass		java.util.regex.Pattern$BitClass	[]
BitClass		java.util.regex.Pattern$BitClass	[boolean[]]
BitClass	java.util.regex.Pattern.BitClass	add	[int, int]
BitClass	boolean	isSatisfiedBy	[int]
Node		java.util.regex.Pattern$Node	[]
Node	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Node	boolean	study	[java.util.regex.Pattern$TreeInfo]
LastNode		java.util.regex.Pattern$LastNode	[]
LastNode	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Start		java.util.regex.Pattern$Start	[java.util.regex.Pattern$Node]
Start	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Start	boolean	study	[java.util.regex.Pattern$TreeInfo]
StartS		java.util.regex.Pattern$StartS	[java.util.regex.Pattern$Node]
StartS	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Begin		java.util.regex.Pattern$Begin	[]
Begin	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
End		java.util.regex.Pattern$End	[]
End	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Caret		java.util.regex.Pattern$Caret	[]
Caret	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
UnixCaret		java.util.regex.Pattern$UnixCaret	[]
UnixCaret	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
LastMatch		java.util.regex.Pattern$LastMatch	[]
LastMatch	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Dollar		java.util.regex.Pattern$Dollar	[boolean]
Dollar	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Dollar	boolean	study	[java.util.regex.Pattern$TreeInfo]
UnixDollar		java.util.regex.Pattern$UnixDollar	[boolean]
UnixDollar	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
UnixDollar	boolean	study	[java.util.regex.Pattern$TreeInfo]
LineEnding		java.util.regex.Pattern$LineEnding	[]
LineEnding	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
LineEnding	boolean	study	[java.util.regex.Pattern$TreeInfo]
CharProperty		java.util.regex.Pattern$CharProperty	[]
CharProperty	boolean	isSatisfiedBy	[int]
1		java.util.regex.Pattern$CharProperty$1	[]
1	boolean	isSatisfiedBy	[int]
CharProperty	java.util.regex.Pattern.CharProperty	complement	[]
CharProperty	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
CharProperty	boolean	study	[java.util.regex.Pattern$TreeInfo]
BmpCharProperty		java.util.regex.Pattern$BmpCharProperty	[]
BmpCharProperty	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
SingleS		java.util.regex.Pattern$SingleS	[int]
SingleS	boolean	isSatisfiedBy	[int]
Single		java.util.regex.Pattern$Single	[int]
Single	boolean	isSatisfiedBy	[int]
SingleI		java.util.regex.Pattern$SingleI	[int, int]
SingleI	boolean	isSatisfiedBy	[int]
SingleU		java.util.regex.Pattern$SingleU	[int]
SingleU	boolean	isSatisfiedBy	[int]
Block		java.util.regex.Pattern$Block	[java.lang.Character$UnicodeBlock]
Block	boolean	isSatisfiedBy	[int]
Script		java.util.regex.Pattern$Script	[java.lang.Character$UnicodeScript]
Script	boolean	isSatisfiedBy	[int]
Category		java.util.regex.Pattern$Category	[int]
Category	boolean	isSatisfiedBy	[int]
Utype		java.util.regex.Pattern$Utype	[java.util.regex.UnicodeProp]
Utype	boolean	isSatisfiedBy	[int]
Ctype		java.util.regex.Pattern$Ctype	[int]
Ctype	boolean	isSatisfiedBy	[int]
VertWS		java.util.regex.Pattern$VertWS	[]
VertWS	boolean	isSatisfiedBy	[int]
HorizWS		java.util.regex.Pattern$HorizWS	[]
HorizWS	boolean	isSatisfiedBy	[int]
SliceNode		java.util.regex.Pattern$SliceNode	[int[]]
SliceNode	boolean	study	[java.util.regex.Pattern$TreeInfo]
Slice		java.util.regex.Pattern$Slice	[int[]]
Slice	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
SliceI		java.util.regex.Pattern$SliceI	[int[]]
SliceI	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
SliceU		java.util.regex.Pattern$SliceU	[int[]]
SliceU	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
SliceS		java.util.regex.Pattern$SliceS	[int[]]
SliceS	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
SliceIS		java.util.regex.Pattern$SliceIS	[int[]]
SliceIS	int	toLower	[int]
SliceIS	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
SliceUS		java.util.regex.Pattern$SliceUS	[int[]]
SliceUS	int	toLower	[int]
All		java.util.regex.Pattern$All	[]
All	boolean	isSatisfiedBy	[int]
Dot		java.util.regex.Pattern$Dot	[]
Dot	boolean	isSatisfiedBy	[int]
UnixDot		java.util.regex.Pattern$UnixDot	[]
UnixDot	boolean	isSatisfiedBy	[int]
Ques		java.util.regex.Pattern$Ques	[java.util.regex.Pattern$Node, int]
Ques	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Ques	boolean	study	[java.util.regex.Pattern$TreeInfo]
Curly		java.util.regex.Pattern$Curly	[java.util.regex.Pattern$Node, int, int, int]
Curly	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Curly	boolean	match0	[java.util.regex.Matcher, int, int, java.lang.CharSequence]
Curly	boolean	match1	[java.util.regex.Matcher, int, int, java.lang.CharSequence]
Curly	boolean	match2	[java.util.regex.Matcher, int, int, java.lang.CharSequence]
Curly	boolean	study	[java.util.regex.Pattern$TreeInfo]
GroupCurly		java.util.regex.Pattern$GroupCurly	[java.util.regex.Pattern$Node, int, int, int, int, int, boolean]
GroupCurly	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
GroupCurly	boolean	match0	[java.util.regex.Matcher, int, int, java.lang.CharSequence]
GroupCurly	boolean	match1	[java.util.regex.Matcher, int, int, java.lang.CharSequence]
GroupCurly	boolean	match2	[java.util.regex.Matcher, int, int, java.lang.CharSequence]
GroupCurly	boolean	study	[java.util.regex.Pattern$TreeInfo]
BranchConn		java.util.regex.Pattern$BranchConn	[]
BranchConn	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
BranchConn	boolean	study	[java.util.regex.Pattern$TreeInfo]
Branch		java.util.regex.Pattern$Branch	[java.util.regex.Pattern$Node, java.util.regex.Pattern$Node, java.util.regex.Pattern$Node]
Branch	void	add	[java.util.regex.Pattern$Node]
Branch	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Branch	boolean	study	[java.util.regex.Pattern$TreeInfo]
GroupHead		java.util.regex.Pattern$GroupHead	[int]
GroupHead	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
GroupHead	boolean	matchRef	[java.util.regex.Matcher, int, java.lang.CharSequence]
GroupRef		java.util.regex.Pattern$GroupRef	[java.util.regex.Pattern$GroupHead]
GroupRef	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
GroupRef	boolean	study	[java.util.regex.Pattern$TreeInfo]
GroupTail		java.util.regex.Pattern$GroupTail	[int, int]
GroupTail	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Prolog		java.util.regex.Pattern$Prolog	[java.util.regex.Pattern$Loop]
Prolog	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Prolog	boolean	study	[java.util.regex.Pattern$TreeInfo]
Loop		java.util.regex.Pattern$Loop	[int, int]
Loop	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Loop	boolean	matchInit	[java.util.regex.Matcher, int, java.lang.CharSequence]
Loop	boolean	study	[java.util.regex.Pattern$TreeInfo]
LazyLoop		java.util.regex.Pattern$LazyLoop	[int, int]
LazyLoop	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
LazyLoop	boolean	matchInit	[java.util.regex.Matcher, int, java.lang.CharSequence]
LazyLoop	boolean	study	[java.util.regex.Pattern$TreeInfo]
BackRef		java.util.regex.Pattern$BackRef	[int]
BackRef	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
BackRef	boolean	study	[java.util.regex.Pattern$TreeInfo]
CIBackRef		java.util.regex.Pattern$CIBackRef	[int, boolean]
CIBackRef	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
CIBackRef	boolean	study	[java.util.regex.Pattern$TreeInfo]
First		java.util.regex.Pattern$First	[java.util.regex.Pattern$Node]
First	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
First	boolean	study	[java.util.regex.Pattern$TreeInfo]
Conditional		java.util.regex.Pattern$Conditional	[java.util.regex.Pattern$Node, java.util.regex.Pattern$Node, java.util.regex.Pattern$Node]
Conditional	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Conditional	boolean	study	[java.util.regex.Pattern$TreeInfo]
Pos		java.util.regex.Pattern$Pos	[java.util.regex.Pattern$Node]
Pos	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Neg		java.util.regex.Pattern$Neg	[java.util.regex.Pattern$Node]
Neg	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Behind		java.util.regex.Pattern$Behind	[java.util.regex.Pattern$Node, int, int]
Behind	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
BehindS		java.util.regex.Pattern$BehindS	[java.util.regex.Pattern$Node, int, int]
BehindS	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
NotBehind		java.util.regex.Pattern$NotBehind	[java.util.regex.Pattern$Node, int, int]
NotBehind	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
NotBehindS		java.util.regex.Pattern$NotBehindS	[java.util.regex.Pattern$Node, int, int]
NotBehindS	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Bound		java.util.regex.Pattern$Bound	[int, boolean]
Bound	boolean	isWord	[int]
Bound	int	check	[java.util.regex.Matcher, int, java.lang.CharSequence]
Bound	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
BnM	java.util.regex.Pattern.Node	optimize	[java.util.regex.Pattern$Node]
BnM		java.util.regex.Pattern$BnM	[int[], int[], int[], java.util.regex.Pattern$Node]
BnM	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
BnM	boolean	study	[java.util.regex.Pattern$TreeInfo]
BnMS		java.util.regex.Pattern$BnMS	[int[], int[], int[], java.util.regex.Pattern$Node]
BnMS	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
CharPropertyFactory		java.util.regex.Pattern$CharPropertyNames$CharPropertyFactory	[]
CharPropertyFactory	java.util.regex.Pattern.CharProperty	make	[]
CloneableProperty		java.util.regex.Pattern$CharPropertyNames$CloneableProperty	[]
CloneableProperty	java.util.regex.Pattern.CharPropertyNames.CloneableProperty	clone	[]
1		java.util.regex.Pattern$CharPropertyNames$1	[]
1	java.util.regex.Pattern.CharProperty	make	[]
2		java.util.regex.Pattern$CharPropertyNames$2	[]
2	boolean	isSatisfiedBy	[int]
3		java.util.regex.Pattern$CharPropertyNames$3	[]
3	boolean	isSatisfiedBy	[int]
4		java.util.regex.Pattern$CharPropertyNames$4	[]
4	boolean	isSatisfiedBy	[int]
5		java.util.regex.Pattern$CharPropertyNames$5	[]
5	boolean	isSatisfiedBy	[int]
6		java.util.regex.Pattern$CharPropertyNames$6	[]
6	boolean	isSatisfiedBy	[int]
7		java.util.regex.Pattern$CharPropertyNames$7	[]
7	boolean	isSatisfiedBy	[int]
8		java.util.regex.Pattern$CharPropertyNames$8	[]
8	boolean	isSatisfiedBy	[int]
9		java.util.regex.Pattern$CharPropertyNames$9	[]
9	boolean	isSatisfiedBy	[int]
10		java.util.regex.Pattern$CharPropertyNames$10	[]
10	boolean	isSatisfiedBy	[int]
11		java.util.regex.Pattern$CharPropertyNames$11	[]
11	boolean	isSatisfiedBy	[int]
12		java.util.regex.Pattern$CharPropertyNames$12	[]
12	boolean	isSatisfiedBy	[int]
13		java.util.regex.Pattern$CharPropertyNames$13	[]
13	boolean	isSatisfiedBy	[int]
14		java.util.regex.Pattern$CharPropertyNames$14	[]
14	boolean	isSatisfiedBy	[int]
15		java.util.regex.Pattern$CharPropertyNames$15	[]
15	boolean	isSatisfiedBy	[int]
16		java.util.regex.Pattern$CharPropertyNames$16	[]
16	boolean	isSatisfiedBy	[int]
17		java.util.regex.Pattern$CharPropertyNames$17	[]
17	boolean	isSatisfiedBy	[int]
18		java.util.regex.Pattern$CharPropertyNames$18	[]
18	boolean	isSatisfiedBy	[int]
19		java.util.regex.Pattern$CharPropertyNames$19	[]
19	boolean	isSatisfiedBy	[int]
CharPropertyNames		java.util.regex.Pattern$CharPropertyNames	[]
CharPropertyNames	java.util.regex.Pattern.CharProperty	charPropertyFor	[java.lang.String]
20		java.util.regex.Pattern$CharPropertyNames$20	[]
20	java.util.regex.Pattern.CharProperty	make	[]
CharPropertyNames	void	defCategory	[java.lang.String, int]
21		java.util.regex.Pattern$CharPropertyNames$21	[]
21	java.util.regex.Pattern.CharProperty	make	[]
CharPropertyNames	void	defRange	[java.lang.String, int, int]
22		java.util.regex.Pattern$CharPropertyNames$22	[]
22	java.util.regex.Pattern.CharProperty	make	[]
CharPropertyNames	void	defCtype	[java.lang.String, int]
23		java.util.regex.Pattern$CharPropertyNames$23	[]
23	java.util.regex.Pattern.CharProperty	make	[]
CharPropertyNames	void	defClone	[java.lang.String, java.util.regex.Pattern$CharPropertyNames$CloneableProperty]
1		java.util.regex.Pattern$1	[]
1	boolean	match	[java.util.regex.Matcher, int, java.lang.CharSequence]
Pattern	java.util.regex.Pattern	compile	[java.lang.String]
Pattern	java.util.regex.Pattern	compile	[java.lang.String, int]
Pattern	java.lang.String	pattern	[]
Pattern	java.lang.String	toString	[]
Pattern	java.util.regex.Matcher	matcher	[java.lang.CharSequence]
Pattern	int	flags	[]
Pattern	boolean	matches	[java.lang.String, java.lang.CharSequence]
Pattern	java.lang.String[]	split	[java.lang.CharSequence, int]
Pattern	java.lang.String[]	split	[java.lang.CharSequence]
Pattern	java.lang.String	quote	[java.lang.String]
Pattern	void	readObject	[java.io.ObjectInputStream]
Pattern		java.util.regex.Pattern	[java.lang.String, int]
Pattern	void	normalize	[]
Pattern	int	normalizeCharClass	[java.lang.StringBuilder, int]
Pattern	java.lang.String	produceEquivalentAlternation	[java.lang.String]
Pattern	java.lang.String[]	producePermutations	[java.lang.String]
Pattern	int	getClass	[int]
Pattern	java.lang.String	composeOneStep	[java.lang.String]
Pattern	void	RemoveQEQuoting	[]
Pattern	void	compile	[]
Pattern	java.util.Map<java.lang.String, java.lang.Integer>	namedGroups	[]
Pattern	void	printObjectTree	[java.util.regex.Pattern$Node]
Pattern	boolean	has	[int]
Pattern	void	accept	[int, java.lang.String]
Pattern	void	mark	[int]
Pattern	int	peek	[]
Pattern	int	read	[]
Pattern	int	readEscaped	[]
Pattern	int	next	[]
Pattern	int	nextEscaped	[]
Pattern	int	peekPastWhitespace	[int]
Pattern	int	parsePastWhitespace	[int]
Pattern	int	parsePastLine	[]
Pattern	int	peekPastLine	[]
Pattern	boolean	isLineSeparator	[int]
Pattern	int	skip	[]
Pattern	void	unread	[]
Pattern	java.util.regex.PatternSyntaxException	error	[java.lang.String]
Pattern	boolean	findSupplementary	[int, int]
Pattern	boolean	isSupplementary	[int]
Pattern	java.util.regex.Pattern.Node	expr	[java.util.regex.Pattern$Node]
Pattern	java.util.regex.Pattern.Node	sequence	[java.util.regex.Pattern$Node]
Pattern	java.util.regex.Pattern.Node	atom	[]
Pattern	void	append	[int, int]
Pattern	java.util.regex.Pattern.Node	ref	[int]
Pattern	int	escape	[boolean, boolean, boolean]
Pattern	java.util.regex.Pattern.CharProperty	clazz	[boolean]
Pattern	java.util.regex.Pattern.CharProperty	bitsOrSingle	[java.util.regex.Pattern$BitClass, int]
Pattern	java.util.regex.Pattern.CharProperty	range	[java.util.regex.Pattern$BitClass]
Pattern	java.util.regex.Pattern.CharProperty	family	[boolean, boolean]
Pattern	java.util.regex.Pattern.CharProperty	unicodeScriptPropertyFor	[java.lang.String]
Pattern	java.util.regex.Pattern.CharProperty	unicodeBlockPropertyFor	[java.lang.String]
Pattern	java.util.regex.Pattern.CharProperty	charPropertyNodeFor	[java.lang.String]
Pattern	java.lang.String	groupname	[int]
Pattern	java.util.regex.Pattern.Node	group0	[]
Pattern	java.util.regex.Pattern.Node	createGroup	[boolean]
Pattern	void	addFlag	[]
Pattern	void	subFlag	[]
Pattern	java.util.regex.Pattern.Node	closure	[java.util.regex.Pattern$Node]
Pattern	int	c	[]
Pattern	int	o	[]
Pattern	int	x	[]
Pattern	int	cursor	[]
Pattern	void	setcursor	[int]
Pattern	int	uxxxx	[]
Pattern	int	u	[]
Pattern	int	countChars	[java.lang.CharSequence, int, int]
Pattern	int	countCodePoints	[java.lang.CharSequence]
Pattern	java.util.regex.Pattern.CharProperty	newSingle	[int]
Pattern	java.util.regex.Pattern.Node	newSlice	[int[], int, boolean]
Pattern	boolean	inRange	[int, int, int]
2		java.util.regex.Pattern$2	[]
2	boolean	isSatisfiedBy	[int]
Pattern	java.util.regex.Pattern.CharProperty	rangeFor	[int, int]
3		java.util.regex.Pattern$3	[]
3	boolean	isSatisfiedBy	[int]
4		java.util.regex.Pattern$4	[]
4	boolean	isSatisfiedBy	[int]
Pattern	java.util.regex.Pattern.CharProperty	caseInsensitiveRangeFor	[int, int]
5		java.util.regex.Pattern$5	[]
5	boolean	isSatisfiedBy	[int]
Pattern	java.util.regex.Pattern.CharProperty	union	[java.util.regex.Pattern$CharProperty, java.util.regex.Pattern$CharProperty]
6		java.util.regex.Pattern$6	[]
6	boolean	isSatisfiedBy	[int]
Pattern	java.util.regex.Pattern.CharProperty	intersection	[java.util.regex.Pattern$CharProperty, java.util.regex.Pattern$CharProperty]
7		java.util.regex.Pattern$7	[]
7	boolean	isSatisfiedBy	[int]
Pattern	java.util.regex.Pattern.CharProperty	setDifference	[java.util.regex.Pattern$CharProperty, java.util.regex.Pattern$CharProperty]
Pattern	boolean	hasBaseCharacter	[java.util.regex.Matcher, int, java.lang.CharSequence]
Pattern	java.util.function.Predicate<java.lang.String>	asPredicate	[]
1MatcherIterator		java.util.regex.Pattern$1MatcherIterator	[]
1MatcherIterator	java.lang.String	next	[]
1MatcherIterator	boolean	hasNext	[]
Pattern	java.util.stream.Stream<java.lang.String>	splitAsStream	[java.lang.CharSequence]
PatternSyntaxException		java.util.regex.PatternSyntaxException	[java.lang.String, java.lang.String, int]
PatternSyntaxException	int	getIndex	[]
PatternSyntaxException	java.lang.String	getDescription	[]
PatternSyntaxException	java.lang.String	getPattern	[]
PatternSyntaxException	java.lang.String	getMessage	[]
Itr		java.util.ArrayList$Itr	[]
Itr	boolean	hasNext	[]
Itr	E	next	[]
Itr	void	remove	[]
Itr	void	forEachRemaining	[java.util.function.Consumer]
Itr	void	checkForComodification	[]
ListItr		java.util.ArrayList$ListItr	[int]
ListItr	boolean	hasPrevious	[]
ListItr	int	nextIndex	[]
ListItr	int	previousIndex	[]
ListItr	E	previous	[]
ListItr	void	set	[E]
ListItr	void	add	[E]
SubList		java.util.ArrayList$SubList	[java.util.AbstractList, int, int, int]
SubList	E	set	[int, E]
SubList	E	get	[int]
SubList	int	size	[]
SubList	void	add	[int, E]
SubList	E	remove	[int]
SubList	void	removeRange	[int, int]
SubList	boolean	addAll	[java.util.Collection]
SubList	boolean	addAll	[int, java.util.Collection]
SubList	java.util.Iterator<E>	iterator	[]
1		java.util.ArrayList$SubList$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	boolean	hasPrevious	[]
1	E	previous	[]
1	void	forEachRemaining	[java.util.function.Consumer]
1	int	nextIndex	[]
1	int	previousIndex	[]
1	void	remove	[]
1	void	set	[E]
1	void	add	[E]
1	void	checkForComodification	[]
SubList	java.util.ListIterator<E>	listIterator	[int]
SubList	java.util.List<E>	subList	[int, int]
SubList	void	rangeCheck	[int]
SubList	void	rangeCheckForAdd	[int]
SubList	java.lang.String	outOfBoundsMsg	[int]
SubList	void	checkForComodification	[]
SubList	java.util.Spliterator<E>	spliterator	[]
ArrayListSpliterator		java.util.ArrayList$ArrayListSpliterator	[java.util.ArrayList, int, int, int]
ArrayListSpliterator	int	getFence	[]
ArrayListSpliterator	java.util.ArrayList.ArrayListSpliterator<E>	trySplit	[]
ArrayListSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
ArrayListSpliterator	void	forEachRemaining	[java.util.function.Consumer]
ArrayListSpliterator	long	estimateSize	[]
ArrayListSpliterator	int	characteristics	[]
ArrayList		java.util.ArrayList	[int]
ArrayList		java.util.ArrayList	[]
ArrayList		java.util.ArrayList	[java.util.Collection]
ArrayList	void	trimToSize	[]
ArrayList	void	ensureCapacity	[int]
ArrayList	void	ensureCapacityInternal	[int]
ArrayList	void	ensureExplicitCapacity	[int]
ArrayList	void	grow	[int]
ArrayList	int	hugeCapacity	[int]
ArrayList	int	size	[]
ArrayList	boolean	isEmpty	[]
ArrayList	boolean	contains	[java.lang.Object]
ArrayList	int	indexOf	[java.lang.Object]
ArrayList	int	lastIndexOf	[java.lang.Object]
ArrayList	java.lang.Object	clone	[]
ArrayList	java.lang.Object[]	toArray	[]
ArrayList	T[]	toArray	[T[]]
ArrayList	E	elementData	[int]
ArrayList	E	get	[int]
ArrayList	E	set	[int, E]
ArrayList	boolean	add	[E]
ArrayList	void	add	[int, E]
ArrayList	E	remove	[int]
ArrayList	boolean	remove	[java.lang.Object]
ArrayList	void	fastRemove	[int]
ArrayList	void	clear	[]
ArrayList	boolean	addAll	[java.util.Collection]
ArrayList	boolean	addAll	[int, java.util.Collection]
ArrayList	void	removeRange	[int, int]
ArrayList	void	rangeCheck	[int]
ArrayList	void	rangeCheckForAdd	[int]
ArrayList	java.lang.String	outOfBoundsMsg	[int]
ArrayList	boolean	removeAll	[java.util.Collection]
ArrayList	boolean	retainAll	[java.util.Collection]
ArrayList	boolean	batchRemove	[java.util.Collection, boolean]
ArrayList	void	writeObject	[java.io.ObjectOutputStream]
ArrayList	void	readObject	[java.io.ObjectInputStream]
ArrayList	java.util.ListIterator<E>	listIterator	[int]
ArrayList	java.util.ListIterator<E>	listIterator	[]
ArrayList	java.util.Iterator<E>	iterator	[]
ArrayList	java.util.List<E>	subList	[int, int]
ArrayList	void	subListRangeCheck	[int, int, int]
ArrayList	void	forEach	[java.util.function.Consumer]
ArrayList	java.util.Spliterator<E>	spliterator	[]
ArrayList	boolean	removeIf	[java.util.function.Predicate]
ArrayList	void	replaceAll	[java.util.function.UnaryOperator]
ArrayList	void	sort	[java.util.Comparator]
NaturalOrder		java.util.Arrays$NaturalOrder	[]
NaturalOrder	int	compare	[java.lang.Object, java.lang.Object]
LegacyMergeSort		java.util.Arrays$LegacyMergeSort	[]
ArrayList		java.util.Arrays$ArrayList	[E[]]
ArrayList	int	size	[]
ArrayList	java.lang.Object[]	toArray	[]
ArrayList	T[]	toArray	[T[]]
ArrayList	E	get	[int]
ArrayList	E	set	[int, E]
ArrayList	int	indexOf	[java.lang.Object]
ArrayList	boolean	contains	[java.lang.Object]
ArrayList	java.util.Spliterator<E>	spliterator	[]
ArrayList	void	forEach	[java.util.function.Consumer]
ArrayList	void	replaceAll	[java.util.function.UnaryOperator]
ArrayList	void	sort	[java.util.Comparator]
Arrays		java.util.Arrays	[]
Arrays	void	rangeCheck	[int, int, int]
Arrays	void	sort	[int[]]
Arrays	void	sort	[int[], int, int]
Arrays	void	sort	[long[]]
Arrays	void	sort	[long[], int, int]
Arrays	void	sort	[short[]]
Arrays	void	sort	[short[], int, int]
Arrays	void	sort	[char[]]
Arrays	void	sort	[char[], int, int]
Arrays	void	sort	[byte[]]
Arrays	void	sort	[byte[], int, int]
Arrays	void	sort	[float[]]
Arrays	void	sort	[float[], int, int]
Arrays	void	sort	[double[]]
Arrays	void	sort	[double[], int, int]
Arrays	void	parallelSort	[byte[]]
Arrays	void	parallelSort	[byte[], int, int]
Arrays	void	parallelSort	[char[]]
Arrays	void	parallelSort	[char[], int, int]
Arrays	void	parallelSort	[short[]]
Arrays	void	parallelSort	[short[], int, int]
Arrays	void	parallelSort	[int[]]
Arrays	void	parallelSort	[int[], int, int]
Arrays	void	parallelSort	[long[]]
Arrays	void	parallelSort	[long[], int, int]
Arrays	void	parallelSort	[float[]]
Arrays	void	parallelSort	[float[], int, int]
Arrays	void	parallelSort	[double[]]
Arrays	void	parallelSort	[double[], int, int]
Arrays	void	parallelSort	[T extends java.lang.Comparable[]]
Arrays	void	parallelSort	[T extends java.lang.Comparable[], int, int]
Arrays	void	parallelSort	[T[], java.util.Comparator]
Arrays	void	parallelSort	[T[], int, int, java.util.Comparator]
Arrays	void	sort	[java.lang.Object[]]
Arrays	void	legacyMergeSort	[java.lang.Object[]]
Arrays	void	sort	[java.lang.Object[], int, int]
Arrays	void	legacyMergeSort	[java.lang.Object[], int, int]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int]
Arrays	void	swap	[java.lang.Object[], int, int]
Arrays	void	sort	[T[], java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], java.util.Comparator]
Arrays	void	sort	[T[], int, int, java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], int, int, java.util.Comparator]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int, java.util.Comparator]
Arrays	void	parallelPrefix	[T[], java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[T[], int, int, java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[long[], java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[long[], int, int, java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[double[], java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[double[], int, int, java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[int[], java.util.function.IntBinaryOperator]
Arrays	void	parallelPrefix	[int[], int, int, java.util.function.IntBinaryOperator]
Arrays	int	binarySearch	[long[], long]
Arrays	int	binarySearch	[long[], int, int, long]
Arrays	int	binarySearch0	[long[], int, int, long]
Arrays	int	binarySearch	[int[], int]
Arrays	int	binarySearch	[int[], int, int, int]
Arrays	int	binarySearch0	[int[], int, int, int]
Arrays	int	binarySearch	[short[], short]
Arrays	int	binarySearch	[short[], int, int, short]
Arrays	int	binarySearch0	[short[], int, int, short]
Arrays	int	binarySearch	[char[], char]
Arrays	int	binarySearch	[char[], int, int, char]
Arrays	int	binarySearch0	[char[], int, int, char]
Arrays	int	binarySearch	[byte[], byte]
Arrays	int	binarySearch	[byte[], int, int, byte]
Arrays	int	binarySearch0	[byte[], int, int, byte]
Arrays	int	binarySearch	[double[], double]
Arrays	int	binarySearch	[double[], int, int, double]
Arrays	int	binarySearch0	[double[], int, int, double]
Arrays	int	binarySearch	[float[], float]
Arrays	int	binarySearch	[float[], int, int, float]
Arrays	int	binarySearch0	[float[], int, int, float]
Arrays	int	binarySearch	[java.lang.Object[], java.lang.Object]
Arrays	int	binarySearch	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch0	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch	[T[], T, java.util.Comparator]
Arrays	int	binarySearch	[T[], int, int, T, java.util.Comparator]
Arrays	int	binarySearch0	[T[], int, int, T, java.util.Comparator]
Arrays	boolean	equals	[long[], long[]]
Arrays	boolean	equals	[int[], int[]]
Arrays	boolean	equals	[short[], short[]]
Arrays	boolean	equals	[char[], char[]]
Arrays	boolean	equals	[byte[], byte[]]
Arrays	boolean	equals	[boolean[], boolean[]]
Arrays	boolean	equals	[double[], double[]]
Arrays	boolean	equals	[float[], float[]]
Arrays	boolean	equals	[java.lang.Object[], java.lang.Object[]]
Arrays	void	fill	[long[], long]
Arrays	void	fill	[long[], int, int, long]
Arrays	void	fill	[int[], int]
Arrays	void	fill	[int[], int, int, int]
Arrays	void	fill	[short[], short]
Arrays	void	fill	[short[], int, int, short]
Arrays	void	fill	[char[], char]
Arrays	void	fill	[char[], int, int, char]
Arrays	void	fill	[byte[], byte]
Arrays	void	fill	[byte[], int, int, byte]
Arrays	void	fill	[boolean[], boolean]
Arrays	void	fill	[boolean[], int, int, boolean]
Arrays	void	fill	[double[], double]
Arrays	void	fill	[double[], int, int, double]
Arrays	void	fill	[float[], float]
Arrays	void	fill	[float[], int, int, float]
Arrays	void	fill	[java.lang.Object[], java.lang.Object]
Arrays	void	fill	[java.lang.Object[], int, int, java.lang.Object]
Arrays	T[]	copyOf	[T[], int]
Arrays	T[]	copyOf	[U[], int, java.lang.Class]
Arrays	byte[]	copyOf	[byte[], int]
Arrays	short[]	copyOf	[short[], int]
Arrays	int[]	copyOf	[int[], int]
Arrays	long[]	copyOf	[long[], int]
Arrays	char[]	copyOf	[char[], int]
Arrays	float[]	copyOf	[float[], int]
Arrays	double[]	copyOf	[double[], int]
Arrays	boolean[]	copyOf	[boolean[], int]
Arrays	T[]	copyOfRange	[T[], int, int]
Arrays	T[]	copyOfRange	[U[], int, int, java.lang.Class]
Arrays	byte[]	copyOfRange	[byte[], int, int]
Arrays	short[]	copyOfRange	[short[], int, int]
Arrays	int[]	copyOfRange	[int[], int, int]
Arrays	long[]	copyOfRange	[long[], int, int]
Arrays	char[]	copyOfRange	[char[], int, int]
Arrays	float[]	copyOfRange	[float[], int, int]
Arrays	double[]	copyOfRange	[double[], int, int]
Arrays	boolean[]	copyOfRange	[boolean[], int, int]
Arrays	java.util.List<T>	asList	[T[]]
Arrays	int	hashCode	[long[]]
Arrays	int	hashCode	[int[]]
Arrays	int	hashCode	[short[]]
Arrays	int	hashCode	[char[]]
Arrays	int	hashCode	[byte[]]
Arrays	int	hashCode	[boolean[]]
Arrays	int	hashCode	[float[]]
Arrays	int	hashCode	[double[]]
Arrays	int	hashCode	[java.lang.Object[]]
Arrays	int	deepHashCode	[java.lang.Object[]]
Arrays	boolean	deepEquals	[java.lang.Object[], java.lang.Object[]]
Arrays	boolean	deepEquals0	[java.lang.Object, java.lang.Object]
Arrays	java.lang.String	toString	[long[]]
Arrays	java.lang.String	toString	[int[]]
Arrays	java.lang.String	toString	[short[]]
Arrays	java.lang.String	toString	[char[]]
Arrays	java.lang.String	toString	[byte[]]
Arrays	java.lang.String	toString	[boolean[]]
Arrays	java.lang.String	toString	[float[]]
Arrays	java.lang.String	toString	[double[]]
Arrays	java.lang.String	toString	[java.lang.Object[]]
Arrays	java.lang.String	deepToString	[java.lang.Object[]]
Arrays	void	deepToString	[java.lang.Object[], java.lang.StringBuilder, java.util.Set]
Arrays	void	setAll	[T[], java.util.function.IntFunction]
Arrays	void	parallelSetAll	[T[], java.util.function.IntFunction]
Arrays	void	setAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	parallelSetAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	setAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	parallelSetAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	setAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	void	parallelSetAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	java.util.Spliterator<T>	spliterator	[T[]]
Arrays	java.util.Spliterator<T>	spliterator	[T[], int, int]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[]]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[], int, int]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[]]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[], int, int]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[]]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[], int, int]
Arrays	java.util.stream.Stream<T>	stream	[T[]]
Arrays	java.util.stream.Stream<T>	stream	[T[], int, int]
Arrays	java.util.stream.IntStream	stream	[int[]]
Arrays	java.util.stream.IntStream	stream	[int[], int, int]
Arrays	java.util.stream.LongStream	stream	[long[]]
Arrays	java.util.stream.LongStream	stream	[long[], int, int]
Arrays	java.util.stream.DoubleStream	stream	[double[]]
Arrays	java.util.stream.DoubleStream	stream	[double[], int, int]
UnmodifiableCollection		java.util.Collections$UnmodifiableCollection	[java.util.Collection]
UnmodifiableCollection	int	size	[]
UnmodifiableCollection	boolean	isEmpty	[]
UnmodifiableCollection	boolean	contains	[java.lang.Object]
UnmodifiableCollection	java.lang.Object[]	toArray	[]
UnmodifiableCollection	T[]	toArray	[T[]]
UnmodifiableCollection	java.lang.String	toString	[]
1		java.util.Collections$UnmodifiableCollection$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	void	remove	[]
1	void	forEachRemaining	[java.util.function.Consumer]
UnmodifiableCollection	java.util.Iterator<E>	iterator	[]
UnmodifiableCollection	boolean	add	[E]
UnmodifiableCollection	boolean	remove	[java.lang.Object]
UnmodifiableCollection	boolean	containsAll	[java.util.Collection]
UnmodifiableCollection	boolean	addAll	[java.util.Collection]
UnmodifiableCollection	boolean	removeAll	[java.util.Collection]
UnmodifiableCollection	boolean	retainAll	[java.util.Collection]
UnmodifiableCollection	void	clear	[]
UnmodifiableCollection	void	forEach	[java.util.function.Consumer]
UnmodifiableCollection	boolean	removeIf	[java.util.function.Predicate]
UnmodifiableCollection	java.util.Spliterator<E>	spliterator	[]
UnmodifiableCollection	java.util.stream.Stream<E>	stream	[]
UnmodifiableCollection	java.util.stream.Stream<E>	parallelStream	[]
UnmodifiableSet		java.util.Collections$UnmodifiableSet	[java.util.Set]
UnmodifiableSet	boolean	equals	[java.lang.Object]
UnmodifiableSet	int	hashCode	[]
UnmodifiableSortedSet		java.util.Collections$UnmodifiableSortedSet	[java.util.SortedSet]
UnmodifiableSortedSet	java.util.Comparator<? super E>	comparator	[]
UnmodifiableSortedSet	java.util.SortedSet<E>	subSet	[E, E]
UnmodifiableSortedSet	java.util.SortedSet<E>	headSet	[E]
UnmodifiableSortedSet	java.util.SortedSet<E>	tailSet	[E]
UnmodifiableSortedSet	E	first	[]
UnmodifiableSortedSet	E	last	[]
EmptyNavigableSet		java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet	[]
EmptyNavigableSet	java.lang.Object	readResolve	[]
UnmodifiableNavigableSet		java.util.Collections$UnmodifiableNavigableSet	[java.util.NavigableSet]
UnmodifiableNavigableSet	E	lower	[E]
UnmodifiableNavigableSet	E	floor	[E]
UnmodifiableNavigableSet	E	ceiling	[E]
UnmodifiableNavigableSet	E	higher	[E]
UnmodifiableNavigableSet	E	pollFirst	[]
UnmodifiableNavigableSet	E	pollLast	[]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	descendingSet	[]
UnmodifiableNavigableSet	java.util.Iterator<E>	descendingIterator	[]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	subSet	[E, boolean, E, boolean]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	headSet	[E, boolean]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	tailSet	[E, boolean]
UnmodifiableList		java.util.Collections$UnmodifiableList	[java.util.List]
UnmodifiableList	boolean	equals	[java.lang.Object]
UnmodifiableList	int	hashCode	[]
UnmodifiableList	E	get	[int]
UnmodifiableList	E	set	[int, E]
UnmodifiableList	void	add	[int, E]
UnmodifiableList	E	remove	[int]
UnmodifiableList	int	indexOf	[java.lang.Object]
UnmodifiableList	int	lastIndexOf	[java.lang.Object]
UnmodifiableList	boolean	addAll	[int, java.util.Collection]
UnmodifiableList	void	replaceAll	[java.util.function.UnaryOperator]
UnmodifiableList	void	sort	[java.util.Comparator]
UnmodifiableList	java.util.ListIterator<E>	listIterator	[]
1		java.util.Collections$UnmodifiableList$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	boolean	hasPrevious	[]
1	E	previous	[]
1	int	nextIndex	[]
1	int	previousIndex	[]
1	void	remove	[]
1	void	set	[E]
1	void	add	[E]
1	void	forEachRemaining	[java.util.function.Consumer]
UnmodifiableList	java.util.ListIterator<E>	listIterator	[int]
UnmodifiableList	java.util.List<E>	subList	[int, int]
UnmodifiableList	java.lang.Object	readResolve	[]
UnmodifiableRandomAccessList		java.util.Collections$UnmodifiableRandomAccessList	[java.util.List]
UnmodifiableRandomAccessList	java.util.List<E>	subList	[int, int]
UnmodifiableRandomAccessList	java.lang.Object	writeReplace	[]
UnmodifiableEntrySetSpliterator		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator	[java.util.Spliterator]
UnmodifiableEntrySetSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
UnmodifiableEntrySetSpliterator	void	forEachRemaining	[java.util.function.Consumer]
UnmodifiableEntrySetSpliterator	java.util.Spliterator<java.util.Map.Entry<K, V>>	trySplit	[]
UnmodifiableEntrySetSpliterator	long	estimateSize	[]
UnmodifiableEntrySetSpliterator	long	getExactSizeIfKnown	[]
UnmodifiableEntrySetSpliterator	int	characteristics	[]
UnmodifiableEntrySetSpliterator	boolean	hasCharacteristics	[int]
UnmodifiableEntrySetSpliterator	java.util.Comparator<? super java.util.Map.Entry<K, V>>	getComparator	[]
UnmodifiableEntry		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry	[java.util.Map$Entry]
UnmodifiableEntry	K	getKey	[]
UnmodifiableEntry	V	getValue	[]
UnmodifiableEntry	V	setValue	[V]
UnmodifiableEntry	int	hashCode	[]
UnmodifiableEntry	boolean	equals	[java.lang.Object]
UnmodifiableEntry	java.lang.String	toString	[]
UnmodifiableEntrySet		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet	[java.util.Set]
UnmodifiableEntrySet	java.util.function.Consumer<java.util.Map.Entry<K, V>>	entryConsumer	[java.util.function.Consumer]
UnmodifiableEntrySet	void	forEach	[java.util.function.Consumer]
UnmodifiableEntrySet	java.util.Spliterator<java.util.Map.Entry<K, V>>	spliterator	[]
UnmodifiableEntrySet	java.util.stream.Stream<java.util.Map.Entry<K, V>>	stream	[]
UnmodifiableEntrySet	java.util.stream.Stream<java.util.Map.Entry<K, V>>	parallelStream	[]
1		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1	[]
1	boolean	hasNext	[]
1	java.util.Map.Entry<K, V>	next	[]
1	void	remove	[]
UnmodifiableEntrySet	java.util.Iterator<java.util.Map.Entry<K, V>>	iterator	[]
UnmodifiableEntrySet	java.lang.Object[]	toArray	[]
UnmodifiableEntrySet	T[]	toArray	[T[]]
UnmodifiableEntrySet	boolean	contains	[java.lang.Object]
UnmodifiableEntrySet	boolean	containsAll	[java.util.Collection]
UnmodifiableEntrySet	boolean	equals	[java.lang.Object]
UnmodifiableMap		java.util.Collections$UnmodifiableMap	[java.util.Map]
UnmodifiableMap	int	size	[]
UnmodifiableMap	boolean	isEmpty	[]
UnmodifiableMap	boolean	containsKey	[java.lang.Object]
UnmodifiableMap	boolean	containsValue	[java.lang.Object]
UnmodifiableMap	V	get	[java.lang.Object]
UnmodifiableMap	V	put	[K, V]
UnmodifiableMap	V	remove	[java.lang.Object]
UnmodifiableMap	void	putAll	[java.util.Map]
UnmodifiableMap	void	clear	[]
UnmodifiableMap	java.util.Set<K>	keySet	[]
UnmodifiableMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
UnmodifiableMap	java.util.Collection<V>	values	[]
UnmodifiableMap	boolean	equals	[java.lang.Object]
UnmodifiableMap	int	hashCode	[]
UnmodifiableMap	java.lang.String	toString	[]
UnmodifiableMap	V	getOrDefault	[java.lang.Object, V]
UnmodifiableMap	void	forEach	[java.util.function.BiConsumer]
UnmodifiableMap	void	replaceAll	[java.util.function.BiFunction]
UnmodifiableMap	V	putIfAbsent	[K, V]
UnmodifiableMap	boolean	remove	[java.lang.Object, java.lang.Object]
UnmodifiableMap	boolean	replace	[K, V, V]
UnmodifiableMap	V	replace	[K, V]
UnmodifiableMap	V	computeIfAbsent	[K, java.util.function.Function]
UnmodifiableMap	V	computeIfPresent	[K, java.util.function.BiFunction]
UnmodifiableMap	V	compute	[K, java.util.function.BiFunction]
UnmodifiableMap	V	merge	[K, V, java.util.function.BiFunction]
UnmodifiableSortedMap		java.util.Collections$UnmodifiableSortedMap	[java.util.SortedMap]
UnmodifiableSortedMap	java.util.Comparator<? super K>	comparator	[]
UnmodifiableSortedMap	java.util.SortedMap<K, V>	subMap	[K, K]
UnmodifiableSortedMap	java.util.SortedMap<K, V>	headMap	[K]
UnmodifiableSortedMap	java.util.SortedMap<K, V>	tailMap	[K]
UnmodifiableSortedMap	K	firstKey	[]
UnmodifiableSortedMap	K	lastKey	[]
EmptyNavigableMap		java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap	[]
EmptyNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
EmptyNavigableMap	java.lang.Object	readResolve	[]
UnmodifiableNavigableMap		java.util.Collections$UnmodifiableNavigableMap	[java.util.NavigableMap]
UnmodifiableNavigableMap	K	lowerKey	[K]
UnmodifiableNavigableMap	K	floorKey	[K]
UnmodifiableNavigableMap	K	ceilingKey	[K]
UnmodifiableNavigableMap	K	higherKey	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	lowerEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	floorEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	ceilingEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	higherEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	firstEntry	[]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	lastEntry	[]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	pollFirstEntry	[]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	pollLastEntry	[]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	descendingMap	[]
UnmodifiableNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
UnmodifiableNavigableMap	java.util.NavigableSet<K>	descendingKeySet	[]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, boolean, K, boolean]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	headMap	[K, boolean]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K, boolean]
SynchronizedCollection		java.util.Collections$SynchronizedCollection	[java.util.Collection]
SynchronizedCollection		java.util.Collections$SynchronizedCollection	[java.util.Collection, java.lang.Object]
SynchronizedCollection	int	size	[]
SynchronizedCollection	boolean	isEmpty	[]
SynchronizedCollection	boolean	contains	[java.lang.Object]
SynchronizedCollection	java.lang.Object[]	toArray	[]
SynchronizedCollection	T[]	toArray	[T[]]
SynchronizedCollection	java.util.Iterator<E>	iterator	[]
SynchronizedCollection	boolean	add	[E]
SynchronizedCollection	boolean	remove	[java.lang.Object]
SynchronizedCollection	boolean	containsAll	[java.util.Collection]
SynchronizedCollection	boolean	addAll	[java.util.Collection]
SynchronizedCollection	boolean	removeAll	[java.util.Collection]
SynchronizedCollection	boolean	retainAll	[java.util.Collection]
SynchronizedCollection	void	clear	[]
SynchronizedCollection	java.lang.String	toString	[]
SynchronizedCollection	void	forEach	[java.util.function.Consumer]
SynchronizedCollection	boolean	removeIf	[java.util.function.Predicate]
SynchronizedCollection	java.util.Spliterator<E>	spliterator	[]
SynchronizedCollection	java.util.stream.Stream<E>	stream	[]
SynchronizedCollection	java.util.stream.Stream<E>	parallelStream	[]
SynchronizedCollection	void	writeObject	[java.io.ObjectOutputStream]
SynchronizedSet		java.util.Collections$SynchronizedSet	[java.util.Set]
SynchronizedSet		java.util.Collections$SynchronizedSet	[java.util.Set, java.lang.Object]
SynchronizedSet	boolean	equals	[java.lang.Object]
SynchronizedSet	int	hashCode	[]
SynchronizedSortedSet		java.util.Collections$SynchronizedSortedSet	[java.util.SortedSet]
SynchronizedSortedSet		java.util.Collections$SynchronizedSortedSet	[java.util.SortedSet, java.lang.Object]
SynchronizedSortedSet	java.util.Comparator<? super E>	comparator	[]
SynchronizedSortedSet	java.util.SortedSet<E>	subSet	[E, E]
SynchronizedSortedSet	java.util.SortedSet<E>	headSet	[E]
SynchronizedSortedSet	java.util.SortedSet<E>	tailSet	[E]
SynchronizedSortedSet	E	first	[]
SynchronizedSortedSet	E	last	[]
SynchronizedNavigableSet		java.util.Collections$SynchronizedNavigableSet	[java.util.NavigableSet]
SynchronizedNavigableSet		java.util.Collections$SynchronizedNavigableSet	[java.util.NavigableSet, java.lang.Object]
SynchronizedNavigableSet	E	lower	[E]
SynchronizedNavigableSet	E	floor	[E]
SynchronizedNavigableSet	E	ceiling	[E]
SynchronizedNavigableSet	E	higher	[E]
SynchronizedNavigableSet	E	pollFirst	[]
SynchronizedNavigableSet	E	pollLast	[]
SynchronizedNavigableSet	java.util.NavigableSet<E>	descendingSet	[]
SynchronizedNavigableSet	java.util.Iterator<E>	descendingIterator	[]
SynchronizedNavigableSet	java.util.NavigableSet<E>	subSet	[E, E]
SynchronizedNavigableSet	java.util.NavigableSet<E>	headSet	[E]
SynchronizedNavigableSet	java.util.NavigableSet<E>	tailSet	[E]
SynchronizedNavigableSet	java.util.NavigableSet<E>	subSet	[E, boolean, E, boolean]
SynchronizedNavigableSet	java.util.NavigableSet<E>	headSet	[E, boolean]
SynchronizedNavigableSet	java.util.NavigableSet<E>	tailSet	[E, boolean]
SynchronizedList		java.util.Collections$SynchronizedList	[java.util.List]
SynchronizedList		java.util.Collections$SynchronizedList	[java.util.List, java.lang.Object]
SynchronizedList	boolean	equals	[java.lang.Object]
SynchronizedList	int	hashCode	[]
SynchronizedList	E	get	[int]
SynchronizedList	E	set	[int, E]
SynchronizedList	void	add	[int, E]
SynchronizedList	E	remove	[int]
SynchronizedList	int	indexOf	[java.lang.Object]
SynchronizedList	int	lastIndexOf	[java.lang.Object]
SynchronizedList	boolean	addAll	[int, java.util.Collection]
SynchronizedList	java.util.ListIterator<E>	listIterator	[]
SynchronizedList	java.util.ListIterator<E>	listIterator	[int]
SynchronizedList	java.util.List<E>	subList	[int, int]
SynchronizedList	void	replaceAll	[java.util.function.UnaryOperator]
SynchronizedList	void	sort	[java.util.Comparator]
SynchronizedList	java.lang.Object	readResolve	[]
SynchronizedRandomAccessList		java.util.Collections$SynchronizedRandomAccessList	[java.util.List]
SynchronizedRandomAccessList		java.util.Collections$SynchronizedRandomAccessList	[java.util.List, java.lang.Object]
SynchronizedRandomAccessList	java.util.List<E>	subList	[int, int]
SynchronizedRandomAccessList	java.lang.Object	writeReplace	[]
SynchronizedMap		java.util.Collections$SynchronizedMap	[java.util.Map]
SynchronizedMap		java.util.Collections$SynchronizedMap	[java.util.Map, java.lang.Object]
SynchronizedMap	int	size	[]
SynchronizedMap	boolean	isEmpty	[]
SynchronizedMap	boolean	containsKey	[java.lang.Object]
SynchronizedMap	boolean	containsValue	[java.lang.Object]
SynchronizedMap	V	get	[java.lang.Object]
SynchronizedMap	V	put	[K, V]
SynchronizedMap	V	remove	[java.lang.Object]
SynchronizedMap	void	putAll	[java.util.Map]
SynchronizedMap	void	clear	[]
SynchronizedMap	java.util.Set<K>	keySet	[]
SynchronizedMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
SynchronizedMap	java.util.Collection<V>	values	[]
SynchronizedMap	boolean	equals	[java.lang.Object]
SynchronizedMap	int	hashCode	[]
SynchronizedMap	java.lang.String	toString	[]
SynchronizedMap	V	getOrDefault	[java.lang.Object, V]
SynchronizedMap	void	forEach	[java.util.function.BiConsumer]
SynchronizedMap	void	replaceAll	[java.util.function.BiFunction]
SynchronizedMap	V	putIfAbsent	[K, V]
SynchronizedMap	boolean	remove	[java.lang.Object, java.lang.Object]
SynchronizedMap	boolean	replace	[K, V, V]
SynchronizedMap	V	replace	[K, V]
SynchronizedMap	V	computeIfAbsent	[K, java.util.function.Function]
SynchronizedMap	V	computeIfPresent	[K, java.util.function.BiFunction]
SynchronizedMap	V	compute	[K, java.util.function.BiFunction]
SynchronizedMap	V	merge	[K, V, java.util.function.BiFunction]
SynchronizedMap	void	writeObject	[java.io.ObjectOutputStream]
SynchronizedSortedMap		java.util.Collections$SynchronizedSortedMap	[java.util.SortedMap]
SynchronizedSortedMap		java.util.Collections$SynchronizedSortedMap	[java.util.SortedMap, java.lang.Object]
SynchronizedSortedMap	java.util.Comparator<? super K>	comparator	[]
SynchronizedSortedMap	java.util.SortedMap<K, V>	subMap	[K, K]
SynchronizedSortedMap	java.util.SortedMap<K, V>	headMap	[K]
SynchronizedSortedMap	java.util.SortedMap<K, V>	tailMap	[K]
SynchronizedSortedMap	K	firstKey	[]
SynchronizedSortedMap	K	lastKey	[]
SynchronizedNavigableMap		java.util.Collections$SynchronizedNavigableMap	[java.util.NavigableMap]
SynchronizedNavigableMap		java.util.Collections$SynchronizedNavigableMap	[java.util.NavigableMap, java.lang.Object]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	lowerEntry	[K]
SynchronizedNavigableMap	K	lowerKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	floorEntry	[K]
SynchronizedNavigableMap	K	floorKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	ceilingEntry	[K]
SynchronizedNavigableMap	K	ceilingKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	higherEntry	[K]
SynchronizedNavigableMap	K	higherKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	firstEntry	[]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	lastEntry	[]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	pollFirstEntry	[]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	pollLastEntry	[]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	descendingMap	[]
SynchronizedNavigableMap	java.util.NavigableSet<K>	keySet	[]
SynchronizedNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
SynchronizedNavigableMap	java.util.NavigableSet<K>	descendingKeySet	[]
SynchronizedNavigableMap	java.util.SortedMap<K, V>	subMap	[K, K]
SynchronizedNavigableMap	java.util.SortedMap<K, V>	headMap	[K]
SynchronizedNavigableMap	java.util.SortedMap<K, V>	tailMap	[K]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, boolean, K, boolean]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	headMap	[K, boolean]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K, boolean]
CheckedCollection	E	typeCheck	[java.lang.Object]
CheckedCollection	java.lang.String	badElementMsg	[java.lang.Object]
CheckedCollection		java.util.Collections$CheckedCollection	[java.util.Collection, java.lang.Class]
CheckedCollection	int	size	[]
CheckedCollection	boolean	isEmpty	[]
CheckedCollection	boolean	contains	[java.lang.Object]
CheckedCollection	java.lang.Object[]	toArray	[]
CheckedCollection	T[]	toArray	[T[]]
CheckedCollection	java.lang.String	toString	[]
CheckedCollection	boolean	remove	[java.lang.Object]
CheckedCollection	void	clear	[]
CheckedCollection	boolean	containsAll	[java.util.Collection]
CheckedCollection	boolean	removeAll	[java.util.Collection]
CheckedCollection	boolean	retainAll	[java.util.Collection]
1		java.util.Collections$CheckedCollection$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	void	remove	[]
CheckedCollection	java.util.Iterator<E>	iterator	[]
CheckedCollection	boolean	add	[E]
CheckedCollection	E[]	zeroLengthElementArray	[]
CheckedCollection	java.util.Collection<E>	checkedCopyOf	[java.util.Collection]
CheckedCollection	boolean	addAll	[java.util.Collection]
CheckedCollection	void	forEach	[java.util.function.Consumer]
CheckedCollection	boolean	removeIf	[java.util.function.Predicate]
CheckedCollection	java.util.Spliterator<E>	spliterator	[]
CheckedCollection	java.util.stream.Stream<E>	stream	[]
CheckedCollection	java.util.stream.Stream<E>	parallelStream	[]
CheckedQueue		java.util.Collections$CheckedQueue	[java.util.Queue, java.lang.Class]
CheckedQueue	E	element	[]
CheckedQueue	boolean	equals	[java.lang.Object]
CheckedQueue	int	hashCode	[]
CheckedQueue	E	peek	[]
CheckedQueue	E	poll	[]
CheckedQueue	E	remove	[]
CheckedQueue	boolean	offer	[E]
CheckedSet		java.util.Collections$CheckedSet	[java.util.Set, java.lang.Class]
CheckedSet	boolean	equals	[java.lang.Object]
CheckedSet	int	hashCode	[]
CheckedSortedSet		java.util.Collections$CheckedSortedSet	[java.util.SortedSet, java.lang.Class]
CheckedSortedSet	java.util.Comparator<? super E>	comparator	[]
CheckedSortedSet	E	first	[]
CheckedSortedSet	E	last	[]
CheckedSortedSet	java.util.SortedSet<E>	subSet	[E, E]
CheckedSortedSet	java.util.SortedSet<E>	headSet	[E]
CheckedSortedSet	java.util.SortedSet<E>	tailSet	[E]
CheckedNavigableSet		java.util.Collections$CheckedNavigableSet	[java.util.NavigableSet, java.lang.Class]
CheckedNavigableSet	E	lower	[E]
CheckedNavigableSet	E	floor	[E]
CheckedNavigableSet	E	ceiling	[E]
CheckedNavigableSet	E	higher	[E]
CheckedNavigableSet	E	pollFirst	[]
CheckedNavigableSet	E	pollLast	[]
CheckedNavigableSet	java.util.NavigableSet<E>	descendingSet	[]
CheckedNavigableSet	java.util.Iterator<E>	descendingIterator	[]
CheckedNavigableSet	java.util.NavigableSet<E>	subSet	[E, E]
CheckedNavigableSet	java.util.NavigableSet<E>	headSet	[E]
CheckedNavigableSet	java.util.NavigableSet<E>	tailSet	[E]
CheckedNavigableSet	java.util.NavigableSet<E>	subSet	[E, boolean, E, boolean]
CheckedNavigableSet	java.util.NavigableSet<E>	headSet	[E, boolean]
CheckedNavigableSet	java.util.NavigableSet<E>	tailSet	[E, boolean]
CheckedList		java.util.Collections$CheckedList	[java.util.List, java.lang.Class]
CheckedList	boolean	equals	[java.lang.Object]
CheckedList	int	hashCode	[]
CheckedList	E	get	[int]
CheckedList	E	remove	[int]
CheckedList	int	indexOf	[java.lang.Object]
CheckedList	int	lastIndexOf	[java.lang.Object]
CheckedList	E	set	[int, E]
CheckedList	void	add	[int, E]
CheckedList	boolean	addAll	[int, java.util.Collection]
CheckedList	java.util.ListIterator<E>	listIterator	[]
1		java.util.Collections$CheckedList$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	boolean	hasPrevious	[]
1	E	previous	[]
1	int	nextIndex	[]
1	int	previousIndex	[]
1	void	remove	[]
1	void	set	[E]
1	void	add	[E]
1	void	forEachRemaining	[java.util.function.Consumer]
CheckedList	java.util.ListIterator<E>	listIterator	[int]
CheckedList	java.util.List<E>	subList	[int, int]
CheckedList	void	replaceAll	[java.util.function.UnaryOperator]
CheckedList	void	sort	[java.util.Comparator]
CheckedRandomAccessList		java.util.Collections$CheckedRandomAccessList	[java.util.List, java.lang.Class]
CheckedRandomAccessList	java.util.List<E>	subList	[int, int]
CheckedEntry		java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry	[java.util.Map$Entry, java.lang.Class]
CheckedEntry	K	getKey	[]
CheckedEntry	V	getValue	[]
CheckedEntry	int	hashCode	[]
CheckedEntry	java.lang.String	toString	[]
CheckedEntry	V	setValue	[V]
CheckedEntry	java.lang.String	badValueMsg	[java.lang.Object]
CheckedEntry	boolean	equals	[java.lang.Object]
CheckedEntrySet		java.util.Collections$CheckedMap$CheckedEntrySet	[java.util.Set, java.lang.Class]
CheckedEntrySet	int	size	[]
CheckedEntrySet	boolean	isEmpty	[]
CheckedEntrySet	java.lang.String	toString	[]
CheckedEntrySet	int	hashCode	[]
CheckedEntrySet	void	clear	[]
CheckedEntrySet	boolean	add	[java.util.Map$Entry]
CheckedEntrySet	boolean	addAll	[java.util.Collection]
1		java.util.Collections$CheckedMap$CheckedEntrySet$1	[]
1	boolean	hasNext	[]
1	void	remove	[]
1	java.util.Map.Entry<K, V>	next	[]
CheckedEntrySet	java.util.Iterator<java.util.Map.Entry<K, V>>	iterator	[]
CheckedEntrySet	java.lang.Object[]	toArray	[]
CheckedEntrySet	T[]	toArray	[T[]]
CheckedEntrySet	boolean	contains	[java.lang.Object]
CheckedEntrySet	boolean	containsAll	[java.util.Collection]
CheckedEntrySet	boolean	remove	[java.lang.Object]
CheckedEntrySet	boolean	removeAll	[java.util.Collection]
CheckedEntrySet	boolean	retainAll	[java.util.Collection]
CheckedEntrySet	boolean	batchRemove	[java.util.Collection, boolean]
CheckedEntrySet	boolean	equals	[java.lang.Object]
CheckedEntrySet	java.util.Collections.CheckedMap.CheckedEntrySet.CheckedEntry<K, V, T>	checkedEntry	[java.util.Map$Entry, java.lang.Class]
CheckedMap	void	typeCheck	[java.lang.Object, java.lang.Object]
CheckedMap	java.util.function.BiFunction<? super K, ? super V, ? extends V>	typeCheck	[java.util.function.BiFunction]
CheckedMap	java.lang.String	badKeyMsg	[java.lang.Object]
CheckedMap	java.lang.String	badValueMsg	[java.lang.Object]
CheckedMap		java.util.Collections$CheckedMap	[java.util.Map, java.lang.Class, java.lang.Class]
CheckedMap	int	size	[]
CheckedMap	boolean	isEmpty	[]
CheckedMap	boolean	containsKey	[java.lang.Object]
CheckedMap	boolean	containsValue	[java.lang.Object]
CheckedMap	V	get	[java.lang.Object]
CheckedMap	V	remove	[java.lang.Object]
CheckedMap	void	clear	[]
CheckedMap	java.util.Set<K>	keySet	[]
CheckedMap	java.util.Collection<V>	values	[]
CheckedMap	boolean	equals	[java.lang.Object]
CheckedMap	int	hashCode	[]
CheckedMap	java.lang.String	toString	[]
CheckedMap	V	put	[K, V]
CheckedMap	void	putAll	[java.util.Map]
CheckedMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
CheckedMap	void	forEach	[java.util.function.BiConsumer]
CheckedMap	void	replaceAll	[java.util.function.BiFunction]
CheckedMap	V	putIfAbsent	[K, V]
CheckedMap	boolean	remove	[java.lang.Object, java.lang.Object]
CheckedMap	boolean	replace	[K, V, V]
CheckedMap	V	replace	[K, V]
CheckedMap	V	computeIfAbsent	[K, java.util.function.Function]
CheckedMap	V	computeIfPresent	[K, java.util.function.BiFunction]
CheckedMap	V	compute	[K, java.util.function.BiFunction]
CheckedMap	V	merge	[K, V, java.util.function.BiFunction]
CheckedSortedMap		java.util.Collections$CheckedSortedMap	[java.util.SortedMap, java.lang.Class, java.lang.Class]
CheckedSortedMap	java.util.Comparator<? super K>	comparator	[]
CheckedSortedMap	K	firstKey	[]
CheckedSortedMap	K	lastKey	[]
CheckedSortedMap	java.util.SortedMap<K, V>	subMap	[K, K]
CheckedSortedMap	java.util.SortedMap<K, V>	headMap	[K]
CheckedSortedMap	java.util.SortedMap<K, V>	tailMap	[K]
CheckedNavigableMap		java.util.Collections$CheckedNavigableMap	[java.util.NavigableMap, java.lang.Class, java.lang.Class]
CheckedNavigableMap	java.util.Comparator<? super K>	comparator	[]
CheckedNavigableMap	K	firstKey	[]
CheckedNavigableMap	K	lastKey	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	lowerEntry	[K]
CheckedNavigableMap	K	lowerKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	floorEntry	[K]
CheckedNavigableMap	K	floorKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	ceilingEntry	[K]
CheckedNavigableMap	K	ceilingKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	higherEntry	[K]
CheckedNavigableMap	K	higherKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	firstEntry	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	lastEntry	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	pollFirstEntry	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	pollLastEntry	[]
CheckedNavigableMap	java.util.NavigableMap<K, V>	descendingMap	[]
CheckedNavigableMap	java.util.NavigableSet<K>	keySet	[]
CheckedNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
CheckedNavigableMap	java.util.NavigableSet<K>	descendingKeySet	[]
CheckedNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, K]
CheckedNavigableMap	java.util.NavigableMap<K, V>	headMap	[K]
CheckedNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K]
CheckedNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, boolean, K, boolean]
CheckedNavigableMap	java.util.NavigableMap<K, V>	headMap	[K, boolean]
CheckedNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K, boolean]
EmptyIterator		java.util.Collections$EmptyIterator	[]
EmptyIterator	boolean	hasNext	[]
EmptyIterator	E	next	[]
EmptyIterator	void	remove	[]
EmptyIterator	void	forEachRemaining	[java.util.function.Consumer]
EmptyListIterator		java.util.Collections$EmptyListIterator	[]
EmptyListIterator	boolean	hasPrevious	[]
EmptyListIterator	E	previous	[]
EmptyListIterator	int	nextIndex	[]
EmptyListIterator	int	previousIndex	[]
EmptyListIterator	void	set	[E]
EmptyListIterator	void	add	[E]
EmptyEnumeration		java.util.Collections$EmptyEnumeration	[]
EmptyEnumeration	boolean	hasMoreElements	[]
EmptyEnumeration	E	nextElement	[]
EmptySet		java.util.Collections$EmptySet	[]
EmptySet	java.util.Iterator<E>	iterator	[]
EmptySet	int	size	[]
EmptySet	boolean	isEmpty	[]
EmptySet	boolean	contains	[java.lang.Object]
EmptySet	boolean	containsAll	[java.util.Collection]
EmptySet	java.lang.Object[]	toArray	[]
EmptySet	T[]	toArray	[T[]]
EmptySet	void	forEach	[java.util.function.Consumer]
EmptySet	boolean	removeIf	[java.util.function.Predicate]
EmptySet	java.util.Spliterator<E>	spliterator	[]
EmptySet	java.lang.Object	readResolve	[]
EmptyList		java.util.Collections$EmptyList	[]
EmptyList	java.util.Iterator<E>	iterator	[]
EmptyList	java.util.ListIterator<E>	listIterator	[]
EmptyList	int	size	[]
EmptyList	boolean	isEmpty	[]
EmptyList	boolean	contains	[java.lang.Object]
EmptyList	boolean	containsAll	[java.util.Collection]
EmptyList	java.lang.Object[]	toArray	[]
EmptyList	T[]	toArray	[T[]]
EmptyList	E	get	[int]
EmptyList	boolean	equals	[java.lang.Object]
EmptyList	int	hashCode	[]
EmptyList	boolean	removeIf	[java.util.function.Predicate]
EmptyList	void	replaceAll	[java.util.function.UnaryOperator]
EmptyList	void	sort	[java.util.Comparator]
EmptyList	void	forEach	[java.util.function.Consumer]
EmptyList	java.util.Spliterator<E>	spliterator	[]
EmptyList	java.lang.Object	readResolve	[]
EmptyMap		java.util.Collections$EmptyMap	[]
EmptyMap	int	size	[]
EmptyMap	boolean	isEmpty	[]
EmptyMap	boolean	containsKey	[java.lang.Object]
EmptyMap	boolean	containsValue	[java.lang.Object]
EmptyMap	V	get	[java.lang.Object]
EmptyMap	java.util.Set<K>	keySet	[]
EmptyMap	java.util.Collection<V>	values	[]
EmptyMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
EmptyMap	boolean	equals	[java.lang.Object]
EmptyMap	int	hashCode	[]
EmptyMap	V	getOrDefault	[java.lang.Object, V]
EmptyMap	void	forEach	[java.util.function.BiConsumer]
EmptyMap	void	replaceAll	[java.util.function.BiFunction]
EmptyMap	V	putIfAbsent	[K, V]
EmptyMap	boolean	remove	[java.lang.Object, java.lang.Object]
EmptyMap	boolean	replace	[K, V, V]
EmptyMap	V	replace	[K, V]
EmptyMap	V	computeIfAbsent	[K, java.util.function.Function]
EmptyMap	V	computeIfPresent	[K, java.util.function.BiFunction]
EmptyMap	V	compute	[K, java.util.function.BiFunction]
EmptyMap	V	merge	[K, V, java.util.function.BiFunction]
EmptyMap	java.lang.Object	readResolve	[]
SingletonSet		java.util.Collections$SingletonSet	[E]
SingletonSet	java.util.Iterator<E>	iterator	[]
SingletonSet	int	size	[]
SingletonSet	boolean	contains	[java.lang.Object]
SingletonSet	void	forEach	[java.util.function.Consumer]
SingletonSet	java.util.Spliterator<E>	spliterator	[]
SingletonSet	boolean	removeIf	[java.util.function.Predicate]
SingletonList		java.util.Collections$SingletonList	[E]
SingletonList	java.util.Iterator<E>	iterator	[]
SingletonList	int	size	[]
SingletonList	boolean	contains	[java.lang.Object]
SingletonList	E	get	[int]
SingletonList	void	forEach	[java.util.function.Consumer]
SingletonList	boolean	removeIf	[java.util.function.Predicate]
SingletonList	void	replaceAll	[java.util.function.UnaryOperator]
SingletonList	void	sort	[java.util.Comparator]
SingletonList	java.util.Spliterator<E>	spliterator	[]
SingletonMap		java.util.Collections$SingletonMap	[K, V]
SingletonMap	int	size	[]
SingletonMap	boolean	isEmpty	[]
SingletonMap	boolean	containsKey	[java.lang.Object]
SingletonMap	boolean	containsValue	[java.lang.Object]
SingletonMap	V	get	[java.lang.Object]
SingletonMap	java.util.Set<K>	keySet	[]
SingletonMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
SingletonMap	java.util.Collection<V>	values	[]
SingletonMap	V	getOrDefault	[java.lang.Object, V]
SingletonMap	void	forEach	[java.util.function.BiConsumer]
SingletonMap	void	replaceAll	[java.util.function.BiFunction]
SingletonMap	V	putIfAbsent	[K, V]
SingletonMap	boolean	remove	[java.lang.Object, java.lang.Object]
SingletonMap	boolean	replace	[K, V, V]
SingletonMap	V	replace	[K, V]
SingletonMap	V	computeIfAbsent	[K, java.util.function.Function]
SingletonMap	V	computeIfPresent	[K, java.util.function.BiFunction]
SingletonMap	V	compute	[K, java.util.function.BiFunction]
SingletonMap	V	merge	[K, V, java.util.function.BiFunction]
CopiesList		java.util.Collections$CopiesList	[int, E]
CopiesList	int	size	[]
CopiesList	boolean	contains	[java.lang.Object]
CopiesList	int	indexOf	[java.lang.Object]
CopiesList	int	lastIndexOf	[java.lang.Object]
CopiesList	E	get	[int]
CopiesList	java.lang.Object[]	toArray	[]
CopiesList	T[]	toArray	[T[]]
CopiesList	java.util.List<E>	subList	[int, int]
CopiesList	java.util.stream.Stream<E>	stream	[]
CopiesList	java.util.stream.Stream<E>	parallelStream	[]
CopiesList	java.util.Spliterator<E>	spliterator	[]
ReverseComparator		java.util.Collections$ReverseComparator	[]
ReverseComparator	int	compare	[java.lang.Comparable, java.lang.Comparable]
ReverseComparator	java.lang.Object	readResolve	[]
ReverseComparator	java.util.Comparator<java.lang.Comparable<java.lang.Object>>	reversed	[]
ReverseComparator2		java.util.Collections$ReverseComparator2	[java.util.Comparator]
ReverseComparator2	int	compare	[T, T]
ReverseComparator2	boolean	equals	[java.lang.Object]
ReverseComparator2	int	hashCode	[]
ReverseComparator2	java.util.Comparator<T>	reversed	[]
SetFromMap		java.util.Collections$SetFromMap	[java.util.Map]
SetFromMap	void	clear	[]
SetFromMap	int	size	[]
SetFromMap	boolean	isEmpty	[]
SetFromMap	boolean	contains	[java.lang.Object]
SetFromMap	boolean	remove	[java.lang.Object]
SetFromMap	boolean	add	[E]
SetFromMap	java.util.Iterator<E>	iterator	[]
SetFromMap	java.lang.Object[]	toArray	[]
SetFromMap	T[]	toArray	[T[]]
SetFromMap	java.lang.String	toString	[]
SetFromMap	int	hashCode	[]
SetFromMap	boolean	equals	[java.lang.Object]
SetFromMap	boolean	containsAll	[java.util.Collection]
SetFromMap	boolean	removeAll	[java.util.Collection]
SetFromMap	boolean	retainAll	[java.util.Collection]
SetFromMap	void	forEach	[java.util.function.Consumer]
SetFromMap	boolean	removeIf	[java.util.function.Predicate]
SetFromMap	java.util.Spliterator<E>	spliterator	[]
SetFromMap	java.util.stream.Stream<E>	stream	[]
SetFromMap	java.util.stream.Stream<E>	parallelStream	[]
SetFromMap	void	readObject	[java.io.ObjectInputStream]
AsLIFOQueue		java.util.Collections$AsLIFOQueue	[java.util.Deque]
AsLIFOQueue	boolean	add	[E]
AsLIFOQueue	boolean	offer	[E]
AsLIFOQueue	E	poll	[]
AsLIFOQueue	E	remove	[]
AsLIFOQueue	E	peek	[]
AsLIFOQueue	E	element	[]
AsLIFOQueue	void	clear	[]
AsLIFOQueue	int	size	[]
AsLIFOQueue	boolean	isEmpty	[]
AsLIFOQueue	boolean	contains	[java.lang.Object]
AsLIFOQueue	boolean	remove	[java.lang.Object]
AsLIFOQueue	java.util.Iterator<E>	iterator	[]
AsLIFOQueue	java.lang.Object[]	toArray	[]
AsLIFOQueue	T[]	toArray	[T[]]
AsLIFOQueue	java.lang.String	toString	[]
AsLIFOQueue	boolean	containsAll	[java.util.Collection]
AsLIFOQueue	boolean	removeAll	[java.util.Collection]
AsLIFOQueue	boolean	retainAll	[java.util.Collection]
AsLIFOQueue	void	forEach	[java.util.function.Consumer]
AsLIFOQueue	boolean	removeIf	[java.util.function.Predicate]
AsLIFOQueue	java.util.Spliterator<E>	spliterator	[]
AsLIFOQueue	java.util.stream.Stream<E>	stream	[]
AsLIFOQueue	java.util.stream.Stream<E>	parallelStream	[]
Collections		java.util.Collections	[]
Collections	void	sort	[java.util.List]
Collections	void	sort	[java.util.List, java.util.Comparator]
Collections	int	binarySearch	[java.util.List, T]
Collections	int	indexedBinarySearch	[java.util.List, T]
Collections	int	iteratorBinarySearch	[java.util.List, T]
Collections	T	get	[java.util.ListIterator, int]
Collections	int	binarySearch	[java.util.List, T, java.util.Comparator]
Collections	int	indexedBinarySearch	[java.util.List, T, java.util.Comparator]
Collections	int	iteratorBinarySearch	[java.util.List, T, java.util.Comparator]
Collections	void	reverse	[java.util.List]
Collections	void	shuffle	[java.util.List]
Collections	void	shuffle	[java.util.List, java.util.Random]
Collections	void	swap	[java.util.List, int, int]
Collections	void	swap	[java.lang.Object[], int, int]
Collections	void	fill	[java.util.List, T]
Collections	void	copy	[java.util.List, java.util.List]
Collections	T	min	[java.util.Collection]
Collections	T	min	[java.util.Collection, java.util.Comparator]
Collections	T	max	[java.util.Collection]
Collections	T	max	[java.util.Collection, java.util.Comparator]
Collections	void	rotate	[java.util.List, int]
Collections	void	rotate1	[java.util.List, int]
Collections	void	rotate2	[java.util.List, int]
Collections	boolean	replaceAll	[java.util.List, T, T]
Collections	int	indexOfSubList	[java.util.List, java.util.List]
Collections	int	lastIndexOfSubList	[java.util.List, java.util.List]
Collections	java.util.Collection<T>	unmodifiableCollection	[java.util.Collection]
Collections	java.util.Set<T>	unmodifiableSet	[java.util.Set]
Collections	java.util.SortedSet<T>	unmodifiableSortedSet	[java.util.SortedSet]
Collections	java.util.NavigableSet<T>	unmodifiableNavigableSet	[java.util.NavigableSet]
Collections	java.util.List<T>	unmodifiableList	[java.util.List]
Collections	java.util.Map<K, V>	unmodifiableMap	[java.util.Map]
Collections	java.util.SortedMap<K, V>	unmodifiableSortedMap	[java.util.SortedMap]
Collections	java.util.NavigableMap<K, V>	unmodifiableNavigableMap	[java.util.NavigableMap]
Collections	java.util.Collection<T>	synchronizedCollection	[java.util.Collection]
Collections	java.util.Collection<T>	synchronizedCollection	[java.util.Collection, java.lang.Object]
Collections	java.util.Set<T>	synchronizedSet	[java.util.Set]
Collections	java.util.Set<T>	synchronizedSet	[java.util.Set, java.lang.Object]
Collections	java.util.SortedSet<T>	synchronizedSortedSet	[java.util.SortedSet]
Collections	java.util.NavigableSet<T>	synchronizedNavigableSet	[java.util.NavigableSet]
Collections	java.util.List<T>	synchronizedList	[java.util.List]
Collections	java.util.List<T>	synchronizedList	[java.util.List, java.lang.Object]
Collections	java.util.Map<K, V>	synchronizedMap	[java.util.Map]
Collections	java.util.SortedMap<K, V>	synchronizedSortedMap	[java.util.SortedMap]
Collections	java.util.NavigableMap<K, V>	synchronizedNavigableMap	[java.util.NavigableMap]
Collections	java.util.Collection<E>	checkedCollection	[java.util.Collection, java.lang.Class]
Collections	T[]	zeroLengthArray	[java.lang.Class]
Collections	java.util.Queue<E>	checkedQueue	[java.util.Queue, java.lang.Class]
Collections	java.util.Set<E>	checkedSet	[java.util.Set, java.lang.Class]
Collections	java.util.SortedSet<E>	checkedSortedSet	[java.util.SortedSet, java.lang.Class]
Collections	java.util.NavigableSet<E>	checkedNavigableSet	[java.util.NavigableSet, java.lang.Class]
Collections	java.util.List<E>	checkedList	[java.util.List, java.lang.Class]
Collections	java.util.Map<K, V>	checkedMap	[java.util.Map, java.lang.Class, java.lang.Class]
Collections	java.util.SortedMap<K, V>	checkedSortedMap	[java.util.SortedMap, java.lang.Class, java.lang.Class]
Collections	java.util.NavigableMap<K, V>	checkedNavigableMap	[java.util.NavigableMap, java.lang.Class, java.lang.Class]
Collections	java.util.Iterator<T>	emptyIterator	[]
Collections	java.util.ListIterator<T>	emptyListIterator	[]
Collections	java.util.Enumeration<T>	emptyEnumeration	[]
Collections	java.util.Set<T>	emptySet	[]
Collections	java.util.SortedSet<E>	emptySortedSet	[]
Collections	java.util.NavigableSet<E>	emptyNavigableSet	[]
Collections	java.util.List<T>	emptyList	[]
Collections	java.util.Map<K, V>	emptyMap	[]
Collections	java.util.SortedMap<K, V>	emptySortedMap	[]
Collections	java.util.NavigableMap<K, V>	emptyNavigableMap	[]
Collections	java.util.Set<T>	singleton	[T]
1		java.util.Collections$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	void	remove	[]
1	void	forEachRemaining	[java.util.function.Consumer]
Collections	java.util.Iterator<E>	singletonIterator	[E]
2		java.util.Collections$2	[]
2	java.util.Spliterator<T>	trySplit	[]
2	boolean	tryAdvance	[java.util.function.Consumer]
2	void	forEachRemaining	[java.util.function.Consumer]
2	long	estimateSize	[]
2	int	characteristics	[]
Collections	java.util.Spliterator<T>	singletonSpliterator	[T]
Collections	java.util.List<T>	singletonList	[T]
Collections	java.util.Map<K, V>	singletonMap	[K, V]
Collections	java.util.List<T>	nCopies	[int, T]
Collections	java.util.Comparator<T>	reverseOrder	[]
Collections	java.util.Comparator<T>	reverseOrder	[java.util.Comparator]
3		java.util.Collections$3	[]
3	boolean	hasMoreElements	[]
3	T	nextElement	[]
Collections	java.util.Enumeration<T>	enumeration	[java.util.Collection]
Collections	java.util.ArrayList<T>	list	[java.util.Enumeration]
Collections	boolean	eq	[java.lang.Object, java.lang.Object]
Collections	int	frequency	[java.util.Collection, java.lang.Object]
Collections	boolean	disjoint	[java.util.Collection, java.util.Collection]
Collections	boolean	addAll	[java.util.Collection, T[]]
Collections	java.util.Set<E>	newSetFromMap	[java.util.Map]
Collections	java.util.Queue<T>	asLifoQueue	[java.util.Deque]
LinkedHashSet		java.util.LinkedHashSet	[int, float]
LinkedHashSet		java.util.LinkedHashSet	[int]
LinkedHashSet		java.util.LinkedHashSet	[]
LinkedHashSet		java.util.LinkedHashSet	[java.util.Collection]
LinkedHashSet	java.util.Spliterator<E>	spliterator	[]
StringUtil		org.jsoup.helper.StringUtil	[]
StringUtil	java.lang.String	join	[java.util.Collection, java.lang.String]
StringUtil	java.lang.String	join	[java.util.Iterator, java.lang.String]
StringUtil	java.lang.String	padding	[int]
StringUtil	boolean	isBlank	[java.lang.String]
StringUtil	boolean	isNumeric	[java.lang.String]
StringUtil	boolean	isWhitespace	[int]
StringUtil	java.lang.String	normaliseWhitespace	[java.lang.String]
StringUtil	void	appendNormalisedWhitespace	[java.lang.StringBuilder, java.lang.String, boolean]
StringUtil	boolean	in	[java.lang.String, java.lang.String[]]
StringUtil	boolean	inSorted	[java.lang.String, java.lang.String[]]
StringUtil	java.net.URL	resolve	[java.net.URL, java.lang.String]
StringUtil	java.lang.String	resolve	[java.lang.String, java.lang.String]
Validate		org.jsoup.helper.Validate	[]
Validate	void	notNull	[java.lang.Object]
Validate	void	notNull	[java.lang.Object, java.lang.String]
Validate	void	isTrue	[boolean]
Validate	void	isTrue	[boolean, java.lang.String]
Validate	void	isFalse	[boolean]
Validate	void	isFalse	[boolean, java.lang.String]
Validate	void	noNullElements	[java.lang.Object[]]
Validate	void	noNullElements	[java.lang.Object[], java.lang.String]
Validate	void	notEmpty	[java.lang.String]
Validate	void	notEmpty	[java.lang.String, java.lang.String]
Validate	void	fail	[java.lang.String]
Element		org.jsoup.nodes.Element	[java.lang.String]
Element		org.jsoup.nodes.Element	[org.jsoup.parser.Tag, java.lang.String, org.jsoup.nodes.Attributes]
Element		org.jsoup.nodes.Element	[org.jsoup.parser.Tag, java.lang.String]
Element	java.lang.String	nodeName	[]
Element	java.lang.String	tagName	[]
Element	org.jsoup.nodes.Element	tagName	[java.lang.String]
Element	org.jsoup.parser.Tag	tag	[]
Element	boolean	isBlock	[]
Element	java.lang.String	id	[]
Element	org.jsoup.nodes.Element	attr	[java.lang.String, java.lang.String]
Element	org.jsoup.nodes.Element	attr	[java.lang.String, boolean]
Element	java.util.Map<java.lang.String, java.lang.String>	dataset	[]
Element	org.jsoup.nodes.Element	parent	[]
Element	org.jsoup.select.Elements	parents	[]
Element	void	accumulateParents	[org.jsoup.nodes.Element, org.jsoup.select.Elements]
Element	org.jsoup.nodes.Element	child	[int]
Element	org.jsoup.select.Elements	children	[]
Element	java.util.List<org.jsoup.nodes.TextNode>	textNodes	[]
Element	java.util.List<org.jsoup.nodes.DataNode>	dataNodes	[]
Element	org.jsoup.select.Elements	select	[java.lang.String]
Element	boolean	is	[java.lang.String]
Element	boolean	is	[org.jsoup.select.Evaluator]
Element	org.jsoup.nodes.Element	appendChild	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	prependChild	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	insertChildren	[int, java.util.Collection]
Element	org.jsoup.nodes.Element	appendElement	[java.lang.String]
Element	org.jsoup.nodes.Element	prependElement	[java.lang.String]
Element	org.jsoup.nodes.Element	appendText	[java.lang.String]
Element	org.jsoup.nodes.Element	prependText	[java.lang.String]
Element	org.jsoup.nodes.Element	append	[java.lang.String]
Element	org.jsoup.nodes.Element	prepend	[java.lang.String]
Element	org.jsoup.nodes.Element	before	[java.lang.String]
Element	org.jsoup.nodes.Element	before	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	after	[java.lang.String]
Element	org.jsoup.nodes.Element	after	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	empty	[]
Element	org.jsoup.nodes.Element	wrap	[java.lang.String]
Element	java.lang.String	cssSelector	[]
Element	org.jsoup.select.Elements	siblingElements	[]
Element	org.jsoup.nodes.Element	nextElementSibling	[]
Element	org.jsoup.nodes.Element	previousElementSibling	[]
Element	org.jsoup.nodes.Element	firstElementSibling	[]
Element	java.lang.Integer	elementSiblingIndex	[]
Element	org.jsoup.nodes.Element	lastElementSibling	[]
Element	java.lang.Integer	indexInList	[org.jsoup.nodes.Element, java.util.List]
Element	org.jsoup.select.Elements	getElementsByTag	[java.lang.String]
Element	org.jsoup.nodes.Element	getElementById	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByClass	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttribute	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeStarting	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValue	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueNot	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueStarting	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueEnding	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueContaining	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueMatching	[java.lang.String, java.util.regex.Pattern]
Element	org.jsoup.select.Elements	getElementsByAttributeValueMatching	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByIndexLessThan	[int]
Element	org.jsoup.select.Elements	getElementsByIndexGreaterThan	[int]
Element	org.jsoup.select.Elements	getElementsByIndexEquals	[int]
Element	org.jsoup.select.Elements	getElementsContainingText	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsContainingOwnText	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsMatchingText	[java.util.regex.Pattern]
Element	org.jsoup.select.Elements	getElementsMatchingText	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsMatchingOwnText	[java.util.regex.Pattern]
Element	org.jsoup.select.Elements	getElementsMatchingOwnText	[java.lang.String]
Element	org.jsoup.select.Elements	getAllElements	[]
1		org.jsoup.nodes.Element$1	[]
1	void	head	[org.jsoup.nodes.Node, int]
1	void	tail	[org.jsoup.nodes.Node, int]
Element	java.lang.String	text	[]
Element	java.lang.String	ownText	[]
Element	void	ownText	[java.lang.StringBuilder]
Element	void	appendNormalisedText	[java.lang.StringBuilder, org.jsoup.nodes.TextNode]
Element	void	appendWhitespaceIfBr	[org.jsoup.nodes.Element, java.lang.StringBuilder]
Element	boolean	preserveWhitespace	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	text	[java.lang.String]
Element	boolean	hasText	[]
Element	java.lang.String	data	[]
Element	java.lang.String	className	[]
Element	java.util.Set<java.lang.String>	classNames	[]
Element	org.jsoup.nodes.Element	classNames	[java.util.Set]
Element	boolean	hasClass	[java.lang.String]
Element	org.jsoup.nodes.Element	addClass	[java.lang.String]
Element	org.jsoup.nodes.Element	removeClass	[java.lang.String]
Element	org.jsoup.nodes.Element	toggleClass	[java.lang.String]
Element	java.lang.String	val	[]
Element	org.jsoup.nodes.Element	val	[java.lang.String]
Element	void	outerHtmlHead	[java.lang.Appendable, int, org.jsoup.nodes.Document$OutputSettings]
Element	void	outerHtmlTail	[java.lang.Appendable, int, org.jsoup.nodes.Document$OutputSettings]
Element	java.lang.String	html	[]
Element	void	html	[java.lang.StringBuilder]
Element	T	html	[T extends java.lang.Appendable]
Element	org.jsoup.nodes.Element	html	[java.lang.String]
Element	java.lang.String	toString	[]
Element	org.jsoup.nodes.Element	clone	[]
ParseSettings		org.jsoup.parser.ParseSettings	[boolean, boolean]
ParseSettings	java.lang.String	normalizeTag	[java.lang.String]
ParseSettings	java.lang.String	normalizeAttribute	[java.lang.String]
ParseSettings	org.jsoup.nodes.Attributes	normalizeAttributes	[org.jsoup.nodes.Attributes]
Parser		org.jsoup.parser.Parser	[org.jsoup.parser.TreeBuilder]
Parser	org.jsoup.nodes.Document	parseInput	[java.lang.String, java.lang.String]
Parser	org.jsoup.parser.TreeBuilder	getTreeBuilder	[]
Parser	org.jsoup.parser.Parser	setTreeBuilder	[org.jsoup.parser.TreeBuilder]
Parser	boolean	isTrackErrors	[]
Parser	org.jsoup.parser.Parser	setTrackErrors	[int]
Parser	java.util.List<org.jsoup.parser.ParseError>	getErrors	[]
Parser	org.jsoup.parser.Parser	settings	[org.jsoup.parser.ParseSettings]
Parser	org.jsoup.parser.ParseSettings	settings	[]
Parser	org.jsoup.nodes.Document	parse	[java.lang.String, java.lang.String]
Parser	java.util.List<org.jsoup.nodes.Node>	parseFragment	[java.lang.String, org.jsoup.nodes.Element, java.lang.String]
Parser	java.util.List<org.jsoup.nodes.Node>	parseFragment	[java.lang.String, org.jsoup.nodes.Element, java.lang.String, org.jsoup.parser.ParseErrorList]
Parser	java.util.List<org.jsoup.nodes.Node>	parseXmlFragment	[java.lang.String, java.lang.String]
Parser	org.jsoup.nodes.Document	parseBodyFragment	[java.lang.String, java.lang.String]
Parser	java.lang.String	unescapeEntities	[java.lang.String, boolean]
Parser	org.jsoup.nodes.Document	parseBodyFragmentRelaxed	[java.lang.String, java.lang.String]
Parser	org.jsoup.parser.Parser	htmlParser	[]
Parser	org.jsoup.parser.Parser	xmlParser	[]
Tag		org.jsoup.parser.Tag	[java.lang.String]
Tag	java.lang.String	getName	[]
Tag	org.jsoup.parser.Tag	valueOf	[java.lang.String, org.jsoup.parser.ParseSettings]
Tag	org.jsoup.parser.Tag	valueOf	[java.lang.String]
Tag	boolean	isBlock	[]
Tag	boolean	formatAsBlock	[]
Tag	boolean	canContainBlock	[]
Tag	boolean	isInline	[]
Tag	boolean	isData	[]
Tag	boolean	isEmpty	[]
Tag	boolean	isSelfClosing	[]
Tag	boolean	isKnownTag	[]
Tag	boolean	isKnownTag	[java.lang.String]
Tag	boolean	preserveWhitespace	[]
Tag	boolean	isFormListed	[]
Tag	boolean	isFormSubmittable	[]
Tag	org.jsoup.parser.Tag	setSelfClosing	[]
Tag	boolean	equals	[java.lang.Object]
Tag	int	hashCode	[]
Tag	java.lang.String	toString	[]
Tag	void	register	[org.jsoup.parser.Tag]
Accumulator		org.jsoup.select.Collector$Accumulator	[org.jsoup.nodes.Element, org.jsoup.select.Elements, org.jsoup.select.Evaluator]
Accumulator	void	head	[org.jsoup.nodes.Node, int]
Accumulator	void	tail	[org.jsoup.nodes.Node, int]
Collector		org.jsoup.select.Collector	[]
Collector	org.jsoup.select.Elements	collect	[org.jsoup.select.Evaluator, org.jsoup.nodes.Element]
Elements		org.jsoup.select.Elements	[]
Elements		org.jsoup.select.Elements	[int]
Elements		org.jsoup.select.Elements	[java.util.Collection]
Elements		org.jsoup.select.Elements	[java.util.List]
Elements		org.jsoup.select.Elements	[org.jsoup.nodes.Element[]]
Elements	org.jsoup.select.Elements	clone	[]
Elements	java.lang.String	attr	[java.lang.String]
Elements	boolean	hasAttr	[java.lang.String]
Elements	org.jsoup.select.Elements	attr	[java.lang.String, java.lang.String]
Elements	org.jsoup.select.Elements	removeAttr	[java.lang.String]
Elements	org.jsoup.select.Elements	addClass	[java.lang.String]
Elements	org.jsoup.select.Elements	removeClass	[java.lang.String]
Elements	org.jsoup.select.Elements	toggleClass	[java.lang.String]
Elements	boolean	hasClass	[java.lang.String]
Elements	java.lang.String	val	[]
Elements	org.jsoup.select.Elements	val	[java.lang.String]
Elements	java.lang.String	text	[]
Elements	boolean	hasText	[]
Elements	java.lang.String	html	[]
Elements	java.lang.String	outerHtml	[]
Elements	java.lang.String	toString	[]
Elements	org.jsoup.select.Elements	tagName	[java.lang.String]
Elements	org.jsoup.select.Elements	html	[java.lang.String]
Elements	org.jsoup.select.Elements	prepend	[java.lang.String]
Elements	org.jsoup.select.Elements	append	[java.lang.String]
Elements	org.jsoup.select.Elements	before	[java.lang.String]
Elements	org.jsoup.select.Elements	after	[java.lang.String]
Elements	org.jsoup.select.Elements	wrap	[java.lang.String]
Elements	org.jsoup.select.Elements	unwrap	[]
Elements	org.jsoup.select.Elements	empty	[]
Elements	org.jsoup.select.Elements	remove	[]
Elements	org.jsoup.select.Elements	select	[java.lang.String]
Elements	org.jsoup.select.Elements	not	[java.lang.String]
Elements	org.jsoup.select.Elements	eq	[int]
Elements	boolean	is	[java.lang.String]
Elements	org.jsoup.select.Elements	next	[]
Elements	org.jsoup.select.Elements	next	[java.lang.String]
Elements	org.jsoup.select.Elements	nextAll	[]
Elements	org.jsoup.select.Elements	nextAll	[java.lang.String]
Elements	org.jsoup.select.Elements	prev	[]
Elements	org.jsoup.select.Elements	prev	[java.lang.String]
Elements	org.jsoup.select.Elements	prevAll	[]
Elements	org.jsoup.select.Elements	prevAll	[java.lang.String]
Elements	org.jsoup.select.Elements	siblings	[java.lang.String, boolean, boolean]
Elements	org.jsoup.select.Elements	parents	[]
Elements	org.jsoup.nodes.Element	first	[]
Elements	org.jsoup.nodes.Element	last	[]
Elements	org.jsoup.select.Elements	traverse	[org.jsoup.select.NodeVisitor]
Elements	java.util.List<org.jsoup.nodes.FormElement>	forms	[]
Tag		org.jsoup.select.Evaluator$Tag	[java.lang.String]
Tag	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
Tag	java.lang.String	toString	[]
TagEndsWith		org.jsoup.select.Evaluator$TagEndsWith	[java.lang.String]
TagEndsWith	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
TagEndsWith	java.lang.String	toString	[]
Id		org.jsoup.select.Evaluator$Id	[java.lang.String]
Id	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
Id	java.lang.String	toString	[]
Class		org.jsoup.select.Evaluator$Class	[java.lang.String]
Class	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
Class	java.lang.String	toString	[]
Attribute		org.jsoup.select.Evaluator$Attribute	[java.lang.String]
Attribute	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
Attribute	java.lang.String	toString	[]
AttributeStarting		org.jsoup.select.Evaluator$AttributeStarting	[java.lang.String]
AttributeStarting	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AttributeStarting	java.lang.String	toString	[]
AttributeWithValue		org.jsoup.select.Evaluator$AttributeWithValue	[java.lang.String, java.lang.String]
AttributeWithValue	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AttributeWithValue	java.lang.String	toString	[]
AttributeWithValueNot		org.jsoup.select.Evaluator$AttributeWithValueNot	[java.lang.String, java.lang.String]
AttributeWithValueNot	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AttributeWithValueNot	java.lang.String	toString	[]
AttributeWithValueStarting		org.jsoup.select.Evaluator$AttributeWithValueStarting	[java.lang.String, java.lang.String]
AttributeWithValueStarting	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AttributeWithValueStarting	java.lang.String	toString	[]
AttributeWithValueEnding		org.jsoup.select.Evaluator$AttributeWithValueEnding	[java.lang.String, java.lang.String]
AttributeWithValueEnding	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AttributeWithValueEnding	java.lang.String	toString	[]
AttributeWithValueContaining		org.jsoup.select.Evaluator$AttributeWithValueContaining	[java.lang.String, java.lang.String]
AttributeWithValueContaining	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AttributeWithValueContaining	java.lang.String	toString	[]
AttributeWithValueMatching		org.jsoup.select.Evaluator$AttributeWithValueMatching	[java.lang.String, java.util.regex.Pattern]
AttributeWithValueMatching	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AttributeWithValueMatching	java.lang.String	toString	[]
AttributeKeyPair		org.jsoup.select.Evaluator$AttributeKeyPair	[java.lang.String, java.lang.String]
AllElements		org.jsoup.select.Evaluator$AllElements	[]
AllElements	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
AllElements	java.lang.String	toString	[]
IndexLessThan		org.jsoup.select.Evaluator$IndexLessThan	[int]
IndexLessThan	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IndexLessThan	java.lang.String	toString	[]
IndexGreaterThan		org.jsoup.select.Evaluator$IndexGreaterThan	[int]
IndexGreaterThan	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IndexGreaterThan	java.lang.String	toString	[]
IndexEquals		org.jsoup.select.Evaluator$IndexEquals	[int]
IndexEquals	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IndexEquals	java.lang.String	toString	[]
IsLastChild		org.jsoup.select.Evaluator$IsLastChild	[]
IsLastChild	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsLastChild	java.lang.String	toString	[]
IsFirstOfType		org.jsoup.select.Evaluator$IsFirstOfType	[]
IsFirstOfType	java.lang.String	toString	[]
IsLastOfType		org.jsoup.select.Evaluator$IsLastOfType	[]
IsLastOfType	java.lang.String	toString	[]
CssNthEvaluator		org.jsoup.select.Evaluator$CssNthEvaluator	[int, int]
CssNthEvaluator		org.jsoup.select.Evaluator$CssNthEvaluator	[int]
CssNthEvaluator	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
CssNthEvaluator	java.lang.String	toString	[]
CssNthEvaluator	java.lang.String	getPseudoClass	[]
CssNthEvaluator	int	calculatePosition	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsNthChild		org.jsoup.select.Evaluator$IsNthChild	[int, int]
IsNthChild	int	calculatePosition	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsNthChild	java.lang.String	getPseudoClass	[]
IsNthLastChild		org.jsoup.select.Evaluator$IsNthLastChild	[int, int]
IsNthLastChild	int	calculatePosition	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsNthLastChild	java.lang.String	getPseudoClass	[]
IsNthOfType		org.jsoup.select.Evaluator$IsNthOfType	[int, int]
IsNthOfType	int	calculatePosition	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsNthOfType	java.lang.String	getPseudoClass	[]
IsNthLastOfType		org.jsoup.select.Evaluator$IsNthLastOfType	[int, int]
IsNthLastOfType	int	calculatePosition	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsNthLastOfType	java.lang.String	getPseudoClass	[]
IsFirstChild		org.jsoup.select.Evaluator$IsFirstChild	[]
IsFirstChild	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsFirstChild	java.lang.String	toString	[]
IsRoot		org.jsoup.select.Evaluator$IsRoot	[]
IsRoot	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsRoot	java.lang.String	toString	[]
IsOnlyChild		org.jsoup.select.Evaluator$IsOnlyChild	[]
IsOnlyChild	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsOnlyChild	java.lang.String	toString	[]
IsOnlyOfType		org.jsoup.select.Evaluator$IsOnlyOfType	[]
IsOnlyOfType	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsOnlyOfType	java.lang.String	toString	[]
IsEmpty		org.jsoup.select.Evaluator$IsEmpty	[]
IsEmpty	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
IsEmpty	java.lang.String	toString	[]
IndexEvaluator		org.jsoup.select.Evaluator$IndexEvaluator	[int]
ContainsText		org.jsoup.select.Evaluator$ContainsText	[java.lang.String]
ContainsText	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
ContainsText	java.lang.String	toString	[]
ContainsData		org.jsoup.select.Evaluator$ContainsData	[java.lang.String]
ContainsData	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
ContainsData	java.lang.String	toString	[]
ContainsOwnText		org.jsoup.select.Evaluator$ContainsOwnText	[java.lang.String]
ContainsOwnText	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
ContainsOwnText	java.lang.String	toString	[]
Matches		org.jsoup.select.Evaluator$Matches	[java.util.regex.Pattern]
Matches	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
Matches	java.lang.String	toString	[]
MatchesOwn		org.jsoup.select.Evaluator$MatchesOwn	[java.util.regex.Pattern]
MatchesOwn	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
MatchesOwn	java.lang.String	toString	[]
Evaluator		org.jsoup.select.Evaluator	[]
Evaluator	boolean	matches	[org.jsoup.nodes.Element, org.jsoup.nodes.Element]
NodeTraversor		org.jsoup.select.NodeTraversor	[org.jsoup.select.NodeVisitor]
NodeTraversor	void	traverse	[org.jsoup.nodes.Node]
QueryParser		org.jsoup.select.QueryParser	[java.lang.String]
QueryParser	org.jsoup.select.Evaluator	parse	[java.lang.String]
QueryParser	org.jsoup.select.Evaluator	parse	[]
QueryParser	void	combinator	[char]
QueryParser	java.lang.String	consumeSubQuery	[]
QueryParser	void	findElements	[]
QueryParser	void	byId	[]
QueryParser	void	byClass	[]
QueryParser	void	byTag	[]
QueryParser	void	byAttribute	[]
QueryParser	void	allElements	[]
QueryParser	void	indexLessThan	[]
QueryParser	void	indexGreaterThan	[]
QueryParser	void	indexEquals	[]
QueryParser	void	cssNthChild	[boolean, boolean]
QueryParser	int	consumeIndex	[]
QueryParser	void	has	[]
QueryParser	void	contains	[boolean]
QueryParser	void	containsData	[]
QueryParser	void	matches	[boolean]
QueryParser	void	not	[]
SelectorParseException		org.jsoup.select.Selector$SelectorParseException	[java.lang.String, java.lang.Object[]]
Selector		org.jsoup.select.Selector	[java.lang.String, org.jsoup.nodes.Element]
Selector		org.jsoup.select.Selector	[org.jsoup.select.Evaluator, org.jsoup.nodes.Element]
Selector	org.jsoup.select.Elements	select	[java.lang.String, org.jsoup.nodes.Element]
Selector	org.jsoup.select.Elements	select	[org.jsoup.select.Evaluator, org.jsoup.nodes.Element]
Selector	org.jsoup.select.Elements	select	[java.lang.String, java.lang.Iterable]
Selector	org.jsoup.select.Elements	select	[]
Selector	org.jsoup.select.Elements	filterOut	[java.util.Collection, java.util.Collection]
