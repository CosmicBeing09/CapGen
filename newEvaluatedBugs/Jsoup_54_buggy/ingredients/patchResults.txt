org.jsoup.select.Selector::::428::::19531::::19533::::msg::::query	false
org.jsoup.select.Selector::::149::::9327::::9350::::filterForGeneralSiblings::::filterForAdjacentSiblings	false
org.jsoup.select.Selector::::149::::9327::::9350::::filterForGeneralSiblings::::filterForDescendants	false
org.jsoup.select.Selector::::148::::9287::::9303::::combinator == '~'::::combinator == '>'	false
org.jsoup.select.Selector::::148::::9287::::9303::::combinator == '~'::::combinator == '+'	false
org.jsoup.select.Selector::::148::::9287::::9303::::combinator == '~'::::combinator == ' '	false
org.jsoup.select.Selector::::149::::9327::::9350::::filterForGeneralSiblings::::filterForChildren	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::149::::9369::::9376::::subQuery::::query	false
org.jsoup.select.Selector::::146::::9169::::9185::::combinator == '+'::::combinator == '>'	false
org.jsoup.select.Selector::::146::::9169::::9185::::combinator == '+'::::combinator == ' '	false
org.jsoup.select.Selector::::428::::19531::::19533::::msg::::this.query	false
org.jsoup.select.Selector::::338::::16397::::16397::::p::::c	false
org.jsoup.select.Selector::::337::::16357::::16363::::parents::::candidates	false
org.jsoup.select.Selector::::145::::9123::::9148::::org.jsoup.select.Selector.select(subQuery, elements)::::org.jsoup.select.Selector.select(subQuery,root)	false
org.jsoup.select.Selector::::145::::9092::::9111::::filterForDescendants::::filterForGeneralSiblings	false
org.jsoup.select.Selector::::145::::9092::::9111::::filterForDescendants::::filterForAdjacentSiblings	false
org.jsoup.select.Selector::::145::::9092::::9111::::filterForDescendants::::filterForChildren	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::not	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::indexLessThan	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::indexGreaterThan	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::indexEquals	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::has	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::allElements	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::tq	false
org.jsoup.select.Selector::::231::::12141::::12142::::cq::::tq	false
org.jsoup.select.Selector::::229::::12000::::12001::::cq::::tq	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::select	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::byTag	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::144::::9052::::9068::::combinator == ' '::::combinator == '>'	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::byClass	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"="	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"="	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"!="	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"!="	false
org.jsoup.select.Selector::::149::::9327::::9350::::filterForGeneralSiblings::::filterForParentsOfDescendants	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::byId	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"^="	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"^="	false
org.jsoup.select.Selector::::146::::9169::::9185::::combinator == '+'::::combinator == '~'	false
org.jsoup.select.Selector::::149::::9327::::9350::::filterForGeneralSiblings::::filterForSelf	false
org.jsoup.select.Selector::::145::::9130::::9137::::subQuery::::query	false
org.jsoup.select.Selector::::400::::18646::::18646::::p::::c	false
org.jsoup.select.Selector::::399::::18606::::18612::::parents::::candidates	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::select	false
org.jsoup.select.Elements::::438::::13360::::13367::::contains::::remove	false
org.jsoup.select.Elements::::438::::13360::::13367::::contains::::lastIndexOf	false
org.jsoup.select.Elements::::438::::13360::::13367::::contains::::indexOf	false
org.jsoup.select.Elements::::438::::13360::::13367::::contains::::equals	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"$="	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"$="	false
org.jsoup.select.Selector::::338::::16397::::16397::::p::::root	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"*="	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"*="	false
org.jsoup.select.Selector::::149::::9327::::9350::::filterForGeneralSiblings::::filterOut	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::consumeIndex	false
org.jsoup.select.Selector::::342::::16496::::16496::::c::::root	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::root	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"~="	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"~="	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::144::::9052::::9068::::combinator == ' '::::combinator == '+'	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::findElements	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::165::::9848::::9858::::byAttribute::::findElements	false
org.jsoup.select.Selector::::400::::18646::::18646::::p::::root	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::query	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::query	false
org.jsoup.select.Selector::::234::::12319::::12321::::key::::query	false
org.jsoup.select.Selector::::131::::8619::::8631::::filterForSelf::::filterForGeneralSiblings	false
org.jsoup.select.Selector::::131::::8619::::8631::::filterForSelf::::filterForAdjacentSiblings	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::not	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::indexLessThan	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::indexGreaterThan	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::indexEquals	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::has	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::byAttribute	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::allElements	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::select	false
org.jsoup.select.Selector::::131::::8619::::8631::::filterForSelf::::filterForDescendants	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::size	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::listIterator	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::isEmpty	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::hashCode	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":has("	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":has("	false
org.jsoup.select.Selector::::131::::8619::::8631::::filterForSelf::::filterForParentsOfDescendants	false
org.jsoup.select.Selector::::142::::8938::::8954::::combinator == '>'::::combinator == ' '	false
org.jsoup.select.Selector::::336::::16314::::16323::::candidates::::parents	false
org.jsoup.select.Selector::::131::::8619::::8631::::filterForSelf::::filterForChildren	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::root	false
org.jsoup.select.Selector::::401::::18685::::18685::::c::::root	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::select	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::byClass	false
org.jsoup.select.Selector::::131::::8619::::8631::::filterForSelf::::filterOut	false
org.jsoup.select.Selector::::230::::12127::::12129::::key::::query	false
org.jsoup.select.Selector::::131::::8643::::8652::::candidates::::org.jsoup.select.Selector.filterForSelf(elements, candidates)	false
org.jsoup.select.Selector::::224::::11840::::11846::::tagName::::query	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::query	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::","	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::","	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::toArray	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"#"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"#"	false
org.jsoup.select.Selector::::219::::11610::::11616::::tagName::::query	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::findElements	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::byId	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"."	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"."	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"~="	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"^="	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"="	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"*="	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"$="	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"!="	false
org.jsoup.select.Selector::::145::::9092::::9111::::filterForDescendants::::filterForParentsOfDescendants	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"["	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"["	false
org.jsoup.select.NodeTraversor::::16::::306::::309::::root::::node	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::consumeIndex	false
org.jsoup.select.Selector::::142::::8938::::8954::::combinator == '>'::::combinator == '+'	false
org.jsoup.select.Selector::::144::::9052::::9068::::combinator == ' '::::combinator == '~'	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::size	false
org.jsoup.select.Collector::::40::::1182::::1185::::(org.jsoup.nodes.Element) (node)::::node	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"*"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"*"	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::148::::9283::::9480::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::148::::9283::::9480::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::148::::9283::::9480::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::148::::9283::::9480::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::145::::9092::::9111::::filterForDescendants::::filterForSelf	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":lt("	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":lt("	false
org.jsoup.select.NodeTraversor::::21::::430::::457::::(node.childNodes().size()) > 0::::node != null	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::","	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":gt("	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":gt("	false
org.jsoup.select.NodeTraversor::::25::::573::::598::::(node.nextSibling()) == null::::node != null	false
org.jsoup.select.Selector::::398::::18563::::18572::::candidates::::parents	false
org.jsoup.select.Selector::::128::::8424::::8439::::combinator(' ')::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::toString	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":has("	false
org.jsoup.select.Selector::::163::::9782::::9786::::byTag::::findElements	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::isEmpty	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":eq("	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":eq("	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::findElements	false
org.jsoup.select.Selector::::145::::9092::::9111::::filterForDescendants::::filterOut	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"|"	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::output	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::output	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::consumeIndex	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"#"	false
org.jsoup.select.Selector::::142::::8938::::8954::::combinator == '>'::::combinator == '~'	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":contains("	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"."	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":contains("	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::hasText	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::clear	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"["	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::consumeIndex	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::p	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::consumeIndex	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"*"	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":lt("	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":containsOwn("	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":gt("	false
org.jsoup.select.Selector::::342::::16496::::16496::::c::::p	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"="	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":containsOwn("	false
org.jsoup.select.NodeTraversor::::31::::815::::826::::node == root::::node != null	false
org.jsoup.select.Selector::::146::::9165::::9480::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::146::::9165::::9480::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::146::::9165::::9480::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"!="	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":eq("	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::findElements()	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"^="	false
org.jsoup.select.Selector::::131::::8601::::8655::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::113::::7807::::7817::::addElements::::intersectElements	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::new org.jsoup.select.Elements()	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::text	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::outerHtml	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::html	false
org.jsoup.select.NodeTraversor::::25::::573::::611::::(node.nextSibling()) == null) && (depth > 0::::node != null	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"$="	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::toString	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":contains("	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::196::::10996::::11025::::elements.retainAll(intersect)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::196::::10996::::11025::::elements.retainAll(intersect)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":matches("	false
org.jsoup.select.Selector::::130::::8513::::8549::::org.jsoup.select.Elements candidates = findElements()::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"*="	false
org.jsoup.select.Elements::::440::::13432::::13439::::iterator::::parents	false
org.jsoup.select.Elements::::422::::12893::::12895::::get::::remove	false
org.jsoup.select.Elements::::422::::12893::::12895::::get::::listIterator	false
org.jsoup.select.Selector::::128::::8424::::8439::::combinator(' ')::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::new org.jsoup.select.Elements()	false
org.jsoup.select.Elements::::438::::13353::::13380::::return contents.contains(o)::::INSERT::::STATEMENT::::contents.clear()	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"|"	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::toString	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":containsOwn("	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"~="	false
org.jsoup.select.Selector::::149::::9369::::9376::::subQuery::::this.query	false
org.jsoup.select.Selector::::231::::12141::::12163::::cq.consumeWhitespace()::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::230::::12109::::12131::::org.jsoup.helper.Validate.notEmpty(key)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::consumeIndex	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":matches("	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":matches("	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::p	false
org.jsoup.select.Selector::::144::::9048::::9480::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::144::::9048::::9480::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"|"	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::not	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::indexLessThan	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::indexGreaterThan	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::indexEquals	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::has	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::byTag	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::byId	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::byClass	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::byAttribute	false
org.jsoup.select.Selector::::99::::7368::::7373::::select::::allElements	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":containsOwn"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":contains"	false
org.jsoup.select.Elements::::440::::13425::::13451::::return contents.iterator()::::INSERT::::STATEMENT::::contents.clear()	false
org.jsoup.select.Selector::::401::::18685::::18685::::c::::p	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":matchesOwn"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":matches"	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::findElements()	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":containsOwn"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":contains"	false
org.jsoup.select.Selector::::153::::9517::::9540::::elements.addAll(output)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":matchesOwn("	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::consumeIndex	false
org.jsoup.select.Selector::::113::::7807::::7834::::addElements(findElements())::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::95::::7205::::7228::::org.jsoup.helper.Validate.notNull(roots)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":matchesOwn("	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":not"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":has"	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.select(subQuery, root)	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"^"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::")"	false
org.jsoup.select.Selector::::187::::10689::::10800::::throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder())::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::192::::10887::::10907::::elements.addAll(add)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::192::::10887::::10907::::elements.addAll(add)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::127::::8395::::8403::::seenWhite::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::196::::10996::::11025::::elements.retainAll(intersect)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":matchesOwn"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":matches"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":not(selector) subselect must not be empty"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":matches(regex) query must not be empty"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":has(el) subselect must not be empty"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":contains(text) query must not be empty"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::165::::9841::::9861::::return byAttribute()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::findElements()	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":containsOwn"	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":contains"	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"Index must be numeric"	false
org.jsoup.select.Selector::::130::::8513::::8549::::org.jsoup.select.Elements candidates = findElements()::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::131::::8601::::8617::::intersectElements::::addElements	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::children	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::this	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":not"	false
org.jsoup.select.Selector::::127::::8395::::8403::::seenWhite::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::127::::8391::::8669::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Elements::::434::::13229::::13251::::return contents.size()::::INSERT::::STATEMENT::::contents.clear()	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::children	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":not("	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":matchesOwn("	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":contains(text) query must not be empty"	false
org.jsoup.select.Selector::::128::::8424::::8439::::combinator(' ')::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::145::::9123::::9148::::org.jsoup.select.Selector.select(subQuery, elements)::::org.jsoup.select.Selector.select(subQuery,this.root)	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":not(selector) subselect must not be empty"	false
org.jsoup.select.NodeTraversor::::23::::520::::527::::depth++::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":matchesOwn"	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":matches"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"^"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":has"	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.select(subQuery, root)	false
org.jsoup.select.NodeTraversor::::23::::520::::527::::depth++::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::":"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::")"	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":matches(regex) query must not be empty"	false
org.jsoup.select.Selector::::67::::6367::::6387::::query = query.trim()::::this.query = query	false
org.jsoup.select.Selector::::165::::9841::::9861::::return byAttribute()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":not"	false
org.jsoup.select.Selector::::145::::9130::::9137::::subQuery::::this.query	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":has(el) subselect must not be empty"	false
org.jsoup.select.NodeTraversor::::25::::573::::611::::(node.nextSibling()) == null) && (depth > 0::::node == root	false
org.jsoup.select.Selector::::128::::8424::::8439::::combinator(' ')::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::131::::8601::::8655::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::text	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::outerHtml	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::html	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::text	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::outerHtml	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::html	false
org.jsoup.select.Selector::::134::::8689::::8718::::return new org.jsoup.select.Elements(elements)::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::128::::8424::::8439::::combinator(' ')::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::146::::9165::::9480::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":contains(text) query must not be empty"	false
org.jsoup.select.Selector::::126::::8346::::8370::::combinator(tq.consume())::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Elements::::446::::13621::::13649::::return contents.add(element)::::INSERT::::STATEMENT::::contents.clear()	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"Index must be numeric"	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"^"	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":not(selector) subselect must not be empty"	false
org.jsoup.select.Selector::::144::::9048::::9480::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::219::::11592::::11618::::org.jsoup.helper.Validate.notEmpty(tagName)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":has"	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::192::::10887::::10907::::elements.addAll(add)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":has("	false
org.jsoup.select.Selector::::113::::7807::::7834::::addElements(findElements())::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::listIterator	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::")"	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":matches(regex) query must not be empty"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::","	false
org.jsoup.select.NodeTraversor::::21::::430::::457::::(node.childNodes().size()) > 0::::node == root	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"."	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":has(el) subselect must not be empty"	false
org.jsoup.select.Selector::::234::::12206::::12323::::return key.startsWith("^") ? root.getElementsByAttributeStarting(key.substring(1)) : root.getElementsByAttribute(key)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"#"	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.select(subQuery, elements)	false
org.jsoup.select.Selector::::120::::8069::::8086::::tq.matchChomp(",")::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::74::::6572::::6603::::this.tq = new org.jsoup.parser.TokenQueue(query)::::this.query = query	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"Index must be numeric"	false
org.jsoup.select.Selector::::127::::8391::::8669::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::120::::8069::::8086::::tq.matchChomp(",")::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":not("	false
org.jsoup.select.Selector::::126::::8346::::8370::::combinator(tq.consume())::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Elements::::20::::490::::533::::contents = new java.util.ArrayList<org.jsoup.nodes.Element>(elements)::::contents = new java.util.ArrayList<org.jsoup.nodes.Element>()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"Could not parse attribute query '%s': unexpected token at '%s'"	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.NodeTraversor::::25::::573::::598::::(node.nextSibling()) == null::::node == root	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Collector::::42::::1250::::1257::::elements::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::163::::9775::::9789::::return byTag()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9517::::9540::::elements.addAll(output)::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::153::::9499::::9515::::elements.clear()::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::142::::8934::::9480::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::139::::8818::::8864::::java.lang.String subQuery = tq.consumeToAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::131::::8601::::8655::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::not	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::indexEquals	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::has	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"["	false
org.jsoup.select.Selector::::72::::6518::::6536::::this.query = query::::this.tq = new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::indexGreaterThan	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::listIterator	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::indexLessThan	false
org.jsoup.select.Selector::::153::::9517::::9540::::elements.addAll(output)::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::139::::8818::::8864::::java.lang.String subQuery = tq.consumeToAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::139::::8818::::8864::::java.lang.String subQuery = tq.consumeToAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::184::::10598::::10616::::tq.matches(":not(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::allElements	false
org.jsoup.select.Collector::::41::::1208::::1211::::eval::::this.eval	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::not	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::indexLessThan	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::indexGreaterThan	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::indexEquals	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::has	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::allElements	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"*"	false
org.jsoup.select.Collector::::25::::674::::739::::new org.jsoup.select.NodeTraversor(new org.jsoup.select.Collector.Accumulator(elements, eval)).traverse(root)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::228::::11933::::11934::::tq::::cq	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.select(subQuery, elements)	false
org.jsoup.select.Selector::::224::::11840::::11846::::tagName::::this.query	false
org.jsoup.select.Selector::::230::::12109::::12131::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":not("	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::this.query	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::byAttribute	false
org.jsoup.select.Selector::::187::::10689::::10800::::throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder())::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::byAttribute	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::byTag	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":lt("	false
org.jsoup.select.NodeTraversor::::32::::849::::854::::break::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.NodeTraversor::::31::::811::::854::::if (node == root)    break;::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::byTag	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::byClass	false
org.jsoup.select.Collector::::42::::1250::::1257::::elements::::this.elements	false
org.jsoup.select.Selector::::163::::9775::::9789::::return byTag()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::113::::7807::::7834::::addElements(findElements())::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::224::::11811::::11848::::return root.getElementsByTag(tagName)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::224::::11811::::11848::::return root.getElementsByTag(tagName)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::219::::11592::::11618::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::iterator	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::hashCode	false
org.jsoup.select.Elements::::422::::12865::::12907::::contents.isEmpty() ? null : contents.get(0)::::contents.isEmpty() ? null : contents.get(((contents.size()) - 1))	false
org.jsoup.select.Elements::::422::::12865::::12907::::contents.isEmpty() ? null : contents.get(0)::::contents.get(0)	false
org.jsoup.select.Elements::::422::::12865::::12907::::contents.isEmpty() ? null : contents.get(0)::::contents.get(((contents.size()) - 1))	false
org.jsoup.select.Selector::::95::::7205::::7228::::org.jsoup.helper.Validate.notNull(roots)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::95::::7205::::7228::::org.jsoup.helper.Validate.notNull(roots)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9517::::9540::::elements.addAll(output)::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::149::::9362::::9367::::select::::byId	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::byClass	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::182::::10515::::10540::::tq.matches(":matchesOwn(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::218::::11538::::11582::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":gt("	false
org.jsoup.select.Selector::::125::::8300::::8325::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::138::::8786::::8808::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::130::::8535::::8546::::findElements::::byId	false
org.jsoup.select.Selector::::110::::7699::::7886::::if (tq.matches(":has(")) {    elements.addAll(root.getAllElements());}else {    addElements(findElements());}::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::84::::6860::::6901::::return new org.jsoup.select.Selector(query, root).select()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::84::::6860::::6901::::return new org.jsoup.select.Selector(query, root).select()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::not()	false
org.jsoup.select.Selector::::139::::8818::::8864::::java.lang.String subQuery = tq.consumeToAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::234::::12213::::12322::::key.startsWith("^") ? root.getElementsByAttributeStarting(key.substring(1)) : root.getElementsByAttribute(key)::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.NodeTraversor::::19::::359::::370::::node != null::::node == root	false
org.jsoup.select.Selector::::67::::6367::::6387::::query = query.trim()::::this.tq = new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::148::::9283::::9480::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::toArray	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::153::::9499::::9515::::elements.clear()::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::has()	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":eq("	false
org.jsoup.select.Elements::::422::::12858::::12908::::return contents.isEmpty() ? null : contents.get(0)::::INSERT::::STATEMENT::::contents.clear()	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::indexEquals()	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::indexGreaterThan()	false
org.jsoup.select.Selector::::113::::7807::::7834::::addElements(findElements())::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::not	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::indexLessThan	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::indexGreaterThan	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::indexEquals	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::has	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::byTag	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::byAttribute	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::allElements	false
org.jsoup.select.Selector::::234::::12206::::12323::::return key.startsWith("^") ? root.getElementsByAttributeStarting(key.substring(1)) : root.getElementsByAttribute(key)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::matches(true)	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::indexLessThan()	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::parents	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::iterator	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::hashCode	false
org.jsoup.select.Selector::::110::::7699::::7886::::if (tq.matches(":has(")) {    elements.addAll(root.getAllElements());}else {    addElements(findElements());}::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::125::::8296::::8669::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    combinator(tq.consume());}else    if (seenWhite) {        combinator(' ');    }else {        org.jsoup.select.Elements candidates = findElements();        intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));    }::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::matches(false)	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::allElements()	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::this.root = root	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::180::::10434::::10456::::tq.matches(":matches(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::231::::12141::::12163::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::contains(true)	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::byAttribute()	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::byClass	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::contains(false)	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::byTag()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"Could not parse query '%s': unexpected token at '%s'"	false
org.jsoup.select.Elements::::438::::13360::::13367::::contents::::this	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::byClass()	false
org.jsoup.select.Selector::::138::::8786::::8808::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::96::::7238::::7300::::java.util.LinkedHashSet<org.jsoup.nodes.Element> elements = new java.util.LinkedHashSet<org.jsoup.nodes.Element>()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::96::::7238::::7300::::java.util.LinkedHashSet<org.jsoup.nodes.Element> elements = new java.util.LinkedHashSet<org.jsoup.nodes.Element>()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::342::::16483::::16490::::children::::byId()	false
org.jsoup.select.Selector::::145::::9123::::9128::::select::::byId	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::matches(true)	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::matches(false)	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::contains(true)	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::contains(false)	false
org.jsoup.select.Selector::::222::::11727::::11801::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::219::::11592::::11618::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::107::::7527::::7886::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    elements.add(root);    combinator(tq.consume());}else    if (tq.matches(":has(")) {        elements.addAll(root.getAllElements());    }else {        addElements(findElements());    }::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::153::::9499::::9515::::elements.clear()::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::toArray	false
org.jsoup.select.Selector::::218::::11538::::11582::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::not	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::indexLessThan	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::indexGreaterThan	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::indexEquals	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::has	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::allElements	false
org.jsoup.select.Selector::::178::::10349::::10375::::tq.matches(":containsOwn(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::184::::10594::::10810::::if (tq.matches(":not(")) {    return not();}else {    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::not()	false
org.jsoup.select.Selector::::130::::8513::::8549::::org.jsoup.select.Elements candidates = findElements()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::229::::11987::::12050::::java.lang.String key = cq.consumeToAny("=", "!=", "^=", "$=", "*=", "~=")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::107::::7531::::7556::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::byAttribute	false
org.jsoup.select.Selector::::228::::11902::::11960::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::335::::16246::::16280::::org.jsoup.select.Elements children = new org.jsoup.select.Elements()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":contains("	false
org.jsoup.select.Selector::::125::::8300::::8325::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::139::::8818::::8864::::java.lang.String subQuery = tq.consumeToAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::222::::11731::::11751::::tagName.contains("|")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"Could not parse attribute query '%s': unexpected token at '%s'"	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::parents	false
org.jsoup.select.Selector::::131::::8601::::8655::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::byTag	false
org.jsoup.select.Selector::::142::::8934::::9480::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::125::::8296::::8669::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    combinator(tq.consume());}else    if (seenWhite) {        combinator(' ');    }else {        org.jsoup.select.Elements candidates = findElements();        intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));    }::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::113::::7807::::7834::::addElements(findElements())::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::149::::9318::::9385::::output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))::::this.elements = new java.util.LinkedHashSet<org.jsoup.nodes.Element>()	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::byClass	false
org.jsoup.select.Selector::::105::::7486::::7508::::tq.consumeWhitespace()::::DELETE::::STATEMENT	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::clear	false
org.jsoup.select.Selector::::139::::8818::::8864::::java.lang.String subQuery = tq.consumeToAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::335::::16246::::16280::::org.jsoup.select.Elements children = new org.jsoup.select.Elements()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::230::::12109::::12131::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"|"	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::has()	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::not()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::has()	false
org.jsoup.select.Selector::::153::::9517::::9540::::elements.addAll(output)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9499::::9515::::elements.clear()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::126::::8346::::8370::::combinator(tq.consume())::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::113::::7819::::7830::::findElements::::byId	false
org.jsoup.select.NodeTraversor::::23::::520::::527::::depth++::::DELETE::::STATEMENT	false
org.jsoup.select.Collector::::42::::1250::::1266::::elements.add(el)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::indexEquals()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::indexEquals()	false
org.jsoup.select.Selector::::98::::7311::::7398::::for (org.jsoup.nodes.Element root : roots) {    elements.addAll(org.jsoup.select.Selector.select(query, root));}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::98::::7311::::7398::::for (org.jsoup.nodes.Element root : roots) {    elements.addAll(org.jsoup.select.Selector.select(query, root));}::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::138::::8786::::8808::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::indexGreaterThan()	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::matches(true)	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::indexGreaterThan()	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::clear	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":containsOwn("	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::indexLessThan()	false
org.jsoup.select.Selector::::153::::9517::::9540::::elements.addAll(output)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9499::::9515::::elements.clear()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::matches(false)	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::indexLessThan()	false
org.jsoup.select.Selector::::184::::10598::::10616::::tq.matches(":not(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::144::::9048::::9480::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::allElements()	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::contains(true)	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::allElements()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::byAttribute()	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::contains(false)	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::byAttribute()	false
org.jsoup.select.Selector::::131::::8601::::8655::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::230::::12127::::12129::::key::::this.query	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::byTag()	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"Could not parse attribute query '%s': unexpected token at '%s'"	false
org.jsoup.select.Selector::::176::::10266::::10289::::tq.matches(":contains(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::this.query	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::byTag()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::byClass()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::94::::7171::::7195::::org.jsoup.helper.Validate.notEmpty(query)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::153::::9517::::9540::::elements.addAll(output)::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::byClass()	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::byId()	false
org.jsoup.select.Selector::::130::::8513::::8549::::org.jsoup.select.Elements candidates = findElements()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::219::::11610::::11616::::tagName::::this.query	false
org.jsoup.select.Selector::::127::::8395::::8403::::seenWhite::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::94::::7171::::7195::::org.jsoup.helper.Validate.notEmpty(query)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::94::::7171::::7195::::org.jsoup.helper.Validate.notEmpty(query)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.NodeTraversor::::27::::690::::693::::node::::root	false
org.jsoup.select.NodeTraversor::::25::::573::::576::::node::::root	false
org.jsoup.select.Selector::::401::::18672::::18679::::children::::byId()	false
org.jsoup.select.NodeTraversor::::26::::649::::652::::node::::root	false
org.jsoup.select.Elements::::440::::13432::::13439::::contents::::this	false
org.jsoup.select.Selector::::182::::10515::::10540::::tq.matches(":matchesOwn(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::findElements()	false
org.jsoup.select.NodeTraversor::::33::::879::::882::::node::::root	false
org.jsoup.select.Selector::::110::::7703::::7721::::tq.matches(":has(")::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.NodeTraversor::::27::::683::::686::::node::::root	false
org.jsoup.select.NodeTraversor::::22::::485::::488::::node::::root	false
org.jsoup.select.Selector::::148::::9283::::9480::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.NodeTraversor::::20::::400::::403::::node::::root	false
org.jsoup.select.NodeTraversor::::21::::430::::433::::node::::root	false
org.jsoup.select.NodeTraversor::::22::::478::::481::::node::::root	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::findElements()	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::new java.util.LinkedHashSet<org.jsoup.nodes.Element>()	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":matches("	false
org.jsoup.select.NodeTraversor::::19::::359::::362::::node::::root	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"Could not parse query '%s': unexpected token at '%s'"	false
org.jsoup.select.NodeTraversor::::30::::781::::784::::node::::root	false
org.jsoup.select.Selector::::126::::8346::::8370::::combinator(tq.consume())::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::231::::12141::::12163::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::182::::10511::::10810::::if (tq.matches(":matchesOwn(")) {    return matches(true);}else    if (tq.matches(":not(")) {        return not();    }else {        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());    }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Elements::::434::::13236::::13239::::size::::hasText	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::this.query	false
org.jsoup.select.Selector::::107::::7531::::7556::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::222::::11727::::11801::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::105::::7486::::7508::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::180::::10434::::10456::::tq.matches(":matches(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::":"	false
org.jsoup.select.Selector::::127::::8391::::8669::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::new java.util.LinkedHashSet<org.jsoup.nodes.Element>()	false
org.jsoup.select.Selector::::127::::8395::::8403::::seenWhite::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::findElements()	false
org.jsoup.select.Selector::::138::::8786::::8808::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9499::::9515::::elements.clear()::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::116::::7924::::8679::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchChomp(",")) {        while (!(tq.isEmpty())) {            java.lang.String subQuery = tq.chompTo(",");            elements.addAll(org.jsoup.select.Selector.select(subQuery, root));        }     }else        if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {            combinator(tq.consume());        }else            if (seenWhite) {                combinator(' ');            }else {                org.jsoup.select.Elements candidates = findElements();                intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));            }} ::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::120::::8069::::8086::::tq.matchChomp(",")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::397::::18495::::18529::::org.jsoup.select.Elements children = new org.jsoup.select.Elements()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::234::::12319::::12321::::key::::this.query	false
org.jsoup.select.Selector::::229::::11987::::12050::::java.lang.String key = cq.consumeToAny("=", "!=", "^=", "$=", "*=", "~=")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::222::::11731::::11751::::tagName.contains("|")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::145::::9083::::9150::::output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))::::this.elements = new java.util.LinkedHashSet<org.jsoup.nodes.Element>()	false
org.jsoup.select.Selector::::228::::11902::::11960::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"Could not parse query '%s': unexpected token at '%s'"	false
org.jsoup.select.Elements::::446::::13628::::13635::::contents::::this	false
org.jsoup.select.Selector::::110::::7703::::7721::::tq.matches(":has(")::::INSERT::::STATEMENT::::intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates))	false
org.jsoup.select.Selector::::178::::10349::::10375::::tq.matches(":containsOwn(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Elements::::446::::13621::::13649::::return contents.add(element)::::INSERT::::STATEMENT::::if (element.hasText())    return true;	false
org.jsoup.select.NodeTraversor::::33::::872::::897::::node = node.nextSibling()::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::new java.util.LinkedHashSet<org.jsoup.nodes.Element>()	false
org.jsoup.select.Elements::::434::::13236::::13243::::contents::::this	false
org.jsoup.select.Selector::::397::::18495::::18529::::org.jsoup.select.Elements children = new org.jsoup.select.Elements()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Elements::::422::::12865::::12871::::isEmpty::::hasText	false
org.jsoup.select.Selector::::168::::9957::::9977::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":matchesOwn("	false
org.jsoup.select.Elements::::422::::12865::::12872::::contents::::this	false
org.jsoup.select.NodeTraversor::::22::::478::::502::::node = node.childNode(0)::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::233::::12178::::12189::::cq.isEmpty()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::400::::18646::::18646::::p::::this.root	false
org.jsoup.select.NodeTraversor::::33::::872::::875::::node::::root	false
org.jsoup.select.Selector::::184::::10594::::10810::::if (tq.matches(":not(")) {    return not();}else {    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());}::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::146::::9165::::9480::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::new java.util.LinkedHashSet<org.jsoup.nodes.Element>()	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::":"	false
org.jsoup.select.Selector::::138::::8786::::8808::::tq.consumeWhitespace()::::DELETE::::STATEMENT	false
org.jsoup.select.Elements::::422::::12893::::12900::::contents::::this	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":containsOwn"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":contains"	false
org.jsoup.select.Selector::::134::::8689::::8718::::return new org.jsoup.select.Elements(elements)::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::166::::9882::::9899::::tq.matchChomp("*")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::findElements()	false
org.jsoup.select.Selector::::180::::10430::::10810::::if (tq.matches(":matches(")) {    return matches(false);}else    if (tq.matches(":matchesOwn(")) {        return matches(true);    }else        if (tq.matches(":not(")) {            return not();        }else {            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());        }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::336::::16297::::16508::::CHILD : for (org.jsoup.nodes.Element c : candidates) {    for (org.jsoup.nodes.Element p : parents) {        if (c.equals(p)) {            continue CHILD;        }    }    children.add(c);}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::336::::16297::::16508::::CHILD : for (org.jsoup.nodes.Element c : candidates) {    for (org.jsoup.nodes.Element p : parents) {        if (c.equals(p)) {            continue CHILD;        }    }    children.add(c);}::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::this.query	false
org.jsoup.select.Selector::::176::::10266::::10289::::tq.matches(":contains(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":not"	false
org.jsoup.select.NodeTraversor::::21::::430::::453::::node.childNodes().size()::::DELETE::::INFIX	false
org.jsoup.select.NodeTraversor::::20::::387::::393::::visitor::::this.visitor	false
org.jsoup.select.Selector::::338::::16388::::16398::::c.equals(p)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::142::::8934::::9480::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":matchesOwn"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":matches"	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::this.tq	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":contains(text) query must not be empty"	false
org.jsoup.select.Selector::::138::::8786::::8808::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::142::::8934::::9480::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::110::::7699::::7886::::if (tq.matches(":has(")) {    elements.addAll(root.getAllElements());}else {    addElements(findElements());}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":not(selector) subselect must not be empty"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":has"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::")"	false
org.jsoup.select.NodeTraversor::::30::::768::::793::::visitor.tail(node, depth)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::findElements()	false
org.jsoup.select.NodeTraversor::::30::::768::::793::::visitor.tail(node, depth)::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::164::::9810::::9824::::tq.matches("[")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::338::::16388::::16398::::c.equals(p)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"Index must be numeric"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":matches(regex) query must not be empty"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":has(el) subselect must not be empty"	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::findElements()	false
org.jsoup.select.Selector::::178::::10345::::10810::::if (tq.matches(":containsOwn(")) {    return contains(true);}else    if (tq.matches(":matches(")) {        return matches(false);    }else        if (tq.matches(":matchesOwn(")) {            return matches(true);        }else            if (tq.matches(":not(")) {                return not();            }else {                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());            }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::172::::10120::::10140::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::127::::8391::::8669::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::107::::7527::::7886::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    elements.add(root);    combinator(tq.consume());}else    if (tq.matches(":has(")) {        elements.addAll(root.getAllElements());    }else {        addElements(findElements());    }::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"^"	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":not("	false
org.jsoup.select.Selector::::182::::10511::::10810::::if (tq.matches(":matchesOwn(")) {    return matches(true);}else    if (tq.matches(":not(")) {        return not();    }else {        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());    }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::138::::8786::::8808::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::new java.util.LinkedHashSet<org.jsoup.nodes.Element>()	false
org.jsoup.select.NodeTraversor::::17::::320::::333::::int depth = 0::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::107::::7527::::7886::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    elements.add(root);    combinator(tq.consume());}else    if (tq.matches(":has(")) {        elements.addAll(root.getAllElements());    }else {        addElements(findElements());    }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::126::::8346::::8370::::combinator(tq.consume())::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::findElements()	false
org.jsoup.select.Selector::::120::::8069::::8086::::tq.matchChomp(",")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::338::::16397::::16397::::p::::this.root	false
org.jsoup.select.Selector::::125::::8300::::8325::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::168::::9957::::9977::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::233::::12178::::12189::::cq.isEmpty()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::125::::8296::::8669::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    combinator(tq.consume());}else    if (seenWhite) {        combinator(' ');    }else {        org.jsoup.select.Elements candidates = findElements();        intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));    }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::231::::12141::::12142::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::401::::18672::::18687::::children.add(c)::::DELETE::::STATEMENT	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.NodeTraversor::::16::::294::::310::::org.jsoup.nodes.Node node = root::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::231::::12141::::12142::::cq::::this.tq	false
org.jsoup.select.Selector::::398::::18546::::18768::::CHILD : for (org.jsoup.nodes.Element c : candidates) {    for (org.jsoup.nodes.Element p : parents) {        if (c.equals(p)) {            children.add(c);            continue CHILD;        }    }}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::398::::18546::::18768::::CHILD : for (org.jsoup.nodes.Element c : candidates) {    for (org.jsoup.nodes.Element p : parents) {        if (c.equals(p)) {            children.add(c);            continue CHILD;        }    }}::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::146::::9165::::9480::::if (combinator == '+')    output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    if (combinator == '~')        output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::172::::10120::::10140::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::229::::12000::::12001::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::229::::12000::::12001::::cq::::this.tq	false
org.jsoup.select.Selector::::400::::18637::::18647::::c.equals(p)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.NodeTraversor::::30::::768::::774::::visitor::::this.visitor	false
org.jsoup.select.Selector::::401::::18672::::18687::::children.add(c)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::144::::9048::::9480::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::166::::9882::::9899::::tq.matchChomp("*")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.NodeTraversor::::22::::478::::502::::node = node.childNode(0)::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.NodeTraversor::::22::::478::::502::::node = node.childNode(0)::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.NodeTraversor::::25::::566::::750::::while (((node.nextSibling()) == null) && (depth > 0)) {    visitor.tail(node, depth);    node = node.parent();    depth--;} ::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::233::::12174::::13285::::if (cq.isEmpty()) {    return key.startsWith("^") ? root.getElementsByAttributeStarting(key.substring(1)) : root.getElementsByAttribute(key);}else {    if (cq.matchChomp("="))        return root.getElementsByAttributeValue(key, cq.remainder());    else        if (cq.matchChomp("!="))            return root.getElementsByAttributeValueNot(key, cq.remainder());        else            if (cq.matchChomp("^="))                return root.getElementsByAttributeValueStarting(key, cq.remainder());            else                if (cq.matchChomp("$="))                    return root.getElementsByAttributeValueEnding(key, cq.remainder());                else                    if (cq.matchChomp("*="))                        return root.getElementsByAttributeValueContaining(key, cq.remainder());                    else                        if (cq.matchChomp("~="))                            return root.getElementsByAttributeValueMatching(key, cq.remainder());                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.NodeTraversor::::26::::636::::642::::visitor::::this.visitor	false
org.jsoup.select.Selector::::222::::11731::::11737::::tagName::::"Unknown combinator: "	false
org.jsoup.select.Selector::::105::::7486::::7508::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::162::::9743::::9758::::tq.matchesWord()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::400::::18637::::18647::::c.equals(p)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::176::::10262::::10810::::if (tq.matches(":contains(")) {    return contains(false);}else    if (tq.matches(":containsOwn(")) {        return contains(true);    }else        if (tq.matches(":matches(")) {            return matches(false);        }else            if (tq.matches(":matchesOwn(")) {                return matches(true);            }else                if (tq.matches(":not(")) {                    return not();                }else {                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::180::::10430::::10810::::if (tq.matches(":matches(")) {    return matches(false);}else    if (tq.matches(":matchesOwn(")) {        return matches(true);    }else        if (tq.matches(":not(")) {            return not();        }else {            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());        }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"Could not parse attribute query '%s': unexpected token at '%s'"	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::105::::7486::::7508::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::110::::7699::::7886::::if (tq.matches(":has(")) {    elements.addAll(root.getAllElements());}else {    addElements(findElements());}::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::142::::8934::::9480::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::401::::18672::::18687::::children.add(c)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::158::::9604::::9621::::tq.matchChomp("#")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::107::::7531::::7556::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::findElements()	false
org.jsoup.select.NodeTraversor::::33::::872::::897::::node = node.nextSibling()::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.Selector::::234::::12291::::12294::::root::::this.root	false
org.jsoup.select.Selector::::164::::9810::::9824::::tq.matches("[")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::234::::12235::::12238::::root::::this.root	false
org.jsoup.select.Selector::::105::::7486::::7508::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::170::::10037::::10057::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::116::::7924::::8679::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchChomp(",")) {        while (!(tq.isEmpty())) {            java.lang.String subQuery = tq.chompTo(",");            elements.addAll(org.jsoup.select.Selector.select(subQuery, root));        }     }else        if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {            combinator(tq.consume());        }else            if (seenWhite) {                combinator(' ');            }else {                org.jsoup.select.Elements candidates = findElements();                intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));            }} ::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    org.jsoup.select.Elements candidates = findElements();    intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));}	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::234::::12213::::12215::::key::::"Unknown combinator: "	false
org.jsoup.select.Selector::::160::::9672::::9689::::tq.matchChomp(".")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::110::::7703::::7721::::tq.matches(":has(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::178::::10345::::10810::::if (tq.matches(":containsOwn(")) {    return contains(true);}else    if (tq.matches(":matches(")) {        return matches(false);    }else        if (tq.matches(":matchesOwn(")) {            return matches(true);        }else            if (tq.matches(":not(")) {                return not();            }else {                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());            }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.NodeTraversor::::25::::573::::590::::node.nextSibling()::::DELETE::::INFIX	false
org.jsoup.select.Selector::::116::::7924::::8679::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchChomp(",")) {        while (!(tq.isEmpty())) {            java.lang.String subQuery = tq.chompTo(",");            elements.addAll(org.jsoup.select.Selector.select(subQuery, root));        }     }else        if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {            combinator(tq.consume());        }else            if (seenWhite) {                combinator(' ');            }else {                org.jsoup.select.Elements candidates = findElements();                intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));            }} ::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"Could not parse query '%s': unexpected token at '%s'"	false
org.jsoup.select.Selector::::142::::8934::::9480::::if (combinator == '>')    output = org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == ' ')        output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));    else        if (combinator == '+')            output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            if (combinator == '~')                output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));            else                throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::if (combinator == '~')    output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));else    throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));	false
org.jsoup.select.Selector::::107::::7527::::7886::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    elements.add(root);    combinator(tq.consume());}else    if (tq.matches(":has(")) {        elements.addAll(root.getAllElements());    }else {        addElements(findElements());    }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::new org.jsoup.select.Elements()	false
org.jsoup.select.NodeTraversor::::25::::566::::750::::while (((node.nextSibling()) == null) && (depth > 0)) {    visitor.tail(node, depth);    node = node.parent();    depth--;} ::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::matches(true)	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::":"	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::matches(false)	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.filterForParentsOfDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::342::::16496::::16496::::c::::this.root	false
org.jsoup.select.Selector::::125::::8300::::8325::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::234::::12271::::12273::::key::::"Unknown combinator: "	false
org.jsoup.select.NodeTraversor::::25::::566::::750::::while (((node.nextSibling()) == null) && (depth > 0)) {    visitor.tail(node, depth);    node = node.parent();    depth--;} ::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::174::::10198::::10216::::tq.matches(":has(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::matches(true)	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::contains(true)	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::org.jsoup.select.Selector.filterForParentsOfDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::matches(false)	false
org.jsoup.select.NodeTraversor::::33::::872::::897::::node = node.nextSibling()::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::contains(false)	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::contains(true)	false
org.jsoup.select.Selector::::125::::8296::::8669::::if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {    combinator(tq.consume());}else    if (seenWhite) {        combinator(' ');    }else {        org.jsoup.select.Elements candidates = findElements();        intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));    }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::144::::9048::::9480::::if (combinator == ' ')    output = org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements));else    if (combinator == '+')        output = org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));    else        if (combinator == '~')            output = org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root));        else            throw new java.lang.IllegalStateException(("Unknown combinator: " + combinator));::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.NodeTraversor::::19::::352::::921::::while (node != null) {    visitor.head(node, depth);    if ((node.childNodes().size()) > 0) {        node = node.childNode(0);        depth++;    }else {        while (((node.nextSibling()) == null) && (depth > 0)) {            visitor.tail(node, depth);            node = node.parent();            depth--;        }         visitor.tail(node, depth);        if (node == root)            break;        node = node.nextSibling();    }} ::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::not()	false
org.jsoup.select.Selector::::233::::12174::::13285::::if (cq.isEmpty()) {    return key.startsWith("^") ? root.getElementsByAttributeStarting(key.substring(1)) : root.getElementsByAttribute(key);}else {    if (cq.matchChomp("="))        return root.getElementsByAttributeValue(key, cq.remainder());    else        if (cq.matchChomp("!="))            return root.getElementsByAttributeValueNot(key, cq.remainder());        else            if (cq.matchChomp("^="))                return root.getElementsByAttributeValueStarting(key, cq.remainder());            else                if (cq.matchChomp("$="))                    return root.getElementsByAttributeValueEnding(key, cq.remainder());                else                    if (cq.matchChomp("*="))                        return root.getElementsByAttributeValueContaining(key, cq.remainder());                    else                        if (cq.matchChomp("~="))                            return root.getElementsByAttributeValueMatching(key, cq.remainder());                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::contains(false)	false
org.jsoup.select.Selector::::162::::9743::::9758::::tq.matchesWord()::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::not()	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::matches(true)	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::176::::10262::::10810::::if (tq.matches(":contains(")) {    return contains(false);}else    if (tq.matches(":containsOwn(")) {        return contains(true);    }else        if (tq.matches(":matches(")) {            return matches(false);        }else            if (tq.matches(":matchesOwn(")) {                return matches(true);            }else                if (tq.matches(":not(")) {                    return not();                }else {                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::matches(false)	false
org.jsoup.select.Selector::::160::::9672::::9689::::tq.matchChomp(".")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::contains(true)	false
org.jsoup.select.Selector::::170::::10037::::10057::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::this.elements	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::contains(false)	false
org.jsoup.select.Selector::::174::::10198::::10216::::tq.matches(":has(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::158::::9604::::9621::::tq.matchChomp("#")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::107::::7531::::7556::::tq.matchesAny(org.jsoup.select.Selector.combinators)::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::168::::9953::::10810::::if (tq.matchChomp(":lt(")) {    return indexLessThan();}else    if (tq.matchChomp(":gt(")) {        return indexGreaterThan();    }else        if (tq.matchChomp(":eq(")) {            return indexEquals();        }else            if (tq.matches(":has(")) {                return has();            }else                if (tq.matches(":contains(")) {                    return contains(false);                }else                    if (tq.matches(":containsOwn(")) {                        return contains(true);                    }else                        if (tq.matches(":matches(")) {                            return matches(false);                        }else                            if (tq.matches(":matchesOwn(")) {                                return matches(true);                            }else                                if (tq.matches(":not(")) {                                    return not();                                }else {                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::this.elements	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::not()	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::has()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::this.elements	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::matches(true)	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::matches(true)	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::indexEquals()	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::has()	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::matches(false)	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::matches(false)	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::this.elements	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::indexEquals()	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::indexGreaterThan()	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::indexGreaterThan()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::contains(true)	false
org.jsoup.select.Selector::::110::::7703::::7721::::tq.matches(":has(")::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::indexLessThan()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::contains(true)	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::allElements()	false
org.jsoup.select.Selector::::401::::18685::::18685::::c::::this.root	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::contains(false)	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::byAttribute()	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::indexLessThan()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::contains(false)	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::byTag()	false
org.jsoup.select.Selector::::116::::7924::::8679::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchChomp(",")) {        while (!(tq.isEmpty())) {            java.lang.String subQuery = tq.chompTo(",");            elements.addAll(org.jsoup.select.Selector.select(subQuery, root));        }     }else        if (tq.matchesAny(org.jsoup.select.Selector.combinators)) {            combinator(tq.consume());        }else            if (seenWhite) {                combinator(' ');            }else {                org.jsoup.select.Elements candidates = findElements();                intersectElements(org.jsoup.select.Selector.filterForSelf(elements, candidates));            }} ::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.NodeTraversor::::19::::352::::921::::while (node != null) {    visitor.head(node, depth);    if ((node.childNodes().size()) > 0) {        node = node.childNode(0);        depth++;    }else {        while (((node.nextSibling()) == null) && (depth > 0)) {            visitor.tail(node, depth);            node = node.parent();            depth--;        }         visitor.tail(node, depth);        if (node == root)            break;        node = node.nextSibling();    }} ::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::has()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::not()	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::byClass()	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::this.root	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::not()	false
org.jsoup.select.Selector::::233::::12178::::12179::::cq::::byId()	false
org.jsoup.select.Selector::::172::::10116::::10810::::if (tq.matchChomp(":eq(")) {    return indexEquals();}else    if (tq.matches(":has(")) {        return has();    }else        if (tq.matches(":contains(")) {            return contains(false);        }else            if (tq.matches(":containsOwn(")) {                return contains(true);            }else                if (tq.matches(":matches(")) {                    return matches(false);                }else                    if (tq.matches(":matchesOwn(")) {                        return matches(true);                    }else                        if (tq.matches(":not(")) {                            return not();                        }else {                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                        }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::166::::9878::::10810::::if (tq.matchChomp("*")) {    return allElements();}else    if (tq.matchChomp(":lt(")) {        return indexLessThan();    }else        if (tq.matchChomp(":gt(")) {            return indexGreaterThan();        }else            if (tq.matchChomp(":eq(")) {                return indexEquals();            }else                if (tq.matches(":has(")) {                    return has();                }else                    if (tq.matches(":contains(")) {                        return contains(false);                    }else                        if (tq.matches(":containsOwn(")) {                            return contains(true);                        }else                            if (tq.matches(":matches(")) {                                return matches(false);                            }else                                if (tq.matches(":matchesOwn(")) {                                    return matches(true);                                }else                                    if (tq.matches(":not(")) {                                        return not();                                    }else {                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                    }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::allElements()	false
org.jsoup.select.Selector::::67::::6375::::6379::::query::::"Unknown combinator: "	false
org.jsoup.select.Selector::::184::::10598::::10599::::tq::::this	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::indexEquals()	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::byAttribute()	false
org.jsoup.select.Selector::::174::::10194::::10810::::if (tq.matches(":has(")) {    return has();}else    if (tq.matches(":contains(")) {        return contains(false);    }else        if (tq.matches(":containsOwn(")) {            return contains(true);        }else            if (tq.matches(":matches(")) {                return matches(false);            }else                if (tq.matches(":matchesOwn(")) {                    return matches(true);                }else                    if (tq.matches(":not(")) {                        return not();                    }else {                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                    }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::has()	false
org.jsoup.select.Selector::::224::::11818::::11821::::root::::this.root	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::byTag()	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::indexGreaterThan()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::has()	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::indexEquals()	false
org.jsoup.select.Selector::::158::::9600::::10810::::if (tq.matchChomp("#")) {    return byId();}else    if (tq.matchChomp(".")) {        return byClass();    }else        if (tq.matchesWord()) {            return byTag();        }else            if (tq.matches("[")) {                return byAttribute();            }else                if (tq.matchChomp("*")) {                    return allElements();                }else                    if (tq.matchChomp(":lt(")) {                        return indexLessThan();                    }else                        if (tq.matchChomp(":gt(")) {                            return indexGreaterThan();                        }else                            if (tq.matchChomp(":eq(")) {                                return indexEquals();                            }else                                if (tq.matches(":has(")) {                                    return has();                                }else                                    if (tq.matches(":contains(")) {                                        return contains(false);                                    }else                                        if (tq.matches(":containsOwn(")) {                                            return contains(true);                                        }else                                            if (tq.matches(":matches(")) {                                                return matches(false);                                            }else                                                if (tq.matches(":matchesOwn(")) {                                                    return matches(true);                                                }else                                                    if (tq.matches(":not(")) {                                                        return not();                                                    }else {                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                                    }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::indexGreaterThan()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::indexEquals()	false
org.jsoup.select.Selector::::182::::10515::::10516::::tq::::this	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::byClass()	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::this.root	false
org.jsoup.select.Selector::::172::::10116::::10810::::if (tq.matchChomp(":eq(")) {    return indexEquals();}else    if (tq.matches(":has(")) {        return has();    }else        if (tq.matches(":contains(")) {            return contains(false);        }else            if (tq.matches(":containsOwn(")) {                return contains(true);            }else                if (tq.matches(":matches(")) {                    return matches(false);                }else                    if (tq.matches(":matchesOwn(")) {                        return matches(true);                    }else                        if (tq.matches(":not(")) {                            return not();                        }else {                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                        }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::indexLessThan()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::indexGreaterThan()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::this.elements	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::indexLessThan()	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::allElements()	false
org.jsoup.select.Selector::::180::::10434::::10435::::tq::::this	false
org.jsoup.select.Selector::::187::::10785::::10786::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::187::::10785::::10786::::tq::::this.tq	false
org.jsoup.select.Selector::::153::::9499::::9506::::elements::::byId()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::indexLessThan()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::164::::9806::::10810::::if (tq.matches("[")) {    return byAttribute();}else    if (tq.matchChomp("*")) {        return allElements();    }else        if (tq.matchChomp(":lt(")) {            return indexLessThan();        }else            if (tq.matchChomp(":gt(")) {                return indexGreaterThan();            }else                if (tq.matchChomp(":eq(")) {                    return indexEquals();                }else                    if (tq.matches(":has(")) {                        return has();                    }else                        if (tq.matches(":contains(")) {                            return contains(false);                        }else                            if (tq.matches(":containsOwn(")) {                                return contains(true);                            }else                                if (tq.matches(":matches(")) {                                    return matches(false);                                }else                                    if (tq.matches(":matchesOwn(")) {                                        return matches(true);                                    }else                                        if (tq.matches(":not(")) {                                            return not();                                        }else {                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                        }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::byAttribute()	false
org.jsoup.select.Selector::::178::::10349::::10350::::tq::::this	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::allElements()	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::byTag()	false
org.jsoup.select.Selector::::168::::9953::::10810::::if (tq.matchChomp(":lt(")) {    return indexLessThan();}else    if (tq.matchChomp(":gt(")) {        return indexGreaterThan();    }else        if (tq.matchChomp(":eq(")) {            return indexEquals();        }else            if (tq.matches(":has(")) {                return has();            }else                if (tq.matches(":contains(")) {                    return contains(false);                }else                    if (tq.matches(":containsOwn(")) {                        return contains(true);                    }else                        if (tq.matches(":matches(")) {                            return matches(false);                        }else                            if (tq.matches(":matchesOwn(")) {                                return matches(true);                            }else                                if (tq.matches(":not(")) {                                    return not();                                }else {                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::allElements()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::byAttribute()	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::byClass()	false
org.jsoup.select.Selector::::174::::10194::::10810::::if (tq.matches(":has(")) {    return has();}else    if (tq.matches(":contains(")) {        return contains(false);    }else        if (tq.matches(":containsOwn(")) {            return contains(true);        }else            if (tq.matches(":matches(")) {                return matches(false);            }else                if (tq.matches(":matchesOwn(")) {                    return matches(true);                }else                    if (tq.matches(":not(")) {                        return not();                    }else {                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                    }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::matches(true)	false
org.jsoup.select.Selector::::176::::10266::::10267::::tq::::this	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::matches(false)	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::contains(true)	false
org.jsoup.select.Selector::::400::::18637::::18637::::c::::byId()	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::byTag()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::contains(false)	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::byClass()	false
org.jsoup.select.Selector::::174::::10198::::10199::::tq::::this	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::byAttribute()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::not()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::matches(true)	false
org.jsoup.select.Selector::::153::::9517::::9524::::elements::::byId()	false
org.jsoup.select.NodeTraversor::::19::::352::::921::::while (node != null) {    visitor.head(node, depth);    if ((node.childNodes().size()) > 0) {        node = node.childNode(0);        depth++;    }else {        while (((node.nextSibling()) == null) && (depth > 0)) {            visitor.tail(node, depth);            node = node.parent();            depth--;        }         visitor.tail(node, depth);        if (node == root)            break;        node = node.nextSibling();    }} ::::INSERT::::STATEMENT::::if (node == root)    break;	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::matches(false)	false
org.jsoup.select.Selector::::166::::9878::::10810::::if (tq.matchChomp("*")) {    return allElements();}else    if (tq.matchChomp(":lt(")) {        return indexLessThan();    }else        if (tq.matchChomp(":gt(")) {            return indexGreaterThan();        }else            if (tq.matchChomp(":eq(")) {                return indexEquals();            }else                if (tq.matches(":has(")) {                    return has();                }else                    if (tq.matches(":contains(")) {                        return contains(false);                    }else                        if (tq.matches(":containsOwn(")) {                            return contains(true);                        }else                            if (tq.matches(":matches(")) {                                return matches(false);                            }else                                if (tq.matches(":matchesOwn(")) {                                    return matches(true);                                }else                                    if (tq.matches(":not(")) {                                        return not();                                    }else {                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                    }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::has()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::contains(true)	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::indexEquals()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::contains(false)	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::indexGreaterThan()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::indexLessThan()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::allElements()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::byAttribute()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::byTag()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::not()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::byClass()	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::byTag()	false
org.jsoup.select.Selector::::99::::7352::::7359::::elements::::byId()	false
org.jsoup.select.Selector::::158::::9600::::10810::::if (tq.matchChomp("#")) {    return byId();}else    if (tq.matchChomp(".")) {        return byClass();    }else        if (tq.matchesWord()) {            return byTag();        }else            if (tq.matches("[")) {                return byAttribute();            }else                if (tq.matchChomp("*")) {                    return allElements();                }else                    if (tq.matchChomp(":lt(")) {                        return indexLessThan();                    }else                        if (tq.matchChomp(":gt(")) {                            return indexGreaterThan();                        }else                            if (tq.matchChomp(":eq(")) {                                return indexEquals();                            }else                                if (tq.matches(":has(")) {                                    return has();                                }else                                    if (tq.matches(":contains(")) {                                        return contains(false);                                    }else                                        if (tq.matches(":containsOwn(")) {                                            return contains(true);                                        }else                                            if (tq.matches(":matches(")) {                                                return matches(false);                                            }else                                                if (tq.matches(":matchesOwn(")) {                                                    return matches(true);                                                }else                                                    if (tq.matches(":not(")) {                                                        return not();                                                    }else {                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                                    }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::162::::9739::::10810::::if (tq.matchesWord()) {    return byTag();}else    if (tq.matches("[")) {        return byAttribute();    }else        if (tq.matchChomp("*")) {            return allElements();        }else            if (tq.matchChomp(":lt(")) {                return indexLessThan();            }else                if (tq.matchChomp(":gt(")) {                    return indexGreaterThan();                }else                    if (tq.matchChomp(":eq(")) {                        return indexEquals();                    }else                        if (tq.matches(":has(")) {                            return has();                        }else                            if (tq.matches(":contains(")) {                                return contains(false);                            }else                                if (tq.matches(":containsOwn(")) {                                    return contains(true);                                }else                                    if (tq.matches(":matches(")) {                                        return matches(false);                                    }else                                        if (tq.matches(":matchesOwn(")) {                                            return matches(true);                                        }else                                            if (tq.matches(":not(")) {                                                return not();                                            }else {                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                            }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::has()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::indexEquals()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::indexGreaterThan()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::indexLessThan()	false
org.jsoup.select.Selector::::164::::9810::::9811::::tq::::this	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::allElements()	false
org.jsoup.select.Selector::::164::::9806::::10810::::if (tq.matches("[")) {    return byAttribute();}else    if (tq.matchChomp("*")) {        return allElements();    }else        if (tq.matchChomp(":lt(")) {            return indexLessThan();        }else            if (tq.matchChomp(":gt(")) {                return indexGreaterThan();            }else                if (tq.matchChomp(":eq(")) {                    return indexEquals();                }else                    if (tq.matches(":has(")) {                        return has();                    }else                        if (tq.matches(":contains(")) {                            return contains(false);                        }else                            if (tq.matches(":containsOwn(")) {                                return contains(true);                            }else                                if (tq.matches(":matches(")) {                                    return matches(false);                                }else                                    if (tq.matches(":matchesOwn(")) {                                        return matches(true);                                    }else                                        if (tq.matches(":not(")) {                                            return not();                                        }else {                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                        }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::byAttribute()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::byTag()	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::byClass()	false
org.jsoup.select.Selector::::184::::10598::::10599::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Elements::::438::::13360::::13367::::contents::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.select(subQuery, root)	false
org.jsoup.select.Selector::::184::::10598::::10599::::tq::::this.tq	false
org.jsoup.select.Selector::::196::::10996::::11003::::elements::::byId()	false
org.jsoup.select.Selector::::170::::10033::::10810::::if (tq.matchChomp(":gt(")) {    return indexGreaterThan();}else    if (tq.matchChomp(":eq(")) {        return indexEquals();    }else        if (tq.matches(":has(")) {            return has();        }else            if (tq.matches(":contains(")) {                return contains(false);            }else                if (tq.matches(":containsOwn(")) {                    return contains(true);                }else                    if (tq.matches(":matches(")) {                        return matches(false);                    }else                        if (tq.matches(":matchesOwn(")) {                            return matches(true);                        }else                            if (tq.matches(":not(")) {                                return not();                            }else {                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                            }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::byClass()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::matches(true)	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::matches(false)	false
org.jsoup.select.Selector::::182::::10515::::10516::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::contains(true)	false
org.jsoup.select.Selector::::182::::10515::::10516::::tq::::this.tq	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::contains(false)	false
org.jsoup.select.Selector::::160::::9668::::10810::::if (tq.matchChomp(".")) {    return byClass();}else    if (tq.matchesWord()) {        return byTag();    }else        if (tq.matches("[")) {            return byAttribute();        }else            if (tq.matchChomp("*")) {                return allElements();            }else                if (tq.matchChomp(":lt(")) {                    return indexLessThan();                }else                    if (tq.matchChomp(":gt(")) {                        return indexGreaterThan();                    }else                        if (tq.matchChomp(":eq(")) {                            return indexEquals();                        }else                            if (tq.matches(":has(")) {                                return has();                            }else                                if (tq.matches(":contains(")) {                                    return contains(false);                                }else                                    if (tq.matches(":containsOwn(")) {                                        return contains(true);                                    }else                                        if (tq.matches(":matches(")) {                                            return matches(false);                                        }else                                            if (tq.matches(":matchesOwn(")) {                                                return matches(true);                                            }else                                                if (tq.matches(":not(")) {                                                    return not();                                                }else {                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                                }::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::not()	false
org.jsoup.select.Selector::::180::::10434::::10435::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::180::::10434::::10435::::tq::::this.tq	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::new org.jsoup.select.Elements(elements)	false
org.jsoup.select.Selector::::178::::10349::::10350::::tq::::this.tq	false
org.jsoup.select.Selector::::178::::10349::::10350::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::has()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::indexEquals()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::indexGreaterThan()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::indexLessThan()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::allElements()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::byAttribute()	false
org.jsoup.select.Selector::::338::::16388::::16388::::c::::byId()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::byTag()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::byClass()	false
org.jsoup.select.Selector::::192::::10887::::10894::::elements::::byId()	false
org.jsoup.select.Selector::::176::::10266::::10267::::tq::::this.tq	false
org.jsoup.select.Selector::::176::::10266::::10267::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::162::::9739::::10810::::if (tq.matchesWord()) {    return byTag();}else    if (tq.matches("[")) {        return byAttribute();    }else        if (tq.matchChomp("*")) {            return allElements();        }else            if (tq.matchChomp(":lt(")) {                return indexLessThan();            }else                if (tq.matchChomp(":gt(")) {                    return indexGreaterThan();                }else                    if (tq.matchChomp(":eq(")) {                        return indexEquals();                    }else                        if (tq.matches(":has(")) {                            return has();                        }else                            if (tq.matches(":contains(")) {                                return contains(false);                            }else                                if (tq.matches(":containsOwn(")) {                                    return contains(true);                                }else                                    if (tq.matches(":matches(")) {                                        return matches(false);                                    }else                                        if (tq.matches(":matchesOwn(")) {                                            return matches(true);                                        }else                                            if (tq.matches(":not(")) {                                                return not();                                            }else {                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                            }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Elements::::440::::13432::::13439::::contents::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::126::::8357::::8358::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::110::::7703::::7704::::tq::::this	false
org.jsoup.select.Selector::::126::::8357::::8358::::tq::::this.tq	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.select(subQuery, elements)	false
org.jsoup.select.Selector::::172::::10120::::10121::::tq::::this.tq	false
org.jsoup.select.Selector::::172::::10120::::10121::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::174::::10198::::10199::::tq::::this.tq	false
org.jsoup.select.Selector::::174::::10198::::10199::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::160::::9668::::10810::::if (tq.matchChomp(".")) {    return byClass();}else    if (tq.matchesWord()) {        return byTag();    }else        if (tq.matches("[")) {            return byAttribute();        }else            if (tq.matchChomp("*")) {                return allElements();            }else                if (tq.matchChomp(":lt(")) {                    return indexLessThan();                }else                    if (tq.matchChomp(":gt(")) {                        return indexGreaterThan();                    }else                        if (tq.matchChomp(":eq(")) {                            return indexEquals();                        }else                            if (tq.matches(":has(")) {                                return has();                            }else                                if (tq.matches(":contains(")) {                                    return contains(false);                                }else                                    if (tq.matches(":containsOwn(")) {                                        return contains(true);                                    }else                                        if (tq.matches(":matches(")) {                                            return matches(false);                                        }else                                            if (tq.matches(":matchesOwn(")) {                                                return matches(true);                                            }else                                                if (tq.matches(":not(")) {                                                    return not();                                                }else {                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                                                }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::228::::11933::::11934::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::168::::9957::::9958::::tq::::this.tq	false
org.jsoup.select.Selector::::168::::9957::::9958::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::228::::11933::::11934::::tq::::this.tq	false
org.jsoup.select.Selector::::170::::10033::::10810::::if (tq.matchChomp(":gt(")) {    return indexGreaterThan();}else    if (tq.matchChomp(":eq(")) {        return indexEquals();    }else        if (tq.matches(":has(")) {            return has();        }else            if (tq.matches(":contains(")) {                return contains(false);            }else                if (tq.matches(":containsOwn(")) {                    return contains(true);                }else                    if (tq.matches(":matches(")) {                        return matches(false);                    }else                        if (tq.matches(":matchesOwn(")) {                            return matches(true);                        }else                            if (tq.matches(":not(")) {                                return not();                            }else {                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());                            }::::INSERT::::STATEMENT::::addElements(findElements())	false
org.jsoup.select.Selector::::166::::9882::::9883::::tq::::this.tq	false
org.jsoup.select.Selector::::166::::9882::::9883::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::138::::8786::::8787::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::139::::8836::::8837::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::170::::10037::::10038::::tq::::this.tq	false
org.jsoup.select.Selector::::170::::10037::::10038::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::138::::8786::::8787::::tq::::this.tq	false
org.jsoup.select.Selector::::139::::8836::::8837::::tq::::this.tq	false
org.jsoup.select.Elements::::422::::12893::::12900::::contents::::new org.jsoup.select.Elements()	false
org.jsoup.select.Elements::::422::::12865::::12872::::contents::::new org.jsoup.select.Elements()	false
org.jsoup.select.Elements::::434::::13236::::13243::::contents::::new org.jsoup.select.Elements()	false
org.jsoup.select.Elements::::446::::13628::::13635::::contents::::new org.jsoup.select.Elements()	false
org.jsoup.select.Selector::::164::::9810::::9811::::tq::::this.tq	false
org.jsoup.select.Selector::::164::::9810::::9811::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::125::::8300::::8301::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::125::::8300::::8301::::tq::::this.tq	false
org.jsoup.select.Selector::::118::::8016::::8017::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::120::::8069::::8070::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::118::::8016::::8017::::tq::::this.tq	false
org.jsoup.select.Selector::::120::::8069::::8070::::tq::::this.tq	false
org.jsoup.select.Selector::::162::::9743::::9744::::tq::::this.tq	false
org.jsoup.select.Selector::::162::::9743::::9744::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::158::::9604::::9605::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::160::::9672::::9673::::tq::::this.tq	false
org.jsoup.select.Selector::::160::::9672::::9673::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::218::::11555::::11556::::tq::::this.tq	false
org.jsoup.select.Selector::::218::::11555::::11556::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::158::::9604::::9605::::tq::::this.tq	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::105::::7486::::7487::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::110::::7703::::7704::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::107::::7531::::7532::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.Selector::::105::::7486::::7487::::tq::::this.tq	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::this.tq	false
org.jsoup.select.Selector::::110::::7703::::7704::::tq::::this.tq	false
org.jsoup.select.Selector::::107::::7531::::7532::::tq::::this.tq	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::findElements()	false
org.jsoup.select.Selector::::174::::10198::::10199::::tq::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::178::::10349::::10350::::tq::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::176::::10266::::10267::::tq::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.filterForParentsOfDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::184::::10598::::10599::::tq::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.filterForGeneralSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.filterForAdjacentSiblings(elements, org.jsoup.select.Selector.select(subQuery, root))	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.filterForDescendants(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.filterForChildren(elements, org.jsoup.select.Selector.select(subQuery, elements))	false
org.jsoup.select.Selector::::182::::10515::::10516::::tq::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::180::::10434::::10435::::tq::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.select(query, root)	false
org.jsoup.select.Selector::::164::::9810::::9811::::tq::::new org.jsoup.select.Selector(query, root)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::org.jsoup.select.Selector.filterForSelf(elements, candidates)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::matches(true)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::matches(false)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::contains(true)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::contains(false)	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::not()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::candidates	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::has()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::indexEquals()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::indexGreaterThan()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::indexLessThan()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::allElements()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::byAttribute()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::byTag()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::byClass()	false
org.jsoup.select.Selector::::116::::7932::::7933::::tq::::byId()	false
org.jsoup.select.Selector::::110::::7703::::7704::::tq::::new org.jsoup.select.Selector(query, root)	false
