boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	623:627	22:22	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	616:628	22:22	return false	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtNewClassImpl	461:652	20:24	new org.mockito.internal.configuration.injection.MockInjectionStrategy() {    protected boolean processInjection(java.lang.reflect.Field field, java.lang.Object fieldOwner, java.util.Set<java.lang.Object> mockCandidates) {        return false;    }}	[org.mockito.internal.configuration.injection.MockInjectionStrategy:super]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	454:653	20:24	return new org.mockito.internal.configuration.injection.MockInjectionStrategy() {    protected boolean processInjection(java.lang.reflect.Field field, java.lang.Object fieldOwner, java.util.Set<java.lang.Object> mockCandidates) {        return false;    }}	[org.mockito.internal.configuration.injection.MockInjectionStrategy:super]	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1072:1083	41:41	nextStrategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1088:1091	41:41	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1072:1091	41:41	(nextStrategy) != null	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1108:1119	42:42	nextStrategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1129:1136	42:42	strategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:strategy]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtInvocationImpl	1108:1138	42:42	nextStrategy.thenTry(strategy)	[org.mockito.internal.configuration.injection.MockInjectionStrategy:thenTry]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy, org.mockito.internal.configuration.injection.MockInjectionStrategy:strategy]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	1169:1180	44:44	nextStrategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1184:1191	44:44	strategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:strategy]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	1169:1192	44:44	nextStrategy = strategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy, org.mockito.internal.configuration.injection.MockInjectionStrategy:strategy]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtAssignmentImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1069:1202	41:45	if ((nextStrategy) != null) {    nextStrategy.thenTry(strategy);}else {    nextStrategy = strategy;}	[org.mockito.internal.configuration.injection.MockInjectionStrategy:thenTry]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy, org.mockito.internal.configuration.injection.MockInjectionStrategy:strategy]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1219:1226	46:46	strategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:strategy]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1212:1227	46:46	return strategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:strategy]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2095:2101	68:68	onField	[]	[java.lang.reflect.Field:onField]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2104:2115	68:68	fieldOwnedBy	[]	[java.lang.Object:fieldOwnedBy]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Set<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2118:2131	68:68	mockCandidates	[]	[java.util.Set<java.lang.Object>:mockCandidates]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2078:2132	68:68	processInjection(onField, fieldOwnedBy, mockCandidates)	[boolean:processInjection]	[java.lang.Object:fieldOwnedBy, java.util.Set<java.lang.Object>:mockCandidates, java.lang.reflect.Field:onField]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	2156:2159	69:69	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2149:2160	69:69	return true	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2075:2170	68:70	if (processInjection(onField, fieldOwnedBy, mockCandidates)) {    return true;}	[boolean:processInjection]	[java.lang.Object:fieldOwnedBy, java.util.Set<java.lang.Object>:mockCandidates, java.lang.reflect.Field:onField]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2214:2220	71:71	onField	[]	[java.lang.reflect.Field:onField]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2223:2234	71:71	fieldOwnedBy	[]	[java.lang.Object:fieldOwnedBy]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Set<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2237:2250	71:71	mockCandidates	[]	[java.util.Set<java.lang.Object>:mockCandidates]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2187:2251	71:71	relayProcessToNextStrategy(onField, fieldOwnedBy, mockCandidates)	[boolean:relayProcessToNextStrategy]	[java.lang.Object:fieldOwnedBy, java.util.Set<java.lang.Object>:mockCandidates, java.lang.reflect.Field:onField]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2180:2252	71:71	return relayProcessToNextStrategy(onField, fieldOwnedBy, mockCandidates)	[boolean:relayProcessToNextStrategy]	[java.lang.Object:fieldOwnedBy, java.util.Set<java.lang.Object>:mockCandidates, java.lang.reflect.Field:onField]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2901:2912	89:89	nextStrategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2917:2920	89:89	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2901:2920	89:89	(nextStrategy) != null	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.MockInjectionStrategy	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2925:2936	89:89	nextStrategy	[]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2946:2950	89:89	field	[]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2953:2962	89:89	fieldOwner	[]	[java.lang.Object:fieldOwner]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Set<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2965:2978	89:89	mockCandidates	[]	[java.util.Set<java.lang.Object>:mockCandidates]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2925:2979	89:89	nextStrategy.process(field, fieldOwner, mockCandidates)	[boolean:process]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy, java.lang.reflect.Field:field, java.util.Set<java.lang.Object>:mockCandidates, java.lang.Object:fieldOwner]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2901:2979	89:89	(nextStrategy) != null) && (nextStrategy.process(field, fieldOwner, mockCandidates)	[boolean:process]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy, java.lang.reflect.Field:field, java.util.Set<java.lang.Object>:mockCandidates, java.lang.Object:fieldOwner]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2894:2980	89:89	return ((nextStrategy) != null) && (nextStrategy.process(field, fieldOwner, mockCandidates))	[boolean:process]	[org.mockito.internal.configuration.injection.MockInjectionStrategy:nextStrategy, java.lang.reflect.Field:field, java.util.Set<java.lang.Object>:mockCandidates, java.lang.Object:fieldOwner]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
