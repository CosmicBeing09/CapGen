java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	310:312	15:15	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	317:320	15:15	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	310:320	15:15	obj == null	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	370:394	16:16	"Object must not be null"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	341:395	16:16	new java.lang.IllegalArgumentException("Object must not be null")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	335:396	16:16	throw new java.lang.IllegalArgumentException("Object must not be null")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	306:396	15:16	if (obj == null)    throw new java.lang.IllegalArgumentException("Object must not be null");	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	624:626	25:25	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	631:634	25:25	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	624:634	25:25	obj == null	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	684:686	26:26	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	655:687	26:26	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	649:688	26:26	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	620:688	25:26	if (obj == null)    throw new java.lang.IllegalArgumentException(msg);	[]	[java.lang.Object:obj, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	844:846	34:34	val	[]	[boolean:val]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	843:846	34:34	!val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	896:909	35:35	"Must be true"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	867:910	35:35	new java.lang.IllegalArgumentException("Must be true")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	861:911	35:35	throw new java.lang.IllegalArgumentException("Must be true")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	839:911	34:35	if (!val)    throw new java.lang.IllegalArgumentException("Must be true");	[]	[boolean:val]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1135:1137	44:44	val	[]	[boolean:val]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	1134:1137	44:44	!val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1187:1189	45:45	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1158:1190	45:45	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1152:1191	45:45	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1130:1191	44:45	if (!val)    throw new java.lang.IllegalArgumentException(msg);	[]	[boolean:val, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1348:1350	53:53	val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1400:1414	54:54	"Must be false"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1371:1415	54:54	new java.lang.IllegalArgumentException("Must be false")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1365:1416	54:54	throw new java.lang.IllegalArgumentException("Must be false")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1344:1416	53:54	if (val)    throw new java.lang.IllegalArgumentException("Must be false");	[]	[boolean:val]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1641:1643	63:63	val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1693:1695	64:64	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1664:1696	64:64	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1658:1697	64:64	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1637:1697	63:64	if (val)    throw new java.lang.IllegalArgumentException(msg);	[]	[boolean:val, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1901:1907	72:72	objects	[]	[java.lang.Object[]:objects]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1910:1950	72:72	"Array must not contain any null objects"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1886:1952	72:72	org.jsoup.helper.Validate.noNullElements(objects, "Array must not contain any null objects")	[void:noNullElements]	[java.lang.Object[]:objects]	[]	[spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2214:2233	81:81	java.lang.Object obj	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2227:2233	81:81	objects	[]	[java.lang.Object[]:objects]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2252:2254	82:82	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2259:2262	82:82	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2252:2262	82:82	obj == null	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2316:2318	83:83	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2287:2319	83:83	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2281:2320	83:83	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2248:2320	82:83	if (obj == null)    throw new java.lang.IllegalArgumentException(msg);	[]	[java.lang.Object:obj, java.lang.String:msg]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	2209:2320	81:83	for (java.lang.Object obj : objects)    if (obj == null)        throw new java.lang.IllegalArgumentException(msg);	[]	[java.lang.Object:obj, java.lang.String:msg, java.lang.Object[]:objects]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2492:2497	91:91	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2502:2505	91:91	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2492:2505	91:91	string == null	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2510:2515	91:91	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2510:2524	91:91	string.length()	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2529:2529	91:91	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2510:2529	91:91	(string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2492:2529	91:91	string == null) || ((string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2579:2604	92:92	"String must not be empty"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2550:2605	92:92	new java.lang.IllegalArgumentException("String must not be empty")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2544:2606	92:92	throw new java.lang.IllegalArgumentException("String must not be empty")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2488:2606	91:92	if ((string == null) || ((string.length()) == 0))    throw new java.lang.IllegalArgumentException("String must not be empty");	[int:length]	[java.lang.String:string]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2846:2851	101:101	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2856:2859	101:101	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2846:2859	101:101	string == null	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2864:2869	101:101	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2864:2878	101:101	string.length()	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2883:2883	101:101	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2864:2883	101:101	(string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2846:2883	101:101	string == null) || ((string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2933:2935	102:102	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2904:2936	102:102	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2898:2937	102:102	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2842:2937	101:102	if ((string == null) || ((string.length()) == 0))    throw new java.lang.IllegalArgumentException(msg);	[int:length]	[java.lang.String:string, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3104:3106	110:110	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	3075:3107	110:110	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	3069:3108	110:110	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[]	[spoon.support.reflect.code.CtThrowImpl]
