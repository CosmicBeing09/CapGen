java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	994:1036	34:34	new java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>()	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1191:1204	38:38	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.code.CtNewClassImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	1191:1215	38:38	backingHashSet.iterator()	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.code.CtNewClassImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1281:1288	41:41	iterator	[]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1281:1298	41:41	iterator.hasNext()	[boolean:hasNext]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1274:1299	41:41	return iterator.hasNext()	[boolean:hasNext]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1374:1381	45:45	iterator	[]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1374:1388	45:45	iterator.next()	[:next]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	1374:1394	45:45	iterator.next().get()	[:next, java.lang.Object:next]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1367:1395	45:45	return iterator.next().get()	[:next, java.lang.Object:next]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1463:1470	49:49	iterator	[]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1463:1480	49:49	iterator.remove()	[:remove]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtNewClassImpl	1096:1504	37:51	new java.util.Iterator<java.lang.Object>() {    private java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();    public boolean hasNext() {        return iterator.hasNext();    }    public java.lang.Object next() {        return iterator.next().get();    }    public void remove() {        iterator.remove();    }}	[:next, boolean:hasNext, java.lang.Object:super, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator, java.lang.Object:next, :remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1089:1505	37:51	return new java.util.Iterator<java.lang.Object>() {    private java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();    public boolean hasNext() {        return iterator.hasNext();    }    public java.lang.Object next() {        return iterator.next().get();    }    public void remove() {        iterator.remove();    }}	[:next, boolean:hasNext, java.lang.Object:super, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator, java.lang.Object:next, :remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1553:1566	55:55	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	1553:1573	55:55	backingHashSet.size()	[int:size]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1546:1574	55:55	return backingHashSet.size()	[int:size]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1629:1642	59:59	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1629:1652	59:59	backingHashSet.isEmpty()	[boolean:isEmpty]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1622:1653	59:59	return backingHashSet.isEmpty()	[boolean:isEmpty]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1720:1733	63:63	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1744:1771	63:63	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1776:1779	63:63	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1744:1780	63:63	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1720:1781	63:63	backingHashSet.contains(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[boolean:contains, :of]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1713:1782	63:63	return backingHashSet.contains(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[boolean:contains, :of]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1844:1857	67:67	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1863:1890	67:67	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1895:1898	67:67	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1863:1899	67:67	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1844:1900	67:67	backingHashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:add]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1837:1901	67:67	return backingHashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:add]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1966:1979	71:71	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1988:2015	71:71	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2020:2023	71:71	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1988:2024	71:71	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1966:2025	71:71	backingHashSet.remove(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1959:2026	71:71	return backingHashSet.remove(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2069:2082	75:75	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	2069:2091	75:75	backingHashSet.clear()	[:clear]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2104:2112	78:78	@java.lang.Override	[]	[]	[]	[]
java.lang.CloneNotSupportedException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2186:2217	79:79	new java.lang.CloneNotSupportedException()	[]	[]	[spoon.support.reflect.code.CtThrowImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2180:2218	79:79	throw new java.lang.CloneNotSupportedException()	[]	[]	[]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2231:2239	82:82	@java.lang.Override	[]	[]	[]	[]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2289:2289	83:83	o	[]	[java.lang.Object:o]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	2302:2325	83:83	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2288:2326	83:83	o instanceof org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	[]	[java.lang.Object:o]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	2287:2326	83:83	!(o instanceof org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet)	[]	[java.lang.Object:o]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	2350:2354	84:84	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2343:2355	84:84	return false	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2283:2365	83:85	if (!(o instanceof org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet)) {    return false;}	[]	[java.lang.Object:o]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2434:2434	86:86	(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o)	[]	[java.lang.Object:(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o)]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2375:2435	86:86	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet that = ((org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o))	[]	[java.lang.Object:(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o)]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2452:2465	87:87	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2474:2477	87:87	that	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2474:2492	87:87	that.backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2452:2493	87:87	backingHashSet.equals(that.backingHashSet)	[boolean:equals]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2445:2494	87:87	return backingHashSet.equals(that.backingHashSet)	[boolean:equals]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2507:2515	90:90	@java.lang.Override	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	2524:2526	90:90	int	[]	[]	[]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2556:2569	91:91	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2556:2580	91:91	backingHashSet.hashCode()	[int:hashCode]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2549:2581	91:91	return backingHashSet.hashCode()	[int:hashCode]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2657:2662	95:95	size()	[int:size]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	2646:2663	95:95	new java.lang.Object[size()]	[int:size]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	2637:2664	95:95	unwrapTo(new java.lang.Object[size()])	[java.lang.Object[]:unwrapTo, int:size]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2630:2665	95:95	return unwrapTo(new java.lang.Object[size()])	[java.lang.Object[]:unwrapTo, int:size]	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	2752:2761	99:99	iterator()	[java.util.Iterator<java.lang.Object>:iterator]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2724:2762	99:99	java.util.Iterator<java.lang.Object> iterator = iterator()	[java.util.Iterator<java.lang.Object>:iterator]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	2777:2779	100:100	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2785:2785	100:100	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2777:2785	100:100	int i = 0	[]	[]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	2777:2779	100:100	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2804:2808	100:100	array	[]	[T[]:array]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2804:2815	100:100	array.length	[]	[int:length, T[]:array]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2777:2815	100:100	int objectsLength = array.length	[]	[int:length, T[]:array]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2818:2818	100:100	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2822:2834	100:100	objectsLength	[]	[int:objectsLength]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2818:2834	100:100	i < objectsLength	[]	[int:i, int:objectsLength]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	2837:2837	100:100	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	2837:2839	100:100	i++	[]	[int:i]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2860:2867	101:101	iterator	[]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2860:2877	101:101	iterator.hasNext()	[boolean:hasNext]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2898:2902	102:102	array	[]	[T[]:array]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2904:2904	102:102	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtArrayWriteImpl	2898:2905	102:102	array[i]	[]	[int:i, T[]:array]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2913:2920	102:102	iterator	[]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	2913:2927	102:102	(T) (iterator.next())	[]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	2898:2928	102:102	array[i] = ((T) (iterator.next()))	[]	[int:i, java.util.Iterator<java.lang.Object>:iterator, T[]:array]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2856:2942	101:103	if (iterator.hasNext()) {    array[i] = ((T) (iterator.next()));}	[boolean:hasNext]	[int:i, java.util.Iterator<java.lang.Object>:iterator, T[]:array]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	2772:2952	100:104	for (int i = 0, objectsLength = array.length; i < objectsLength; i++) {    if (iterator.hasNext()) {        array[i] = ((T) (iterator.next()));    }}	[boolean:hasNext]	[int:length, int:i, int:objectsLength, java.util.Iterator<java.lang.Object>:iterator, T[]:array]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2969:2973	105:105	array	[]	[T[]:array]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2962:2974	105:105	return array	[]	[T[]:array]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3049:3058	110:110	typedArray	[]	[T[]:typedArray]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3049:3065	110:110	typedArray.length	[]	[T[]:typedArray, int:length]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	3070:3075	110:110	size()	[int:size]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3049:3075	110:110	typedArray.length) >= (size()	[int:size]	[T[]:typedArray, int:length]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3079:3088	110:110	typedArray	[]	[T[]:typedArray]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3126:3135	111:111	typedArray	[]	[T[]:typedArray]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<? extends java.lang.Object[]>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3126:3146	111:111	typedArray.getClass()	[java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<?>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3126:3165	111:111	typedArray.getClass().getComponentType()	[java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1525:1527	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	3168:3173	111:111	size()	[int:size]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	3114:3174	111:111	(T[]) (java.lang.reflect.Array.newInstance(typedArray.getClass().getComponentType(), size()))	[int:size, java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtConditionalImpl	3049:3174	110:111	(typedArray.length) >= (size())) ? typedArray : ((T[]) (java.lang.reflect.Array.newInstance(typedArray.getClass().getComponentType(), size()))	[int:size, java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray, int:length]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3037:3175	110:111	T[] array = ((typedArray.length) >= (size())) ? typedArray : ((T[]) (java.lang.reflect.Array.newInstance(typedArray.getClass().getComponentType(), size())))	[int:size, java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray, int:length]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3201:3205	112:112	array	[]	[T[]:array]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	3192:3206	112:112	unwrapTo(array)	[T[]:unwrapTo]	[T[]:array]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3185:3207	112:112	return unwrapTo(array)	[T[]:unwrapTo]	[T[]:array]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3283:3296	116:116	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3323:3327	116:116	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3308:3328	116:116	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3283:3329	116:116	backingHashSet.removeAll(asWrappedMocks(mocks))	[boolean:removeAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3276:3330	116:116	return backingHashSet.removeAll(asWrappedMocks(mocks))	[boolean:removeAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3408:3421	120:120	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3450:3454	120:120	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3435:3455	120:120	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3408:3456	120:120	backingHashSet.containsAll(asWrappedMocks(mocks))	[boolean:containsAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3401:3457	120:120	return backingHashSet.containsAll(asWrappedMocks(mocks))	[boolean:containsAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3530:3543	124:124	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3567:3571	124:124	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3552:3572	124:124	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3530:3573	124:124	backingHashSet.addAll(asWrappedMocks(mocks))	[boolean:addAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3523:3574	124:124	return backingHashSet.addAll(asWrappedMocks(mocks))	[boolean:addAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3650:3663	128:128	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3690:3694	128:128	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3675:3695	128:128	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3650:3696	128:128	backingHashSet.retainAll(asWrappedMocks(mocks))	[boolean:retainAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3643:3697	128:128	return backingHashSet.retainAll(asWrappedMocks(mocks))	[boolean:retainAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3802:3807	132:132	org.mockito.internal.util.Checks	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3822:3826	132:132	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3829:3871	132:132	"Passed collection should notify() be null"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	3802:3873	132:132	org.mockito.internal.util.Checks.checkNotNull(mocks, "Passed collection should notify() be null")	[:checkNotNull]	[java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	3931:3973	133:133	new java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3883:3974	133:133	java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> hashSet = new java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>()	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3989:4007	134:134	java.lang.Object mock	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4003:4007	134:134	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4034:4037	135:135	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4050:4077	135:135	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4033:4078	135:135	mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	4031:4078	135:135	!(mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper)	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	4082:4088	135:135	"WRONG"	[]	[]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssertImpl	Statement	class spoon.support.reflect.code.CtAssertImpl	4024:4088	135:135	assert !(mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper) : "WRONG"	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4103:4109	136:136	hashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4115:4142	136:136	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4147:4150	136:136	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	4115:4151	136:136	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	4103:4153	136:136	hashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:add, :of]	[java.lang.Object:mock, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	3984:4163	134:137	for (java.lang.Object mock : mocks) {    assert !(mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper) : "WRONG";    hashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock));}	[:add, :of]	[java.util.Collection<?>:mocks, java.lang.Object:mock, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4180:4186	138:138	hashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4173:4187	138:138	return hashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	4200:4208	141:141	@java.lang.Override	[]	[]	[]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	4252:4265	142:142	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	4252:4276	142:142	backingHashSet.toString()	[java.lang.String:toString]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4245:4277	142:142	return backingHashSet.toString()	[java.lang.String:toString]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4369:4374	146:146	java.util.Arrays	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4383:4387	146:146	mocks	[]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	4369:4388	146:146	java.util.Arrays.asList(mocks)	[java.util.List<java.lang.Object>:asList]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtInvocationImpl	4366:4389	146:146	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.util.Arrays.asList(mocks))	[java.util.List<java.lang.Object>:asList, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4359:4390	146:146	return org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.util.Arrays.asList(mocks))	[java.util.List<java.lang.Object>:asList, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of]	[java.lang.Object[]:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	4533:4562	150:150	new org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4481:4563	150:150	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Iterable<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4577:4583	151:151	objects	[]	[java.lang.Iterable<java.lang.Object>:objects]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	4588:4591	151:151	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4577:4591	151:151	objects != null	[]	[java.lang.Iterable<java.lang.Object>:objects]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4613:4633	152:152	java.lang.Object mock	[]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Iterable<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4627:4633	152:152	objects	[]	[java.lang.Iterable<java.lang.Object>:objects]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4654:4677	153:153	hashCodeAndEqualsSafeSet	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4683:4686	153:153	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	4654:4688	153:153	hashCodeAndEqualsSafeSet.add(mock)	[boolean:add]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	4608:4702	152:154	for (java.lang.Object mock : objects) {    hashCodeAndEqualsSafeSet.add(mock);}	[boolean:add]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet, java.lang.Iterable<java.lang.Object>:objects, java.lang.Object:mock]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	4573:4712	151:155	if (objects != null) {    for (java.lang.Object mock : objects) {        hashCodeAndEqualsSafeSet.add(mock);    }}	[boolean:add]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet, java.lang.Iterable<java.lang.Object>:objects, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4729:4752	156:156	hashCodeAndEqualsSafeSet	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4722:4753	156:156	return hashCodeAndEqualsSafeSet	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
