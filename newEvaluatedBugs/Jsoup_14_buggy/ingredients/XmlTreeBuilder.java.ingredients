java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	432:440	16:16	@java.lang.Override	[]	[]	[]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	562:566	18:18	input	[]	[java.lang.String:input]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	569:575	18:18	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.ParseErrorList	Expression	class spoon.support.reflect.code.CtVariableReadImpl	578:583	18:18	errors	[]	[org.jsoup.parser.ParseErrorList:errors]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	595:599	19:19	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtFieldReadImpl	605:607	19:19	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	595:609	19:19	stack.add(doc)	[boolean:add]	[org.jsoup.nodes.Document:doc, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtFieldReadImpl	701:703	20:20	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document.OutputSettings	Expression	class spoon.support.reflect.code.CtInvocationImpl	701:720	20:20	doc.outputSettings()	[org.jsoup.nodes.Document.OutputSettings:outputSettings]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	729:758	20:20	org.jsoup.nodes.Document.OutputSettings.Syntax	[]	[]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document.OutputSettings.Syntax	Expression	class spoon.support.reflect.code.CtFieldReadImpl	729:762	20:20	org.jsoup.nodes.Document.OutputSettings.Syntax.xml	[]	[org.jsoup.nodes.Document.OutputSettings.Syntax:xml]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document.OutputSettings	Expression	class spoon.support.reflect.code.CtInvocationImpl	701:764	20:20	doc.outputSettings().syntax(org.jsoup.nodes.Document.OutputSettings.Syntax.xml)	[org.jsoup.nodes.Document.OutputSettings:outputSettings]	[org.jsoup.nodes.Document:doc, org.jsoup.nodes.Document.OutputSettings.Syntax:xml]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	777:785	23:23	@java.lang.Override	[]	[]	[]	[]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	912:916	26:26	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	912:921	26:26	token.type	[]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	943:950	27:27	org.jsoup.parser.Token.TokenType.StartTag	[]	[org.jsoup.parser.Token.TokenType:StartTag]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	976:980	28:28	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtInvocationImpl	976:993	28:28	token.asStartTag()	[org.jsoup.parser.Token.StartTag:asStartTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	969:995	28:28	insert(token.asStartTag())	[org.jsoup.nodes.Element:insert, org.jsoup.parser.Token.StartTag:asStartTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1013:1018	29:29	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	938:950	27:27	case StartTag :    insert(token.asStartTag());    break;	[org.jsoup.nodes.Element:insert, org.jsoup.parser.Token.StartTag:asStartTag]	[org.jsoup.parser.Token.TokenType:StartTag, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1037:1042	30:30	org.jsoup.parser.Token.TokenType.EndTag	[]	[org.jsoup.parser.Token.TokenType:EndTag]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1077:1081	31:31	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.EndTag	Expression	class spoon.support.reflect.code.CtInvocationImpl	1077:1092	31:31	token.asEndTag()	[org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1061:1094	31:31	popStackToClose(token.asEndTag())	[void:popStackToClose, org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1112:1117	32:32	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1032:1042	30:30	case EndTag :    popStackToClose(token.asEndTag());    break;	[void:popStackToClose, org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token.TokenType:EndTag, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1136:1142	33:33	org.jsoup.parser.Token.TokenType.Comment	[]	[org.jsoup.parser.Token.TokenType:Comment]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1168:1172	34:34	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Comment	Expression	class spoon.support.reflect.code.CtInvocationImpl	1168:1184	34:34	token.asComment()	[org.jsoup.parser.Token.Comment:asComment]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1161:1186	34:34	insert(token.asComment())	[org.jsoup.parser.Token.Comment:asComment, void:insert]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1204:1209	35:35	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1131:1142	33:33	case Comment :    insert(token.asComment());    break;	[org.jsoup.parser.Token.Comment:asComment, void:insert]	[org.jsoup.parser.Token.TokenType:Comment, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1228:1236	36:36	org.jsoup.parser.Token.TokenType.Character	[]	[org.jsoup.parser.Token.TokenType:Character]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1262:1266	37:37	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Character	Expression	class spoon.support.reflect.code.CtInvocationImpl	1262:1280	37:37	token.asCharacter()	[org.jsoup.parser.Token.Character:asCharacter]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1255:1282	37:37	insert(token.asCharacter())	[void:insert, org.jsoup.parser.Token.Character:asCharacter]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1300:1305	38:38	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1223:1236	36:36	case Character :    insert(token.asCharacter());    break;	[void:insert, org.jsoup.parser.Token.Character:asCharacter]	[org.jsoup.parser.Token.TokenType:Character, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1324:1330	39:39	org.jsoup.parser.Token.TokenType.Doctype	[]	[org.jsoup.parser.Token.TokenType:Doctype]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1356:1360	40:40	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtInvocationImpl	1356:1372	40:40	token.asDoctype()	[org.jsoup.parser.Token.Doctype:asDoctype]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1349:1374	40:40	insert(token.asDoctype())	[void:insert, org.jsoup.parser.Token.Doctype:asDoctype]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1392:1397	41:41	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1319:1330	39:39	case Doctype :    insert(token.asDoctype());    break;	[void:insert, org.jsoup.parser.Token.Doctype:asDoctype]	[org.jsoup.parser.Token.TokenType:Doctype, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1416:1418	42:42	org.jsoup.parser.Token.TokenType.EOF	[]	[org.jsoup.parser.Token.TokenType:EOF]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1485:1490	43:43	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1411:1418	42:42	case EOF :    break;	[]	[org.jsoup.parser.Token.TokenType:EOF]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1529:1536	45:45	org.jsoup.helper.Validate	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1543:1567	45:45	"Unexpected token type: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1571:1575	45:45	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1571:1580	45:45	token.type	[]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1543:1580	45:45	"Unexpected token type: " + (token.type)	[]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1529:1582	45:45	org.jsoup.helper.Validate.fail(("Unexpected token type: " + (token.type)))	[void:fail]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1504:1510	44:44	default :    org.jsoup.helper.Validate.fail(("Unexpected token type: " + (token.type)));	[void:fail]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtSwitchImpl	Statement	class spoon.support.reflect.code.CtSwitchImpl	904:1592	26:46	switch (token.type) {    case StartTag :        insert(token.asStartTag());        break;    case EndTag :        popStackToClose(token.asEndTag());        break;    case Comment :        insert(token.asComment());        break;    case Character :        insert(token.asCharacter());        break;    case Doctype :        insert(token.asDoctype());        break;    case EOF :        break;    default :        org.jsoup.helper.Validate.fail(("Unexpected token type: " + (token.type)));}	[org.jsoup.parser.Token.Comment:asComment, void:fail, void:insert, org.jsoup.parser.Token.Character:asCharacter, org.jsoup.nodes.Element:insert, void:popStackToClose, org.jsoup.parser.Token.Doctype:asDoctype, org.jsoup.parser.Token.StartTag:asStartTag, org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token.TokenType:Character, org.jsoup.parser.Token.TokenType:EOF, org.jsoup.parser.Token.TokenType:Comment, org.jsoup.parser.Token.TokenType:Doctype, org.jsoup.parser.Token.TokenType:StartTag, org.jsoup.parser.Token.TokenType:EndTag, org.jsoup.parser.Token:token]	[]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1609:1612	47:47	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1602:1613	47:47	return true	[]	[]	[]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	1671:1686	51:51	currentElement()	[org.jsoup.nodes.Element:currentElement]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Node	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1700:1703	51:51	node	[]	[org.jsoup.nodes.Node:node]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	1671:1705	51:51	currentElement().appendChild(node)	[org.jsoup.nodes.Element:currentElement]	[org.jsoup.nodes.Node:node]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1778:1780	55:55	org.jsoup.parser.Tag	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1790:1797	55:55	startTag	[]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	1790:1804	55:55	startTag.name()	[java.lang.String:name]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtInvocationImpl	1778:1805	55:55	org.jsoup.parser.Tag.valueOf(startTag.name())	[java.lang.String:name, org.jsoup.parser.Tag:valueOf]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1768:1806	55:55	org.jsoup.parser.Tag tag = org.jsoup.parser.Tag.valueOf(startTag.name())	[java.lang.String:name, org.jsoup.parser.Tag:valueOf]	[org.jsoup.parser.Token.StartTag:startTag]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1942:1944	57:57	tag	[]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1947:1953	57:57	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1956:1963	57:57	startTag	[]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Attributes	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1956:1974	57:57	startTag.attributes	[]	[org.jsoup.parser.Token.StartTag:startTag, org.jsoup.nodes.Attributes:attributes]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1930:1975	57:57	new org.jsoup.nodes.Element(tag, baseUri, startTag.attributes)	[]	[org.jsoup.parser.Token.StartTag:startTag, org.jsoup.nodes.Attributes:attributes, java.lang.String:baseUri, org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1917:1976	57:57	org.jsoup.nodes.Element el = new org.jsoup.nodes.Element(tag, baseUri, startTag.attributes)	[]	[org.jsoup.parser.Token.StartTag:startTag, org.jsoup.nodes.Attributes:attributes, java.lang.String:baseUri, org.jsoup.parser.Tag:tag]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1997:1998	58:58	el	[]	[org.jsoup.nodes.Element:el]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1986:2000	58:58	insertNode(el)	[void:insertNode]	[org.jsoup.nodes.Element:el]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2014:2021	59:59	startTag	[]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2014:2037	59:59	startTag.isSelfClosing()	[boolean:isSelfClosing]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tokeniser	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2054:2062	60:60	tokeniser	[]	[org.jsoup.parser.Tokeniser:tokeniser]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	2054:2092	60:60	tokeniser.acknowledgeSelfClosingFlag()	[void:acknowledgeSelfClosingFlag]	[org.jsoup.parser.Tokeniser:tokeniser]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2111:2113	61:61	tag	[]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2111:2126	61:61	tag.isKnownTag()	[boolean:isKnownTag]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	2110:2126	61:61	!(tag.isKnownTag())	[boolean:isKnownTag]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2214:2216	62:62	tag	[]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtInvocationImpl	2214:2234	62:62	tag.setSelfClosing()	[org.jsoup.parser.Tag:setSelfClosing]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2106:2234	61:62	if (!(tag.isKnownTag()))    tag.setSelfClosing();	[boolean:isKnownTag, org.jsoup.parser.Tag:setSelfClosing]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2265:2269	64:64	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2275:2276	64:64	el	[]	[org.jsoup.nodes.Element:el]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2265:2278	64:64	stack.add(el)	[boolean:add]	[org.jsoup.nodes.Element:el, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2010:2288	59:65	if (startTag.isSelfClosing()) {    tokeniser.acknowledgeSelfClosingFlag();    if (!(tag.isKnownTag()))        tag.setSelfClosing();}else {    stack.add(el);}	[boolean:isSelfClosing, boolean:isKnownTag, org.jsoup.parser.Tag:setSelfClosing, void:acknowledgeSelfClosingFlag, boolean:add]	[org.jsoup.nodes.Element:el, org.jsoup.parser.Tokeniser:tokeniser, org.jsoup.parser.Token.StartTag:startTag, org.jsoup.parser.Tag:tag, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2305:2306	66:66	el	[]	[org.jsoup.nodes.Element:el]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2298:2307	66:66	return el	[]	[org.jsoup.nodes.Element:el]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Comment	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2400:2411	70:70	commentToken	[]	[org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2400:2421	70:70	commentToken.getData()	[java.lang.String:getData]	[org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2424:2430	70:70	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Comment	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2388:2431	70:70	new org.jsoup.nodes.Comment(commentToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2370:2432	70:70	org.jsoup.nodes.Comment comment = new org.jsoup.nodes.Comment(commentToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Comment:commentToken]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Comment	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2456:2462	71:71	comment	[]	[org.jsoup.nodes.Comment:comment]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2442:2463	71:71	org.jsoup.nodes.Node insert = comment	[]	[org.jsoup.nodes.Comment:comment]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Comment	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2477:2488	72:72	commentToken	[]	[org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2477:2494	72:72	commentToken.bogus	[]	[boolean:bogus, org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Comment	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2714:2720	74:74	comment	[]	[org.jsoup.nodes.Comment:comment]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2714:2730	74:74	comment.getData()	[java.lang.String:getData]	[org.jsoup.nodes.Comment:comment]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2700:2731	74:74	java.lang.String data = comment.getData()	[java.lang.String:getData]	[org.jsoup.nodes.Comment:comment]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2749:2752	75:75	data	[]	[java.lang.String:data]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2749:2761	75:75	data.length()	[int:length]	[java.lang.String:data]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2765:2765	75:75	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2749:2765	75:75	(data.length()) > 1	[int:length]	[java.lang.String:data]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2771:2774	75:75	data	[]	[java.lang.String:data]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2787:2789	75:75	"!"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2771:2790	75:75	data.startsWith("!")	[boolean:startsWith]	[java.lang.String:data]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2795:2798	75:75	data	[]	[java.lang.String:data]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2811:2813	75:75	"?"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2795:2814	75:75	data.startsWith("?")	[boolean:startsWith]	[java.lang.String:data]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2770:2815	75:75	(data.startsWith("!")) || (data.startsWith("?"))	[boolean:startsWith]	[java.lang.String:data]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2749:2815	75:75	(data.length()) > 1) && ((data.startsWith("!")) || (data.startsWith("?"))	[int:length, boolean:startsWith]	[java.lang.String:data]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2857:2860	76:76	data	[]	[java.lang.String:data]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2872:2872	76:76	1	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2857:2873	76:76	data.substring(1)	[java.lang.String:substring]	[java.lang.String:data]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2836:2874	76:76	java.lang.String declaration = data.substring(1)	[java.lang.String:substring]	[java.lang.String:data]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Node	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	2892:2897	77:77	insert	[]	[org.jsoup.nodes.Node:insert]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2920:2930	77:77	declaration	[]	[java.lang.String:declaration]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Comment	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2933:2939	77:77	comment	[]	[org.jsoup.nodes.Comment:comment]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2933:2949	77:77	comment.baseUri()	[java.lang.String:baseUri]	[org.jsoup.nodes.Comment:comment]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2952:2955	77:77	data	[]	[java.lang.String:data]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2968:2970	77:77	"!"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2952:2971	77:77	data.startsWith("!")	[boolean:startsWith]	[java.lang.String:data]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.XmlDeclaration	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2901:2972	77:77	new org.jsoup.nodes.XmlDeclaration(declaration, comment.baseUri(), data.startsWith("!"))	[java.lang.String:baseUri, boolean:startsWith]	[org.jsoup.nodes.Comment:comment, java.lang.String:data, java.lang.String:declaration]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	2892:2973	77:77	insert = new org.jsoup.nodes.XmlDeclaration(declaration, comment.baseUri(), data.startsWith("!"))	[java.lang.String:baseUri, boolean:startsWith]	[org.jsoup.nodes.Node:insert, org.jsoup.nodes.Comment:comment, java.lang.String:data, java.lang.String:declaration]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2745:2987	75:78	if (((data.length()) > 1) && ((data.startsWith("!")) || (data.startsWith("?")))) {    java.lang.String declaration = data.substring(1);    insert = new org.jsoup.nodes.XmlDeclaration(declaration, comment.baseUri(), data.startsWith("!"));}	[int:length, java.lang.String:substring, java.lang.String:baseUri, boolean:startsWith]	[org.jsoup.nodes.Node:insert, java.lang.String:data, org.jsoup.nodes.Comment:comment, java.lang.String:declaration]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2473:2997	72:79	if (commentToken.bogus) {    java.lang.String data = comment.getData();    if (((data.length()) > 1) && ((data.startsWith("!")) || (data.startsWith("?")))) {        java.lang.String declaration = data.substring(1);        insert = new org.jsoup.nodes.XmlDeclaration(declaration, comment.baseUri(), data.startsWith("!"));    }}	[int:length, java.lang.String:substring, java.lang.String:baseUri, java.lang.String:getData, boolean:startsWith]	[org.jsoup.nodes.Node:insert, boolean:bogus, org.jsoup.nodes.Comment:comment, java.lang.String:data, org.jsoup.parser.Token.Comment:commentToken, java.lang.String:declaration]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Node	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3018:3023	80:80	insert	[]	[org.jsoup.nodes.Node:insert]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	3007:3025	80:80	insertNode(insert)	[void:insertNode]	[org.jsoup.nodes.Node:insert]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Character	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3117:3130	84:84	characterToken	[]	[org.jsoup.parser.Token.Character:characterToken]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3117:3140	84:84	characterToken.getData()	[java.lang.String:getData]	[org.jsoup.parser.Token.Character:characterToken]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3143:3149	84:84	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.TextNode	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	3104:3150	84:84	new org.jsoup.nodes.TextNode(characterToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Character:characterToken]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3092:3151	84:84	org.jsoup.nodes.Node node = new org.jsoup.nodes.TextNode(characterToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Character:characterToken]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Node	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3172:3175	85:85	node	[]	[org.jsoup.nodes.Node:node]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	3161:3177	85:85	insertNode(node)	[void:insertNode]	[org.jsoup.nodes.Node:node]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3273:3273	89:89	d	[]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3273:3283	89:89	d.getName()	[java.lang.String:getName]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3286:3286	89:89	d	[]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3286:3308	89:89	d.getPublicIdentifier()	[java.lang.String:getPublicIdentifier]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3311:3311	89:89	d	[]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3311:3333	89:89	d.getSystemIdentifier()	[java.lang.String:getSystemIdentifier]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3336:3342	89:89	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.DocumentType	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	3256:3343	89:89	new org.jsoup.nodes.DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri)	[java.lang.String:getName, java.lang.String:getPublicIdentifier, java.lang.String:getSystemIdentifier]	[java.lang.String:baseUri, org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3229:3344	89:89	org.jsoup.nodes.DocumentType doctypeNode = new org.jsoup.nodes.DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri)	[java.lang.String:getName, java.lang.String:getPublicIdentifier, java.lang.String:getSystemIdentifier]	[java.lang.String:baseUri, org.jsoup.parser.Token.Doctype:d]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.DocumentType	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3365:3375	90:90	doctypeNode	[]	[org.jsoup.nodes.DocumentType:doctypeNode]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	3354:3377	90:90	insertNode(doctypeNode)	[void:insertNode]	[org.jsoup.nodes.DocumentType:doctypeNode]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.EndTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3649:3654	100:100	endTag	[]	[org.jsoup.parser.Token.EndTag:endTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3649:3661	100:100	endTag.name()	[java.lang.String:name]	[org.jsoup.parser.Token.EndTag:endTag]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3633:3662	100:100	java.lang.String elName = endTag.name()	[java.lang.String:name]	[org.jsoup.parser.Token.EndTag:endTag]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	3693:3696	101:101	null	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3672:3697	101:101	org.jsoup.nodes.Element firstFound = null	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	3713:3715	103:103	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3723:3727	103:103	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	3723:3734	103:103	stack.size()	[int:size]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	3737:3737	103:103	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3723:3737	103:103	(stack.size()) - 1	[int:size]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3713:3737	103:103	int pos = (stack.size()) - 1	[int:size]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3740:3742	103:103	pos	[]	[int:pos]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	3747:3747	103:103	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3740:3747	103:103	pos >= 0	[]	[int:pos]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3750:3752	103:103	pos	[]	[int:pos]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	3750:3754	103:103	pos--	[]	[int:pos]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3786:3790	104:104	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3796:3798	104:104	pos	[]	[int:pos]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	3786:3799	104:104	stack.get(pos)	[org.jsoup.nodes.Element:get]	[int:pos, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3771:3800	104:104	org.jsoup.nodes.Element next = stack.get(pos)	[org.jsoup.nodes.Element:get]	[int:pos, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3818:3821	105:105	next	[]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	3818:3832	105:105	next.nodeName()	[java.lang.String:nodeName]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3841:3846	105:105	elName	[]	[java.lang.String:elName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3818:3847	105:105	next.nodeName().equals(elName)	[java.lang.String:nodeName, boolean:nodeName]	[java.lang.String:elName, org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3868:3877	106:106	firstFound	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3881:3884	106:106	next	[]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3868:3885	106:106	firstFound = next	[]	[org.jsoup.nodes.Element:next, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	3903:3908	107:107	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	3814:3922	105:108	if (next.nodeName().equals(elName)) {    firstFound = next;    break;}	[java.lang.String:nodeName, boolean:nodeName]	[java.lang.String:elName, org.jsoup.nodes.Element:next, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	3708:3932	103:109	for (int pos = (stack.size()) - 1; pos >= 0; pos--) {    org.jsoup.nodes.Element next = stack.get(pos);    if (next.nodeName().equals(elName)) {        firstFound = next;        break;    }}	[java.lang.String:nodeName, org.jsoup.nodes.Element:get, int:size, boolean:nodeName]	[java.lang.String:elName, org.jsoup.nodes.Element:next, int:pos, java.util.ArrayList<org.jsoup.nodes.Element>:stack, org.jsoup.nodes.Element:firstFound]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3946:3955	110:110	firstFound	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	3960:3963	110:110	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3946:3963	110:110	firstFound == null	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3978:3984	111:111	return 	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	3942:3984	110:111	if (firstFound == null)    return ;	[]	[org.jsoup.nodes.Element:firstFound]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	4019:4021	113:113	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	4029:4033	113:113	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	4029:4040	113:113	stack.size()	[int:size]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4043:4043	113:113	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4029:4043	113:113	(stack.size()) - 1	[int:size]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4019:4043	113:113	int pos = (stack.size()) - 1	[int:size]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4046:4048	113:113	pos	[]	[int:pos]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	4053:4053	113:113	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4046:4053	113:113	pos >= 0	[]	[int:pos]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	4056:4058	113:113	pos	[]	[int:pos]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	4056:4060	113:113	pos--	[]	[int:pos]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	4092:4096	114:114	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4102:4104	114:114	pos	[]	[int:pos]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	4092:4105	114:114	stack.get(pos)	[org.jsoup.nodes.Element:get]	[int:pos, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4077:4106	114:114	org.jsoup.nodes.Element next = stack.get(pos)	[org.jsoup.nodes.Element:get]	[int:pos, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	4120:4124	115:115	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4133:4135	115:115	pos	[]	[int:pos]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	4120:4137	115:115	stack.remove(pos)	[org.jsoup.nodes.Element:remove]	[int:pos, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4155:4158	116:116	next	[]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4163:4172	116:116	firstFound	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4155:4172	116:116	next == firstFound	[]	[org.jsoup.nodes.Element:next, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	4191:4196	117:117	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtBreakImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	4151:4196	116:117	if (next == firstFound)    break;	[]	[org.jsoup.nodes.Element:next, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	4014:4206	113:118	for (int pos = (stack.size()) - 1; pos >= 0; pos--) {    org.jsoup.nodes.Element next = stack.get(pos);    stack.remove(pos);    if (next == firstFound)        break;}	[org.jsoup.nodes.Element:get, org.jsoup.nodes.Element:remove, int:size]	[org.jsoup.nodes.Element:next, int:pos, java.util.ArrayList<org.jsoup.nodes.Element>:stack, org.jsoup.nodes.Element:firstFound]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4331:4343	122:122	inputFragment	[]	[java.lang.String:inputFragment]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4346:4352	122:122	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.ParseErrorList	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4355:4360	122:122	errors	[]	[org.jsoup.parser.ParseErrorList:errors]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	4315:4362	122:122	initialiseParse(inputFragment, baseUri, errors)	[void:initialiseParse]	[java.lang.String:inputFragment, java.lang.String:baseUri, org.jsoup.parser.ParseErrorList:errors]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	4372:4383	123:123	runParser()	[void:runParser]	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtFieldReadImpl	4400:4402	124:124	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<org.jsoup.nodes.Node>	Expression	class spoon.support.reflect.code.CtInvocationImpl	4400:4415	124:124	doc.childNodes()	[java.util.List<org.jsoup.nodes.Node>:childNodes]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4393:4416	124:124	return doc.childNodes()	[java.util.List<org.jsoup.nodes.Node>:childNodes]	[org.jsoup.nodes.Document:doc]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
