java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	388:398	14:14	"unchecked"	[]	[]	[spoon.support.reflect.declaration.CtAnnotationImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.SuppressWarnings	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	370:399	14:14	@java.lang.SuppressWarnings("unchecked")	[]	[]	[spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.List<org.hamcrest.Matcher>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	709:716	21:21	matchers	[]	[java.util.List<org.hamcrest.Matcher>:matchers]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	709:723	21:21	matchers.size()	[int:size]	[java.util.List<org.hamcrest.Matcher>:matchers]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	728:736	21:21	arguments	[]	[java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	728:743	21:21	arguments.length	[]	[int:length, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	709:743	21:21	matchers.size()) != (arguments.length	[int:size]	[int:length, java.util.List<org.hamcrest.Matcher>:matchers, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	779:779	22:22	0	[]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.Integer[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	767:780	22:22	new java.lang.Integer[0]	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	760:781	22:22	return new java.lang.Integer[0]	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	705:791	21:23	if ((matchers.size()) != (arguments.length)) {    return new java.lang.Integer[0];}	[int:size]	[int:length, java.util.List<org.hamcrest.Matcher>:matchers, java.lang.Object[]:arguments]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.LinkedList<java.lang.Integer>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	837:861	25:25	new java.util.LinkedList<java.lang.Integer>()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	810:862	25:25	java.util.List<java.lang.Integer> suspicious = new java.util.LinkedList<java.lang.Integer>()	[]	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	872:874	26:26	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	880:880	26:26	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	872:881	26:26	int i = 0	[]	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	896:915	27:27	org.hamcrest.Matcher m	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<org.hamcrest.Matcher>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	908:915	27:27	matchers	[]	[java.util.List<org.hamcrest.Matcher>:matchers]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.hamcrest.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	936:936	28:28	m	[]	[org.hamcrest.Matcher:m]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	949:976	28:28	org.mockito.internal.matchers.ContainsExtraTypeInformation	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	936:976	28:28	m instanceof org.mockito.internal.matchers.ContainsExtraTypeInformation	[]	[org.hamcrest.Matcher:m]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.hamcrest.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1017:1017	29:29	m	[]	[org.hamcrest.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1020:1028	29:29	arguments	[]	[java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1030:1030	29:29	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtArrayReadImpl	1020:1031	29:29	arguments[i]	[]	[int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1003:1032	29:29	safelyMatches(m, arguments[i])	[boolean:safelyMatches]	[org.hamcrest.Matcher:m, int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	1002:1032	29:29	!(safelyMatches(m, arguments[i]))	[boolean:safelyMatches]	[org.hamcrest.Matcher:m, int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	936:1032	28:29	(m instanceof org.mockito.internal.matchers.ContainsExtraTypeInformation) && (!(safelyMatches(m, arguments[i])))	[boolean:safelyMatches]	[org.hamcrest.Matcher:m, int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.hamcrest.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1073:1073	30:30	m	[]	[org.hamcrest.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1076:1084	30:30	arguments	[]	[java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1086:1086	30:30	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtArrayReadImpl	1076:1087	30:30	arguments[i]	[]	[int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1058:1088	30:30	toStringEquals(m, arguments[i])	[boolean:toStringEquals]	[org.hamcrest.Matcher:m, int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	936:1088	28:30	((m instanceof org.mockito.internal.matchers.ContainsExtraTypeInformation) && (!(safelyMatches(m, arguments[i])))) && (toStringEquals(m, arguments[i]))	[boolean:safelyMatches, boolean:toStringEquals]	[org.hamcrest.Matcher:m, int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.hamcrest.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1146:1146	31:31	(org.mockito.internal.matchers.ContainsExtraTypeInformation) (m)	[]	[org.hamcrest.Matcher:(org.mockito.internal.matchers.ContainsExtraTypeInformation) (m)]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1161:1169	31:31	arguments	[]	[java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1171:1171	31:31	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtArrayReadImpl	1161:1172	31:31	arguments[i]	[]	[int:i, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1114:1173	31:31	((org.mockito.internal.matchers.ContainsExtraTypeInformation) (m)).typeMatches(arguments[i])	[]	[int:i, org.hamcrest.Matcher:(org.mockito.internal.matchers.ContainsExtraTypeInformation) (m), java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	1113:1173	31:31	!(((org.mockito.internal.matchers.ContainsExtraTypeInformation) (m)).typeMatches(arguments[i]))	[]	[int:i, org.hamcrest.Matcher:(org.mockito.internal.matchers.ContainsExtraTypeInformation) (m), java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	936:1173	28:31	((m instanceof org.mockito.internal.matchers.ContainsExtraTypeInformation) && (!(safelyMatches(m, arguments[i])))) && (toStringEquals(m, arguments[i]))) && (!(((org.mockito.internal.matchers.ContainsExtraTypeInformation) (m)).typeMatches(arguments[i]))	[boolean:safelyMatches, boolean:toStringEquals]	[org.hamcrest.Matcher:m, int:i, org.hamcrest.Matcher:(org.mockito.internal.matchers.ContainsExtraTypeInformation) (m), java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<java.lang.Integer>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1194:1203	32:32	suspicious	[]	[java.util.List<java.lang.Integer>:suspicious]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1209:1209	32:32	i	[]	[int:i]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1194:1211	32:32	suspicious.add(i)	[boolean:add]	[int:i, java.util.List<java.lang.Integer>:suspicious]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	932:1225	28:33	if ((((m instanceof org.mockito.internal.matchers.ContainsExtraTypeInformation) && (!(safelyMatches(m, arguments[i])))) && (toStringEquals(m, arguments[i]))) && (!(((org.mockito.internal.matchers.ContainsExtraTypeInformation) (m)).typeMatches(arguments[i])))) {    suspicious.add(i);}	[boolean:safelyMatches, boolean:toStringEquals, boolean:add]	[org.hamcrest.Matcher:m, int:i, org.hamcrest.Matcher:(org.mockito.internal.matchers.ContainsExtraTypeInformation) (m), java.util.List<java.lang.Integer>:suspicious, java.lang.Object[]:arguments]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	1239:1239	34:34	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	1239:1242	34:34	i++	[]	[int:i]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	891:1252	27:35	for (org.hamcrest.Matcher m : matchers) {    if ((((m instanceof org.mockito.internal.matchers.ContainsExtraTypeInformation) && (!(safelyMatches(m, arguments[i])))) && (toStringEquals(m, arguments[i]))) && (!(((org.mockito.internal.matchers.ContainsExtraTypeInformation) (m)).typeMatches(arguments[i])))) {        suspicious.add(i);    }    i++;}	[boolean:safelyMatches, boolean:toStringEquals, boolean:add]	[org.hamcrest.Matcher:m, int:i, java.util.List<org.hamcrest.Matcher>:matchers, org.hamcrest.Matcher:(org.mockito.internal.matchers.ContainsExtraTypeInformation) (m), java.util.List<java.lang.Integer>:suspicious, java.lang.Object[]:arguments]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<java.lang.Integer>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1269:1278	36:36	suspicious	[]	[java.util.List<java.lang.Integer>:suspicious]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	1300:1300	36:36	0	[]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Integer[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	1288:1301	36:36	new java.lang.Integer[0]	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Integer[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	1269:1302	36:36	suspicious.toArray(new java.lang.Integer[0])	[java.lang.Integer[]:toArray]	[java.util.List<java.lang.Integer>:suspicious]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1262:1303	36:36	return suspicious.toArray(new java.lang.Integer[0])	[java.lang.Integer[]:toArray]	[java.util.List<java.lang.Integer>:suspicious]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.hamcrest.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1404:1404	41:41	m	[]	[org.hamcrest.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1414:1416	41:41	arg	[]	[java.lang.Object:arg]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1404:1417	41:41	m.matches(arg)	[boolean:matches]	[org.hamcrest.Matcher:m, java.lang.Object:arg]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1397:1418	41:41	return m.matches(arg)	[boolean:matches]	[org.hamcrest.Matcher:m, java.lang.Object:arg]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1471:1475	43:43	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1464:1476	43:43	return false	[]	[]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	1379:1486	40:44	try {    return m.matches(arg);} catch (java.lang.Throwable t) {    return false;}	[boolean:matches]	[org.hamcrest.Matcher:m, java.lang.Object:arg]	[]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1570:1586	48:48	org.hamcrest.StringDescription	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.hamcrest.Matcher	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1597:1597	48:48	m	[]	[org.hamcrest.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	1570:1598	48:48	org.hamcrest.StringDescription.toString(m)	[java.lang.String:toString]	[org.hamcrest.Matcher:m]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1607:1609	48:48	arg	[]	[java.lang.Object:arg]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1614:1617	48:48	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1607:1617	48:48	arg == null	[]	[java.lang.Object:arg]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1620:1625	48:48	"null"	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1629:1631	48:48	arg	[]	[java.lang.Object:arg]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	1629:1642	48:48	arg.toString()	[java.lang.String:toString]	[java.lang.Object:arg]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtConditionalImpl	1607:1642	48:48	arg == null ? "null" : arg.toString()	[java.lang.String:toString]	[java.lang.Object:arg]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1570:1643	48:48	org.hamcrest.StringDescription.toString(m).equals((arg == null ? "null" : arg.toString()))	[boolean:toString, java.lang.String:toString]	[org.hamcrest.Matcher:m, java.lang.Object:arg]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1563:1644	48:48	return org.hamcrest.StringDescription.toString(m).equals((arg == null ? "null" : arg.toString()))	[boolean:toString, java.lang.String:toString]	[org.hamcrest.Matcher:m, java.lang.Object:arg]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
