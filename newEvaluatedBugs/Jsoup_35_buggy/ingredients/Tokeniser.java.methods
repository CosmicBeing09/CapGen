Itr		java.util.ArrayList$Itr	[]
Itr	boolean	hasNext	[]
Itr	E	next	[]
Itr	void	remove	[]
Itr	void	forEachRemaining	[java.util.function.Consumer]
Itr	void	checkForComodification	[]
ListItr		java.util.ArrayList$ListItr	[int]
ListItr	boolean	hasPrevious	[]
ListItr	int	nextIndex	[]
ListItr	int	previousIndex	[]
ListItr	E	previous	[]
ListItr	void	set	[E]
ListItr	void	add	[E]
SubList		java.util.ArrayList$SubList	[java.util.AbstractList, int, int, int]
SubList	E	set	[int, E]
SubList	E	get	[int]
SubList	int	size	[]
SubList	void	add	[int, E]
SubList	E	remove	[int]
SubList	void	removeRange	[int, int]
SubList	boolean	addAll	[java.util.Collection]
SubList	boolean	addAll	[int, java.util.Collection]
SubList	java.util.Iterator<E>	iterator	[]
1		java.util.ArrayList$SubList$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	boolean	hasPrevious	[]
1	E	previous	[]
1	void	forEachRemaining	[java.util.function.Consumer]
1	int	nextIndex	[]
1	int	previousIndex	[]
1	void	remove	[]
1	void	set	[E]
1	void	add	[E]
1	void	checkForComodification	[]
SubList	java.util.ListIterator<E>	listIterator	[int]
SubList	java.util.List<E>	subList	[int, int]
SubList	void	rangeCheck	[int]
SubList	void	rangeCheckForAdd	[int]
SubList	java.lang.String	outOfBoundsMsg	[int]
SubList	void	checkForComodification	[]
SubList	java.util.Spliterator<E>	spliterator	[]
ArrayListSpliterator		java.util.ArrayList$ArrayListSpliterator	[java.util.ArrayList, int, int, int]
ArrayListSpliterator	int	getFence	[]
ArrayListSpliterator	java.util.ArrayList.ArrayListSpliterator<E>	trySplit	[]
ArrayListSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
ArrayListSpliterator	void	forEachRemaining	[java.util.function.Consumer]
ArrayListSpliterator	long	estimateSize	[]
ArrayListSpliterator	int	characteristics	[]
ArrayList		java.util.ArrayList	[int]
ArrayList		java.util.ArrayList	[]
ArrayList		java.util.ArrayList	[java.util.Collection]
ArrayList	void	trimToSize	[]
ArrayList	void	ensureCapacity	[int]
ArrayList	void	ensureCapacityInternal	[int]
ArrayList	void	ensureExplicitCapacity	[int]
ArrayList	void	grow	[int]
ArrayList	int	hugeCapacity	[int]
ArrayList	int	size	[]
ArrayList	boolean	isEmpty	[]
ArrayList	boolean	contains	[java.lang.Object]
ArrayList	int	indexOf	[java.lang.Object]
ArrayList	int	lastIndexOf	[java.lang.Object]
ArrayList	java.lang.Object	clone	[]
ArrayList	java.lang.Object[]	toArray	[]
ArrayList	T[]	toArray	[T[]]
ArrayList	E	elementData	[int]
ArrayList	E	get	[int]
ArrayList	E	set	[int, E]
ArrayList	boolean	add	[E]
ArrayList	void	add	[int, E]
ArrayList	E	remove	[int]
ArrayList	boolean	remove	[java.lang.Object]
ArrayList	void	fastRemove	[int]
ArrayList	void	clear	[]
ArrayList	boolean	addAll	[java.util.Collection]
ArrayList	boolean	addAll	[int, java.util.Collection]
ArrayList	void	removeRange	[int, int]
ArrayList	void	rangeCheck	[int]
ArrayList	void	rangeCheckForAdd	[int]
ArrayList	java.lang.String	outOfBoundsMsg	[int]
ArrayList	boolean	removeAll	[java.util.Collection]
ArrayList	boolean	retainAll	[java.util.Collection]
ArrayList	boolean	batchRemove	[java.util.Collection, boolean]
ArrayList	void	writeObject	[java.io.ObjectOutputStream]
ArrayList	void	readObject	[java.io.ObjectInputStream]
ArrayList	java.util.ListIterator<E>	listIterator	[int]
ArrayList	java.util.ListIterator<E>	listIterator	[]
ArrayList	java.util.Iterator<E>	iterator	[]
ArrayList	java.util.List<E>	subList	[int, int]
ArrayList	void	subListRangeCheck	[int, int, int]
ArrayList	void	forEach	[java.util.function.Consumer]
ArrayList	java.util.Spliterator<E>	spliterator	[]
ArrayList	boolean	removeIf	[java.util.function.Predicate]
ArrayList	void	replaceAll	[java.util.function.UnaryOperator]
ArrayList	void	sort	[java.util.Comparator]
Validate		org.jsoup.helper.Validate	[]
Validate	void	notNull	[java.lang.Object]
Validate	void	notNull	[java.lang.Object, java.lang.String]
Validate	void	isTrue	[boolean]
Validate	void	isTrue	[boolean, java.lang.String]
Validate	void	isFalse	[boolean]
Validate	void	isFalse	[boolean, java.lang.String]
Validate	void	noNullElements	[java.lang.Object[]]
Validate	void	noNullElements	[java.lang.Object[], java.lang.String]
Validate	void	notEmpty	[java.lang.String]
Validate	void	notEmpty	[java.lang.String, java.lang.String]
Validate	void	fail	[java.lang.String]
EscapeMode		org.jsoup.nodes.Entities$EscapeMode	[java.util.Map]
EscapeMode	java.util.Map<java.lang.Character, java.lang.String>	getMap	[]
Entities		org.jsoup.nodes.Entities	[]
Entities	boolean	isNamedEntity	[java.lang.String]
Entities	boolean	isBaseNamedEntity	[java.lang.String]
Entities	java.lang.Character	getCharacterByName	[java.lang.String]
Entities	java.lang.String	escape	[java.lang.String, org.jsoup.nodes.Document$OutputSettings]
Entities	java.lang.String	escape	[java.lang.String, java.nio.charset.CharsetEncoder, org.jsoup.nodes.Entities$EscapeMode]
Entities	java.lang.String	unescape	[java.lang.String]
Entities	java.lang.String	unescape	[java.lang.String, boolean]
Entities	java.util.Map<java.lang.String, java.lang.Character>	loadEntities	[java.lang.String]
Entities	java.util.Map<java.lang.Character, java.lang.String>	toCharacterKey	[java.util.Map]
Tokeniser		org.jsoup.parser.Tokeniser	[org.jsoup.parser.CharacterReader, org.jsoup.parser.ParseErrorList]
Tokeniser	org.jsoup.parser.Token	read	[]
Tokeniser	void	emit	[org.jsoup.parser.Token]
Tokeniser	void	emit	[java.lang.String]
Tokeniser	void	emit	[char]
Tokeniser	org.jsoup.parser.TokeniserState	getState	[]
Tokeniser	void	transition	[org.jsoup.parser.TokeniserState]
Tokeniser	void	advanceTransition	[org.jsoup.parser.TokeniserState]
Tokeniser	void	acknowledgeSelfClosingFlag	[]
Tokeniser	java.lang.Character	consumeCharacterReference	[java.lang.Character, boolean]
Tokeniser	org.jsoup.parser.Token.Tag	createTagPending	[boolean]
Tokeniser	void	emitTagPending	[]
Tokeniser	void	createCommentPending	[]
Tokeniser	void	emitCommentPending	[]
Tokeniser	void	createDoctypePending	[]
Tokeniser	void	emitDoctypePending	[]
Tokeniser	void	createTempBuffer	[]
Tokeniser	boolean	isAppropriateEndTagToken	[]
Tokeniser	java.lang.String	appropriateEndTagName	[]
Tokeniser	void	error	[org.jsoup.parser.TokeniserState]
Tokeniser	void	eofError	[org.jsoup.parser.TokeniserState]
Tokeniser	void	characterReferenceError	[java.lang.String]
Tokeniser	void	error	[java.lang.String]
Tokeniser	boolean	currentNodeInHtmlNS	[]
Tokeniser	java.lang.String	unescapeEntities	[boolean]
