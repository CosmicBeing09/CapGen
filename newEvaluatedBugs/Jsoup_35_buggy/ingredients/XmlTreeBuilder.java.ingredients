java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	205:213	12:12	@java.lang.Override	[]	[]	[]	[]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	335:339	14:14	input	[]	[java.lang.String:input]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	342:348	14:14	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.ParseErrorList	Expression	class spoon.support.reflect.code.CtVariableReadImpl	351:356	14:14	errors	[]	[org.jsoup.parser.ParseErrorList:errors]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	368:372	15:15	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Document	Expression	class spoon.support.reflect.code.CtFieldReadImpl	378:380	15:15	doc	[]	[org.jsoup.nodes.Document:doc]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	368:382	15:15	stack.add(doc)	[boolean:add]	[org.jsoup.nodes.Document:doc, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	477:485	18:18	@java.lang.Override	[]	[]	[]	[]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	612:616	21:21	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	612:621	21:21	token.type	[]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	643:650	22:22	org.jsoup.parser.Token.TokenType.StartTag	[]	[org.jsoup.parser.Token.TokenType:StartTag]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	676:680	23:23	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtInvocationImpl	676:693	23:23	token.asStartTag()	[org.jsoup.parser.Token.StartTag:asStartTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	669:695	23:23	insert(token.asStartTag())	[org.jsoup.nodes.Element:insert, org.jsoup.parser.Token.StartTag:asStartTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	713:718	24:24	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	638:650	22:22	case StartTag :    insert(token.asStartTag());    break;	[org.jsoup.nodes.Element:insert, org.jsoup.parser.Token.StartTag:asStartTag]	[org.jsoup.parser.Token.TokenType:StartTag, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	737:742	25:25	org.jsoup.parser.Token.TokenType.EndTag	[]	[org.jsoup.parser.Token.TokenType:EndTag]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	777:781	26:26	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.EndTag	Expression	class spoon.support.reflect.code.CtInvocationImpl	777:792	26:26	token.asEndTag()	[org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	761:794	26:26	popStackToClose(token.asEndTag())	[void:popStackToClose, org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	812:817	27:27	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	732:742	25:25	case EndTag :    popStackToClose(token.asEndTag());    break;	[void:popStackToClose, org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token.TokenType:EndTag, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	836:842	28:28	org.jsoup.parser.Token.TokenType.Comment	[]	[org.jsoup.parser.Token.TokenType:Comment]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	868:872	29:29	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Comment	Expression	class spoon.support.reflect.code.CtInvocationImpl	868:884	29:29	token.asComment()	[org.jsoup.parser.Token.Comment:asComment]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	861:886	29:29	insert(token.asComment())	[org.jsoup.parser.Token.Comment:asComment, void:insert]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	904:909	30:30	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	831:842	28:28	case Comment :    insert(token.asComment());    break;	[org.jsoup.parser.Token.Comment:asComment, void:insert]	[org.jsoup.parser.Token.TokenType:Comment, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	928:936	31:31	org.jsoup.parser.Token.TokenType.Character	[]	[org.jsoup.parser.Token.TokenType:Character]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	962:966	32:32	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Character	Expression	class spoon.support.reflect.code.CtInvocationImpl	962:980	32:32	token.asCharacter()	[org.jsoup.parser.Token.Character:asCharacter]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	955:982	32:32	insert(token.asCharacter())	[void:insert, org.jsoup.parser.Token.Character:asCharacter]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1000:1005	33:33	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	923:936	31:31	case Character :    insert(token.asCharacter());    break;	[void:insert, org.jsoup.parser.Token.Character:asCharacter]	[org.jsoup.parser.Token.TokenType:Character, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1024:1030	34:34	org.jsoup.parser.Token.TokenType.Doctype	[]	[org.jsoup.parser.Token.TokenType:Doctype]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1056:1060	35:35	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtInvocationImpl	1056:1072	35:35	token.asDoctype()	[org.jsoup.parser.Token.Doctype:asDoctype]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1049:1074	35:35	insert(token.asDoctype())	[void:insert, org.jsoup.parser.Token.Doctype:asDoctype]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1092:1097	36:36	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1019:1030	34:34	case Doctype :    insert(token.asDoctype());    break;	[void:insert, org.jsoup.parser.Token.Doctype:asDoctype]	[org.jsoup.parser.Token.TokenType:Doctype, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1116:1118	37:37	org.jsoup.parser.Token.TokenType.EOF	[]	[org.jsoup.parser.Token.TokenType:EOF]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	1185:1190	38:38	break	[]	[]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1111:1118	37:37	case EOF :    break;	[]	[org.jsoup.parser.Token.TokenType:EOF]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1229:1236	40:40	org.jsoup.helper.Validate	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1243:1267	40:40	"Unexpected token type: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1271:1275	40:40	token	[]	[org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.TokenType	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1271:1280	40:40	token.type	[]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1243:1280	40:40	"Unexpected token type: " + (token.type)	[]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1229:1282	40:40	org.jsoup.helper.Validate.fail(("Unexpected token type: " + (token.type)))	[void:fail]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtCaseImpl	Statement	class spoon.support.reflect.code.CtCaseImpl	1204:1210	39:39	default :    org.jsoup.helper.Validate.fail(("Unexpected token type: " + (token.type)));	[void:fail]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token:token]	[spoon.support.reflect.code.CtSwitchImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtSwitchImpl	Statement	class spoon.support.reflect.code.CtSwitchImpl	604:1292	21:41	switch (token.type) {    case StartTag :        insert(token.asStartTag());        break;    case EndTag :        popStackToClose(token.asEndTag());        break;    case Comment :        insert(token.asComment());        break;    case Character :        insert(token.asCharacter());        break;    case Doctype :        insert(token.asDoctype());        break;    case EOF :        break;    default :        org.jsoup.helper.Validate.fail(("Unexpected token type: " + (token.type)));}	[org.jsoup.parser.Token.Comment:asComment, void:fail, void:insert, org.jsoup.parser.Token.Character:asCharacter, org.jsoup.nodes.Element:insert, void:popStackToClose, org.jsoup.parser.Token.Doctype:asDoctype, org.jsoup.parser.Token.StartTag:asStartTag, org.jsoup.parser.Token.EndTag:asEndTag]	[org.jsoup.parser.Token.TokenType:type, org.jsoup.parser.Token.TokenType:Character, org.jsoup.parser.Token.TokenType:EOF, org.jsoup.parser.Token.TokenType:Comment, org.jsoup.parser.Token.TokenType:Doctype, org.jsoup.parser.Token.TokenType:StartTag, org.jsoup.parser.Token.TokenType:EndTag, org.jsoup.parser.Token:token]	[]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1309:1312	42:42	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1302:1313	42:42	return true	[]	[]	[]	[spoon.support.reflect.code.CtSwitchImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtCaseImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	1371:1386	46:46	currentElement()	[org.jsoup.nodes.Element:currentElement]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Node	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1400:1403	46:46	node	[]	[org.jsoup.nodes.Node:node]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	1371:1405	46:46	currentElement().appendChild(node)	[org.jsoup.nodes.Element:currentElement]	[org.jsoup.nodes.Node:node]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1478:1480	50:50	org.jsoup.parser.Tag	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1490:1497	50:50	startTag	[]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	1490:1504	50:50	startTag.name()	[java.lang.String:name]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtInvocationImpl	1478:1505	50:50	org.jsoup.parser.Tag.valueOf(startTag.name())	[java.lang.String:name, org.jsoup.parser.Tag:valueOf]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1468:1506	50:50	org.jsoup.parser.Tag tag = org.jsoup.parser.Tag.valueOf(startTag.name())	[java.lang.String:name, org.jsoup.parser.Tag:valueOf]	[org.jsoup.parser.Token.StartTag:startTag]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1642:1644	52:52	tag	[]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1647:1653	52:52	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1656:1663	52:52	startTag	[]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Attributes	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1656:1674	52:52	startTag.attributes	[]	[org.jsoup.parser.Token.StartTag:startTag, org.jsoup.nodes.Attributes:attributes]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1630:1675	52:52	new org.jsoup.nodes.Element(tag, baseUri, startTag.attributes)	[]	[org.jsoup.parser.Token.StartTag:startTag, org.jsoup.nodes.Attributes:attributes, java.lang.String:baseUri, org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	1617:1676	52:52	org.jsoup.nodes.Element el = new org.jsoup.nodes.Element(tag, baseUri, startTag.attributes)	[]	[org.jsoup.parser.Token.StartTag:startTag, org.jsoup.nodes.Attributes:attributes, java.lang.String:baseUri, org.jsoup.parser.Tag:tag]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1697:1698	53:53	el	[]	[org.jsoup.nodes.Element:el]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1686:1700	53:53	insertNode(el)	[void:insertNode]	[org.jsoup.nodes.Element:el]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.StartTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1714:1721	54:54	startTag	[]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1714:1737	54:54	startTag.isSelfClosing()	[boolean:isSelfClosing]	[org.jsoup.parser.Token.StartTag:startTag]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tokeniser	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1754:1762	55:55	tokeniser	[]	[org.jsoup.parser.Tokeniser:tokeniser]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1754:1792	55:55	tokeniser.acknowledgeSelfClosingFlag()	[void:acknowledgeSelfClosingFlag]	[org.jsoup.parser.Tokeniser:tokeniser]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1811:1813	56:56	tag	[]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1811:1826	56:56	tag.isKnownTag()	[boolean:isKnownTag]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	1810:1826	56:56	!(tag.isKnownTag())	[boolean:isKnownTag]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1914:1916	57:57	tag	[]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Tag	Expression	class spoon.support.reflect.code.CtInvocationImpl	1914:1934	57:57	tag.setSelfClosing()	[org.jsoup.parser.Tag:setSelfClosing]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1806:1934	56:57	if (!(tag.isKnownTag()))    tag.setSelfClosing();	[boolean:isKnownTag, org.jsoup.parser.Tag:setSelfClosing]	[org.jsoup.parser.Tag:tag]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1965:1969	59:59	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1975:1976	59:59	el	[]	[org.jsoup.nodes.Element:el]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1965:1978	59:59	stack.add(el)	[boolean:add]	[org.jsoup.nodes.Element:el, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1710:1988	54:60	if (startTag.isSelfClosing()) {    tokeniser.acknowledgeSelfClosingFlag();    if (!(tag.isKnownTag()))        tag.setSelfClosing();}else {    stack.add(el);}	[boolean:isSelfClosing, boolean:isKnownTag, org.jsoup.parser.Tag:setSelfClosing, void:acknowledgeSelfClosingFlag, boolean:add]	[org.jsoup.nodes.Element:el, org.jsoup.parser.Tokeniser:tokeniser, org.jsoup.parser.Token.StartTag:startTag, org.jsoup.parser.Tag:tag, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2005:2006	61:61	el	[]	[org.jsoup.nodes.Element:el]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1998:2007	61:61	return el	[]	[org.jsoup.nodes.Element:el]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Comment	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2100:2111	65:65	commentToken	[]	[org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2100:2121	65:65	commentToken.getData()	[java.lang.String:getData]	[org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2124:2130	65:65	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Comment	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2088:2131	65:65	new org.jsoup.nodes.Comment(commentToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Comment:commentToken]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2070:2132	65:65	org.jsoup.nodes.Comment comment = new org.jsoup.nodes.Comment(commentToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Comment:commentToken]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Comment	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2153:2159	66:66	comment	[]	[org.jsoup.nodes.Comment:comment]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	2142:2161	66:66	insertNode(comment)	[void:insertNode]	[org.jsoup.nodes.Comment:comment]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Character	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2253:2266	70:70	characterToken	[]	[org.jsoup.parser.Token.Character:characterToken]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2253:2276	70:70	characterToken.getData()	[java.lang.String:getData]	[org.jsoup.parser.Token.Character:characterToken]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2279:2285	70:70	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.TextNode	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2240:2286	70:70	new org.jsoup.nodes.TextNode(characterToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Character:characterToken]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2228:2287	70:70	org.jsoup.nodes.Node node = new org.jsoup.nodes.TextNode(characterToken.getData(), baseUri)	[java.lang.String:getData]	[java.lang.String:baseUri, org.jsoup.parser.Token.Character:characterToken]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Node	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2308:2311	71:71	node	[]	[org.jsoup.nodes.Node:node]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	2297:2313	71:71	insertNode(node)	[void:insertNode]	[org.jsoup.nodes.Node:node]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2409:2409	75:75	d	[]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2409:2419	75:75	d.getName()	[java.lang.String:getName]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2422:2422	75:75	d	[]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2422:2444	75:75	d.getPublicIdentifier()	[java.lang.String:getPublicIdentifier]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.Doctype	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2447:2447	75:75	d	[]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2447:2469	75:75	d.getSystemIdentifier()	[java.lang.String:getSystemIdentifier]	[org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2472:2478	75:75	baseUri	[]	[java.lang.String:baseUri]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.DocumentType	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2392:2479	75:75	new org.jsoup.nodes.DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri)	[java.lang.String:getName, java.lang.String:getPublicIdentifier, java.lang.String:getSystemIdentifier]	[java.lang.String:baseUri, org.jsoup.parser.Token.Doctype:d]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2365:2480	75:75	org.jsoup.nodes.DocumentType doctypeNode = new org.jsoup.nodes.DocumentType(d.getName(), d.getPublicIdentifier(), d.getSystemIdentifier(), baseUri)	[java.lang.String:getName, java.lang.String:getPublicIdentifier, java.lang.String:getSystemIdentifier]	[java.lang.String:baseUri, org.jsoup.parser.Token.Doctype:d]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.DocumentType	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2501:2511	76:76	doctypeNode	[]	[org.jsoup.nodes.DocumentType:doctypeNode]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	2490:2513	76:76	insertNode(doctypeNode)	[void:insertNode]	[org.jsoup.nodes.DocumentType:doctypeNode]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.parser.Token.EndTag	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2785:2790	86:86	endTag	[]	[org.jsoup.parser.Token.EndTag:endTag]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2785:2797	86:86	endTag.name()	[java.lang.String:name]	[org.jsoup.parser.Token.EndTag:endTag]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2769:2798	86:86	java.lang.String elName = endTag.name()	[java.lang.String:name]	[org.jsoup.parser.Token.EndTag:endTag]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2829:2832	87:87	null	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2808:2833	87:87	org.jsoup.nodes.Element firstFound = null	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2867:2871	89:89	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtInvocationImpl	2867:2892	89:89	stack.descendingIterator()	[java.util.Iterator<org.jsoup.nodes.Element>:descendingIterator]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2844:2893	89:89	java.util.Iterator<org.jsoup.nodes.Element> it = stack.descendingIterator()	[java.util.Iterator<org.jsoup.nodes.Element>:descendingIterator]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2910:2911	90:90	it	[]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2910:2921	90:90	it.hasNext()	[boolean:hasNext]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2953:2954	91:91	it	[]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	2953:2961	91:91	it.next()	[org.jsoup.nodes.Element:next]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2938:2962	91:91	org.jsoup.nodes.Element next = it.next()	[org.jsoup.nodes.Element:next]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2980:2983	92:92	next	[]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	2980:2994	92:92	next.nodeName()	[java.lang.String:nodeName]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3003:3008	92:92	elName	[]	[java.lang.String:elName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2980:3009	92:92	next.nodeName().equals(elName)	[java.lang.String:nodeName, boolean:nodeName]	[java.lang.String:elName, org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3030:3039	93:93	firstFound	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3043:3046	93:93	next	[]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3030:3047	93:93	firstFound = next	[]	[org.jsoup.nodes.Element:next, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	3065:3070	94:94	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2976:3084	92:95	if (next.nodeName().equals(elName)) {    firstFound = next;    break;}	[java.lang.String:nodeName, boolean:nodeName]	[java.lang.String:elName, org.jsoup.nodes.Element:next, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtWhileImpl	Statement	class spoon.support.reflect.code.CtWhileImpl	2903:3094	90:96	while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next.nodeName().equals(elName)) {        firstFound = next;        break;    }} 	[boolean:hasNext, java.lang.String:nodeName, org.jsoup.nodes.Element:next, boolean:nodeName]	[java.lang.String:elName, org.jsoup.nodes.Element:next, java.util.Iterator<org.jsoup.nodes.Element>:it, org.jsoup.nodes.Element:firstFound]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3108:3117	97:97	firstFound	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	3122:3125	97:97	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3108:3125	97:97	firstFound == null	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3140:3146	98:98	return 	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	3104:3146	97:98	if (firstFound == null)    return ;	[]	[org.jsoup.nodes.Element:firstFound]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	3176:3177	100:100	it	[]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.ArrayList<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3181:3185	100:100	stack	[]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3181:3206	100:100	stack.descendingIterator()	[java.util.Iterator<org.jsoup.nodes.Element>:descendingIterator]	[java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	3176:3207	100:100	it = stack.descendingIterator()	[java.util.Iterator<org.jsoup.nodes.Element>:descendingIterator]	[java.util.Iterator<org.jsoup.nodes.Element>:it, java.util.ArrayList<org.jsoup.nodes.Element>:stack]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3224:3225	101:101	it	[]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3224:3235	101:101	it.hasNext()	[boolean:hasNext]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3267:3268	102:102	it	[]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtInvocationImpl	3267:3275	102:102	it.next()	[org.jsoup.nodes.Element:next]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3252:3276	102:102	org.jsoup.nodes.Element next = it.next()	[org.jsoup.nodes.Element:next]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3294:3297	103:103	next	[]	[org.jsoup.nodes.Element:next]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.jsoup.nodes.Element	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3302:3311	103:103	firstFound	[]	[org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3294:3311	103:103	next == firstFound	[]	[org.jsoup.nodes.Element:next, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3332:3333	104:104	it	[]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	3332:3343	104:104	it.remove()	[void:remove]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
CtBreakImpl	Statement	class spoon.support.reflect.code.CtBreakImpl	3361:3366	105:105	break	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.jsoup.nodes.Element>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3405:3406	107:107	it	[]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	3405:3416	107:107	it.remove()	[void:remove]	[java.util.Iterator<org.jsoup.nodes.Element>:it]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	3290:3430	103:108	if (next == firstFound) {    it.remove();    break;}else {    it.remove();}	[void:remove]	[org.jsoup.nodes.Element:next, java.util.Iterator<org.jsoup.nodes.Element>:it, org.jsoup.nodes.Element:firstFound]	[spoon.support.reflect.code.CtWhileImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtWhileImpl	Statement	class spoon.support.reflect.code.CtWhileImpl	3217:3440	101:109	while (it.hasNext()) {    org.jsoup.nodes.Element next = it.next();    if (next == firstFound) {        it.remove();        break;    }else {        it.remove();    }} 	[boolean:hasNext, org.jsoup.nodes.Element:next, void:remove]	[org.jsoup.nodes.Element:next, java.util.Iterator<org.jsoup.nodes.Element>:it, org.jsoup.nodes.Element:firstFound]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtWhileImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtBreakImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
