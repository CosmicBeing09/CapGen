NaturalOrder		java.util.Arrays$NaturalOrder	[]
NaturalOrder	int	compare	[java.lang.Object, java.lang.Object]
LegacyMergeSort		java.util.Arrays$LegacyMergeSort	[]
ArrayList		java.util.Arrays$ArrayList	[E[]]
ArrayList	int	size	[]
ArrayList	java.lang.Object[]	toArray	[]
ArrayList	T[]	toArray	[T[]]
ArrayList	E	get	[int]
ArrayList	E	set	[int, E]
ArrayList	int	indexOf	[java.lang.Object]
ArrayList	boolean	contains	[java.lang.Object]
ArrayList	java.util.Spliterator<E>	spliterator	[]
ArrayList	void	forEach	[java.util.function.Consumer]
ArrayList	void	replaceAll	[java.util.function.UnaryOperator]
ArrayList	void	sort	[java.util.Comparator]
Arrays		java.util.Arrays	[]
Arrays	void	rangeCheck	[int, int, int]
Arrays	void	sort	[int[]]
Arrays	void	sort	[int[], int, int]
Arrays	void	sort	[long[]]
Arrays	void	sort	[long[], int, int]
Arrays	void	sort	[short[]]
Arrays	void	sort	[short[], int, int]
Arrays	void	sort	[char[]]
Arrays	void	sort	[char[], int, int]
Arrays	void	sort	[byte[]]
Arrays	void	sort	[byte[], int, int]
Arrays	void	sort	[float[]]
Arrays	void	sort	[float[], int, int]
Arrays	void	sort	[double[]]
Arrays	void	sort	[double[], int, int]
Arrays	void	parallelSort	[byte[]]
Arrays	void	parallelSort	[byte[], int, int]
Arrays	void	parallelSort	[char[]]
Arrays	void	parallelSort	[char[], int, int]
Arrays	void	parallelSort	[short[]]
Arrays	void	parallelSort	[short[], int, int]
Arrays	void	parallelSort	[int[]]
Arrays	void	parallelSort	[int[], int, int]
Arrays	void	parallelSort	[long[]]
Arrays	void	parallelSort	[long[], int, int]
Arrays	void	parallelSort	[float[]]
Arrays	void	parallelSort	[float[], int, int]
Arrays	void	parallelSort	[double[]]
Arrays	void	parallelSort	[double[], int, int]
Arrays	void	parallelSort	[T extends java.lang.Comparable[]]
Arrays	void	parallelSort	[T extends java.lang.Comparable[], int, int]
Arrays	void	parallelSort	[T[], java.util.Comparator]
Arrays	void	parallelSort	[T[], int, int, java.util.Comparator]
Arrays	void	sort	[java.lang.Object[]]
Arrays	void	legacyMergeSort	[java.lang.Object[]]
Arrays	void	sort	[java.lang.Object[], int, int]
Arrays	void	legacyMergeSort	[java.lang.Object[], int, int]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int]
Arrays	void	swap	[java.lang.Object[], int, int]
Arrays	void	sort	[T[], java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], java.util.Comparator]
Arrays	void	sort	[T[], int, int, java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], int, int, java.util.Comparator]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int, java.util.Comparator]
Arrays	void	parallelPrefix	[T[], java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[T[], int, int, java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[long[], java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[long[], int, int, java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[double[], java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[double[], int, int, java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[int[], java.util.function.IntBinaryOperator]
Arrays	void	parallelPrefix	[int[], int, int, java.util.function.IntBinaryOperator]
Arrays	int	binarySearch	[long[], long]
Arrays	int	binarySearch	[long[], int, int, long]
Arrays	int	binarySearch0	[long[], int, int, long]
Arrays	int	binarySearch	[int[], int]
Arrays	int	binarySearch	[int[], int, int, int]
Arrays	int	binarySearch0	[int[], int, int, int]
Arrays	int	binarySearch	[short[], short]
Arrays	int	binarySearch	[short[], int, int, short]
Arrays	int	binarySearch0	[short[], int, int, short]
Arrays	int	binarySearch	[char[], char]
Arrays	int	binarySearch	[char[], int, int, char]
Arrays	int	binarySearch0	[char[], int, int, char]
Arrays	int	binarySearch	[byte[], byte]
Arrays	int	binarySearch	[byte[], int, int, byte]
Arrays	int	binarySearch0	[byte[], int, int, byte]
Arrays	int	binarySearch	[double[], double]
Arrays	int	binarySearch	[double[], int, int, double]
Arrays	int	binarySearch0	[double[], int, int, double]
Arrays	int	binarySearch	[float[], float]
Arrays	int	binarySearch	[float[], int, int, float]
Arrays	int	binarySearch0	[float[], int, int, float]
Arrays	int	binarySearch	[java.lang.Object[], java.lang.Object]
Arrays	int	binarySearch	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch0	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch	[T[], T, java.util.Comparator]
Arrays	int	binarySearch	[T[], int, int, T, java.util.Comparator]
Arrays	int	binarySearch0	[T[], int, int, T, java.util.Comparator]
Arrays	boolean	equals	[long[], long[]]
Arrays	boolean	equals	[int[], int[]]
Arrays	boolean	equals	[short[], short[]]
Arrays	boolean	equals	[char[], char[]]
Arrays	boolean	equals	[byte[], byte[]]
Arrays	boolean	equals	[boolean[], boolean[]]
Arrays	boolean	equals	[double[], double[]]
Arrays	boolean	equals	[float[], float[]]
Arrays	boolean	equals	[java.lang.Object[], java.lang.Object[]]
Arrays	void	fill	[long[], long]
Arrays	void	fill	[long[], int, int, long]
Arrays	void	fill	[int[], int]
Arrays	void	fill	[int[], int, int, int]
Arrays	void	fill	[short[], short]
Arrays	void	fill	[short[], int, int, short]
Arrays	void	fill	[char[], char]
Arrays	void	fill	[char[], int, int, char]
Arrays	void	fill	[byte[], byte]
Arrays	void	fill	[byte[], int, int, byte]
Arrays	void	fill	[boolean[], boolean]
Arrays	void	fill	[boolean[], int, int, boolean]
Arrays	void	fill	[double[], double]
Arrays	void	fill	[double[], int, int, double]
Arrays	void	fill	[float[], float]
Arrays	void	fill	[float[], int, int, float]
Arrays	void	fill	[java.lang.Object[], java.lang.Object]
Arrays	void	fill	[java.lang.Object[], int, int, java.lang.Object]
Arrays	T[]	copyOf	[T[], int]
Arrays	T[]	copyOf	[U[], int, java.lang.Class]
Arrays	byte[]	copyOf	[byte[], int]
Arrays	short[]	copyOf	[short[], int]
Arrays	int[]	copyOf	[int[], int]
Arrays	long[]	copyOf	[long[], int]
Arrays	char[]	copyOf	[char[], int]
Arrays	float[]	copyOf	[float[], int]
Arrays	double[]	copyOf	[double[], int]
Arrays	boolean[]	copyOf	[boolean[], int]
Arrays	T[]	copyOfRange	[T[], int, int]
Arrays	T[]	copyOfRange	[U[], int, int, java.lang.Class]
Arrays	byte[]	copyOfRange	[byte[], int, int]
Arrays	short[]	copyOfRange	[short[], int, int]
Arrays	int[]	copyOfRange	[int[], int, int]
Arrays	long[]	copyOfRange	[long[], int, int]
Arrays	char[]	copyOfRange	[char[], int, int]
Arrays	float[]	copyOfRange	[float[], int, int]
Arrays	double[]	copyOfRange	[double[], int, int]
Arrays	boolean[]	copyOfRange	[boolean[], int, int]
Arrays	java.util.List<T>	asList	[T[]]
Arrays	int	hashCode	[long[]]
Arrays	int	hashCode	[int[]]
Arrays	int	hashCode	[short[]]
Arrays	int	hashCode	[char[]]
Arrays	int	hashCode	[byte[]]
Arrays	int	hashCode	[boolean[]]
Arrays	int	hashCode	[float[]]
Arrays	int	hashCode	[double[]]
Arrays	int	hashCode	[java.lang.Object[]]
Arrays	int	deepHashCode	[java.lang.Object[]]
Arrays	boolean	deepEquals	[java.lang.Object[], java.lang.Object[]]
Arrays	boolean	deepEquals0	[java.lang.Object, java.lang.Object]
Arrays	java.lang.String	toString	[long[]]
Arrays	java.lang.String	toString	[int[]]
Arrays	java.lang.String	toString	[short[]]
Arrays	java.lang.String	toString	[char[]]
Arrays	java.lang.String	toString	[byte[]]
Arrays	java.lang.String	toString	[boolean[]]
Arrays	java.lang.String	toString	[float[]]
Arrays	java.lang.String	toString	[double[]]
Arrays	java.lang.String	toString	[java.lang.Object[]]
Arrays	java.lang.String	deepToString	[java.lang.Object[]]
Arrays	void	deepToString	[java.lang.Object[], java.lang.StringBuilder, java.util.Set]
Arrays	void	setAll	[T[], java.util.function.IntFunction]
Arrays	void	parallelSetAll	[T[], java.util.function.IntFunction]
Arrays	void	setAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	parallelSetAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	setAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	parallelSetAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	setAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	void	parallelSetAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	java.util.Spliterator<T>	spliterator	[T[]]
Arrays	java.util.Spliterator<T>	spliterator	[T[], int, int]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[]]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[], int, int]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[]]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[], int, int]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[]]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[], int, int]
Arrays	java.util.stream.Stream<T>	stream	[T[]]
Arrays	java.util.stream.Stream<T>	stream	[T[], int, int]
Arrays	java.util.stream.IntStream	stream	[int[]]
Arrays	java.util.stream.IntStream	stream	[int[], int, int]
Arrays	java.util.stream.LongStream	stream	[long[]]
Arrays	java.util.stream.LongStream	stream	[long[], int, int]
Arrays	java.util.stream.DoubleStream	stream	[double[]]
Arrays	java.util.stream.DoubleStream	stream	[double[], int, int]
ListItr		java.util.LinkedList$ListItr	[int]
ListItr	boolean	hasNext	[]
ListItr	E	next	[]
ListItr	boolean	hasPrevious	[]
ListItr	E	previous	[]
ListItr	int	nextIndex	[]
ListItr	int	previousIndex	[]
ListItr	void	remove	[]
ListItr	void	set	[E]
ListItr	void	add	[E]
ListItr	void	forEachRemaining	[java.util.function.Consumer]
ListItr	void	checkForComodification	[]
Node		java.util.LinkedList$Node	[java.util.LinkedList$Node, E, java.util.LinkedList$Node]
DescendingIterator		java.util.LinkedList$DescendingIterator	[]
DescendingIterator	boolean	hasNext	[]
DescendingIterator	E	next	[]
DescendingIterator	void	remove	[]
LLSpliterator		java.util.LinkedList$LLSpliterator	[java.util.LinkedList, int, int]
LLSpliterator	int	getEst	[]
LLSpliterator	long	estimateSize	[]
LLSpliterator	java.util.Spliterator<E>	trySplit	[]
LLSpliterator	void	forEachRemaining	[java.util.function.Consumer]
LLSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
LLSpliterator	int	characteristics	[]
LinkedList		java.util.LinkedList	[]
LinkedList		java.util.LinkedList	[java.util.Collection]
LinkedList	void	linkFirst	[E]
LinkedList	void	linkLast	[E]
LinkedList	void	linkBefore	[E, java.util.LinkedList$Node]
LinkedList	E	unlinkFirst	[java.util.LinkedList$Node]
LinkedList	E	unlinkLast	[java.util.LinkedList$Node]
LinkedList	E	unlink	[java.util.LinkedList$Node]
LinkedList	E	getFirst	[]
LinkedList	E	getLast	[]
LinkedList	E	removeFirst	[]
LinkedList	E	removeLast	[]
LinkedList	void	addFirst	[E]
LinkedList	void	addLast	[E]
LinkedList	boolean	contains	[java.lang.Object]
LinkedList	int	size	[]
LinkedList	boolean	add	[E]
LinkedList	boolean	remove	[java.lang.Object]
LinkedList	boolean	addAll	[java.util.Collection]
LinkedList	boolean	addAll	[int, java.util.Collection]
LinkedList	void	clear	[]
LinkedList	E	get	[int]
LinkedList	E	set	[int, E]
LinkedList	void	add	[int, E]
LinkedList	E	remove	[int]
LinkedList	boolean	isElementIndex	[int]
LinkedList	boolean	isPositionIndex	[int]
LinkedList	java.lang.String	outOfBoundsMsg	[int]
LinkedList	void	checkElementIndex	[int]
LinkedList	void	checkPositionIndex	[int]
LinkedList	java.util.LinkedList.Node<E>	node	[int]
LinkedList	int	indexOf	[java.lang.Object]
LinkedList	int	lastIndexOf	[java.lang.Object]
LinkedList	E	peek	[]
LinkedList	E	element	[]
LinkedList	E	poll	[]
LinkedList	E	remove	[]
LinkedList	boolean	offer	[E]
LinkedList	boolean	offerFirst	[E]
LinkedList	boolean	offerLast	[E]
LinkedList	E	peekFirst	[]
LinkedList	E	peekLast	[]
LinkedList	E	pollFirst	[]
LinkedList	E	pollLast	[]
LinkedList	void	push	[E]
LinkedList	E	pop	[]
LinkedList	boolean	removeFirstOccurrence	[java.lang.Object]
LinkedList	boolean	removeLastOccurrence	[java.lang.Object]
LinkedList	java.util.ListIterator<E>	listIterator	[int]
LinkedList	java.util.Iterator<E>	descendingIterator	[]
LinkedList	java.util.LinkedList<E>	superClone	[]
LinkedList	java.lang.Object	clone	[]
LinkedList	java.lang.Object[]	toArray	[]
LinkedList	T[]	toArray	[T[]]
LinkedList	void	writeObject	[java.io.ObjectOutputStream]
LinkedList	void	readObject	[java.io.ObjectInputStream]
LinkedList	java.util.Spliterator<E>	spliterator	[]
StringUtil		org.jsoup.helper.StringUtil	[]
StringUtil	java.lang.String	join	[java.util.Collection, java.lang.String]
StringUtil	java.lang.String	join	[java.util.Iterator, java.lang.String]
StringUtil	java.lang.String	padding	[int]
StringUtil	boolean	isBlank	[java.lang.String]
StringUtil	boolean	isNumeric	[java.lang.String]
StringUtil	java.lang.String	normaliseWhitespace	[java.lang.String]
StringUtil	boolean	in	[java.lang.String, java.lang.String[]]
Validate		org.jsoup.helper.Validate	[]
Validate	void	notNull	[java.lang.Object]
Validate	void	notNull	[java.lang.Object, java.lang.String]
Validate	void	isTrue	[boolean]
Validate	void	isTrue	[boolean, java.lang.String]
Validate	void	isFalse	[boolean]
Validate	void	isFalse	[boolean, java.lang.String]
Validate	void	noNullElements	[java.lang.Object[]]
Validate	void	noNullElements	[java.lang.Object[], java.lang.String]
Validate	void	notEmpty	[java.lang.String]
Validate	void	notEmpty	[java.lang.String, java.lang.String]
Validate	void	fail	[java.lang.String]
TreeBuilderState		org.jsoup.parser.TreeBuilderState	[]
TreeBuilderState	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
TreeBuilderState	boolean	isWhitespace	[org.jsoup.parser.Token]
TreeBuilderState	void	handleRcData	[org.jsoup.parser.Token$StartTag, org.jsoup.parser.TreeBuilder]
TreeBuilderState	void	handleRawtext	[org.jsoup.parser.Token$StartTag, org.jsoup.parser.TreeBuilder]
1		org.jsoup.parser.TreeBuilderState$1	[]
1	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
2		org.jsoup.parser.TreeBuilderState$2	[]
2	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
2	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
3		org.jsoup.parser.TreeBuilderState$3	[]
3	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
4		org.jsoup.parser.TreeBuilderState$4	[]
4	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
4	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
5		org.jsoup.parser.TreeBuilderState$5	[]
5	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
5	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
6		org.jsoup.parser.TreeBuilderState$6	[]
6	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
6	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
7		org.jsoup.parser.TreeBuilderState$7	[]
7	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
7	boolean	anyOtherEndTag	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
8		org.jsoup.parser.TreeBuilderState$8	[]
8	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
9		org.jsoup.parser.TreeBuilderState$9	[]
9	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
9	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
10		org.jsoup.parser.TreeBuilderState$10	[]
10	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
11		org.jsoup.parser.TreeBuilderState$11	[]
11	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
12		org.jsoup.parser.TreeBuilderState$12	[]
12	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
12	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
13		org.jsoup.parser.TreeBuilderState$13	[]
13	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
13	boolean	exitTableBody	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
13	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
14		org.jsoup.parser.TreeBuilderState$14	[]
14	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
14	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
14	boolean	handleMissingTr	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
15		org.jsoup.parser.TreeBuilderState$15	[]
15	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
15	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
15	void	closeCell	[org.jsoup.parser.TreeBuilder]
16		org.jsoup.parser.TreeBuilderState$16	[]
16	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
16	boolean	anythingElse	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
17		org.jsoup.parser.TreeBuilderState$17	[]
17	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
18		org.jsoup.parser.TreeBuilderState$18	[]
18	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
19		org.jsoup.parser.TreeBuilderState$19	[]
19	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
20		org.jsoup.parser.TreeBuilderState$20	[]
20	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
21		org.jsoup.parser.TreeBuilderState$21	[]
21	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
22		org.jsoup.parser.TreeBuilderState$22	[]
22	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
23		org.jsoup.parser.TreeBuilderState$23	[]
23	boolean	process	[org.jsoup.parser.Token, org.jsoup.parser.TreeBuilder]
