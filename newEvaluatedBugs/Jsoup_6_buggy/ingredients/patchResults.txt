org.jsoup.parser.TokenQueue::::270::::8371::::8381::::last != (org.jsoup.parser.TokenQueue.ESC)::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.select.QueryParser::::162::::5579::::5586::::contains::::matches	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::value	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::key	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::value	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::key	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::this.key	false
org.jsoup.parser.TokenQueue::::300::::9350::::9352::::org.jsoup.parser.TokenQueue.ESC::::last	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::consumeSubQuery	false
org.jsoup.parser.TokenQueue::::280::::8746::::8750::::close::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.parser.TokenQueue::::280::::8746::::8750::::close::::open	false
org.jsoup.parser.TokenQueue::::280::::8746::::8750::::close::::last	false
org.jsoup.parser.TokenQueue::::275::::8582::::8585::::open::::last	false
org.jsoup.parser.TokenQueue::::271::::8448::::8451::::open::::last	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::queue	false
org.jsoup.parser.TokenQueue::::288::::9012::::9016::::start::::pos	false
org.jsoup.parser.TokenQueue::::287::::8956::::8960::::depth::::start	false
org.jsoup.parser.TokenQueue::::278::::8681::::8685::::start::::pos	false
org.jsoup.parser.TokenQueue::::277::::8644::::8648::::start::::pos	false
org.jsoup.parser.TokenQueue::::284::::8814::::8818::::depth::::start	false
org.jsoup.parser.TokenQueue::::276::::8611::::8615::::depth::::start	false
org.jsoup.parser.TokenQueue::::285::::8854::::8856::::end::::start	false
org.jsoup.parser.TokenQueue::::288::::8984::::8986::::end::::start	false
org.jsoup.parser.TokenQueue::::288::::9019::::9021::::end::::start	false
org.jsoup.parser.TokenQueue::::284::::8814::::8818::::depth::::pos	false
org.jsoup.parser.TokenQueue::::287::::8956::::8960::::depth::::pos	false
org.jsoup.parser.TokenQueue::::276::::8611::::8615::::depth::::pos	false
org.jsoup.parser.TokenQueue::::285::::8854::::8856::::end::::pos	false
org.jsoup.parser.TokenQueue::::288::::8984::::8986::::end::::pos	false
org.jsoup.parser.TokenQueue::::288::::9019::::9021::::end::::pos	false
org.jsoup.parser.TokenQueue::::300::::9345::::9345::::c::::last	false
org.jsoup.parser.TokenQueue::::305::::9497::::9497::::c::::last	false
org.jsoup.parser.TokenQueue::::306::::9520::::9520::::c::::last	false
org.jsoup.parser.TokenQueue::::276::::8611::::8615::::depth::::end	false
org.jsoup.parser.TokenQueue::::275::::8582::::8585::::open::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.parser.TokenQueue::::287::::8956::::8960::::depth::::end	false
org.jsoup.parser.TokenQueue::::284::::8814::::8818::::depth::::end	false
org.jsoup.parser.TokenQueue::::270::::8358::::8366::::last == 0::::last != 0	false
org.jsoup.parser.TokenQueue::::172::::4730::::4732::::len::::pos	false
org.jsoup.parser.TokenQueue::::169::::4591::::4593::::len::::pos	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::parse	false
org.jsoup.parser.TokenQueue::::271::::8448::::8451::::open::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.parser.TokenQueue::::308::::9548::::9555::::toString::::remainingLength	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::queue	false
org.jsoup.parser.TokenQueue::::166::::4455::::4457::::seq::::queue	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::tagName	false
org.jsoup.select.QueryParser::::244::::8853::::8854::::cq::::tq	false
org.jsoup.select.QueryParser::::243::::8769::::8770::::cq::::tq	false
org.jsoup.parser.TokenQueue::::308::::9548::::9555::::toString::::isEmpty	false
org.jsoup.parser.TokenQueue::::393::::11964::::11972::::remainder::::queue	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::keyPrefix	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::parse	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::not	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::indexLessThan	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::indexGreaterThan	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::indexEquals	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::has	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::containsData	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::consumeSubQuery	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::allElements	false
org.jsoup.parser.TokenQueue::::269::::8331::::8337::::consume::::isEmpty	false
org.jsoup.parser.TokenQueue::::228::::6750::::6754::::start::::pos	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::byTag	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::byClass	false
org.jsoup.select.QueryParser::::235::::8494::::8495::::cq::::tq	false
org.jsoup.select.QueryParser::::233::::8372::::8373::::cq::::tq	false
org.jsoup.select.QueryParser::::237::::8531::::8532::::cq::::tq	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::byId	false
org.jsoup.parser.TokenQueue::::305::::9497::::9497::::c::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.parser.TokenQueue::::306::::9520::::9520::::c::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::value	false
org.jsoup.parser.TokenQueue::::270::::8379::::8381::::org.jsoup.parser.TokenQueue.ESC::::open	false
org.jsoup.parser.TokenQueue::::224::::6655::::6684::::!(isEmpty())) && (!(matchesAny(seq))::::matchesAny(seq)	false
org.jsoup.parser.TokenQueue::::224::::6655::::6684::::!(isEmpty())) && (!(matchesAny(seq))::::!(matchesAny(seq))	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::value	false
org.jsoup.select.QueryParser::::60::::1597::::1607::::org.jsoup.select.QueryParser.combinators::::org.jsoup.select.QueryParser.AttributeEvals	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::parse	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::not	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::indexLessThan	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::indexGreaterThan	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::indexEquals	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::has	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::containsData	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::consumeSubQuery	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::byAttribute	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::allElements	false
org.jsoup.parser.TokenQueue::::355::::10856::::10866::::matchesWord::::isEmpty	false
org.jsoup.parser.TokenQueue::::358::::10965::::10969::::start::::pos	false
org.jsoup.parser.TokenQueue::::169::::4597::::4611::::remainingLength::::isEmpty	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::byClass	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::value	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::searchText	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::key	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::value	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::this.searchText	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::this.key	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::searchText	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::key	false
org.jsoup.parser.TokenQueue::::90::::2336::::2336::::s::::queue	false
org.jsoup.parser.TokenQueue::::317::::9789::::9805::::matchesWhitespace::::isEmpty	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::byId	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::consumeSubQuery	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::tq	false
org.jsoup.parser.TokenQueue::::284::::8814::::8835::::depth > 0) && (last != 0::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::284::::8814::::8835::::depth > 0) && (last != 0::::last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::300::::9345::::9352::::c == (org.jsoup.parser.TokenQueue.ESC)::::last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::300::::9345::::9352::::c == (org.jsoup.parser.TokenQueue.ESC)::::last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::308::::9548::::9555::::toString::::consume	false
org.jsoup.parser.TokenQueue::::70::::1744::::1746::::seq::::queue	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::queue	false
org.jsoup.parser.TokenQueue::::119::::3181::::3183::::seq::::queue	false
org.jsoup.parser.TokenQueue::::23::::517::::520::::data::::queue	false
org.jsoup.select.QueryParser::::133::::4672::::4673::::sq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.parser.TokenQueue::::281::::8774::::8778::::depth::::start	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::""	false
org.jsoup.parser.TokenQueue::::281::::8774::::8778::::depth::::pos	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::")"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::")"	false
org.jsoup.select.QueryParser::::39::::1059::::1059::::p::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::")"	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::parse	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::keyPrefix	false
org.jsoup.parser.TokenQueue::::281::::8774::::8778::::depth::::end	false
org.jsoup.parser.TokenQueue::::22::::494::::497::::data::::queue	false
org.jsoup.parser.TokenQueue::::271::::8406::::8438::::(c.equals('\'')) || (c.equals('"'))::::c != open	false
org.jsoup.parser.TokenQueue::::270::::8371::::8381::::last != (org.jsoup.parser.TokenQueue.ESC)::::last == 0	false
org.jsoup.parser.TokenQueue::::270::::8371::::8381::::last != (org.jsoup.parser.TokenQueue.ESC)::::last != 0	false
org.jsoup.parser.TokenQueue::::270::::8358::::8381::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)::::last != 0	false
org.jsoup.parser.TokenQueue::::270::::8358::::8366::::last == 0::::last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::270::::8358::::8381::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)::::depth > 0) && (last != 0	false
org.jsoup.parser.TokenQueue::::285::::8854::::8856::::end::::depth	false
org.jsoup.parser.TokenQueue::::270::::8358::::8366::::last == 0::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::tagName	false
org.jsoup.parser.TokenQueue::::270::::8371::::8381::::last != (org.jsoup.parser.TokenQueue.ESC)::::depth > 0) && (last != 0	false
org.jsoup.parser.TokenQueue::::288::::8984::::8986::::end::::depth	false
org.jsoup.parser.TokenQueue::::288::::9019::::9021::::end::::depth	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::queue	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::key	false
org.jsoup.parser.TokenQueue::::284::::8814::::8835::::depth > 0) && (last != 0::::last == 0	false
org.jsoup.select.QueryParser::::133::::4672::::4673::::sq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::key	false
org.jsoup.parser.TokenQueue::::155::::4042::::4068::::return queue.charAt(((pos)++))::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::this.tagName	false
org.jsoup.parser.TokenQueue::::31::::665::::679::::remainingLength::::isEmpty	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"\""	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"'"	false
org.jsoup.select.QueryParser::::134::::4770::::4780::::org.jsoup.select.QueryParser.combinators::::org.jsoup.select.QueryParser.AttributeEvals	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"*|"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"*|"	false
org.jsoup.select.QueryParser::::341::::12437::::12446::::searchText::::query	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"*|"	false
org.jsoup.select.QueryParser::::49::::1224::::1234::::org.jsoup.select.QueryParser.combinators::::org.jsoup.select.QueryParser.AttributeEvals	false
org.jsoup.select.QueryParser::::233::::8388::::8401::::org.jsoup.select.QueryParser.AttributeEvals::::org.jsoup.select.QueryParser.combinators	false
org.jsoup.parser.TokenQueue::::300::::9345::::9352::::c == (org.jsoup.parser.TokenQueue.ESC)::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::300::::9345::::9352::::c == (org.jsoup.parser.TokenQueue.ESC)::::last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::keyPrefix	false
org.jsoup.parser.TokenQueue::::284::::8827::::8835::::last != 0::::last == 0	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::consumeSubQuery	false
org.jsoup.parser.TokenQueue::::308::::9548::::9550::::out::::new java.lang.StringBuilder()	false
org.jsoup.parser.TokenQueue::::305::::9486::::9488::::out::::new java.lang.StringBuilder()	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::findElements	false
org.jsoup.parser.TokenQueue::::270::::8358::::8366::::last == 0::::depth > 0) && (last != 0	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"^\\+"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::""	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::keyPrefix	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"^\\+"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::""	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"["	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"["	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"["	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::this.key	false
org.jsoup.parser.TokenQueue::::317::::9789::::9805::::matchesWhitespace::::matchesWord	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::findElements	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::consumeIndex	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"^\\+"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::""	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::id	false
org.jsoup.parser.TokenQueue::::269::::8331::::8337::::consume::::remainingLength	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::this.value	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::81::::2349::::2356::::subQuery::::query	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::consumeSubQuery	false
org.jsoup.select.QueryParser::::337::::12236::::12245::::searchText::::query	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"#"	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::not	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::indexLessThan	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::indexGreaterThan	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::indexEquals	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::has	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::containsData	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::byTag	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::byAttribute	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::allElements	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"#"	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::className	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"#"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"."	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"."	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::byClass	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"."	false
org.jsoup.parser.TokenQueue::::35::::751::::770::::queue.length()) - (pos::::pos	false
org.jsoup.parser.TokenQueue::::35::::751::::770::::queue.length()) - (pos::::(pos) + 1	false
org.jsoup.select.QueryParser::::65::::1796::::1807::::findElements::::byId	false
org.jsoup.parser.TokenQueue::::169::::4597::::4611::::remainingLength::::matchesWord	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"*"	false
org.jsoup.select.QueryParser::::137::::4840::::4841::::sq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"*"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"*"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":lt("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":lt("	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":lt("	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":gt("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":gt("	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":gt("	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":eq("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":eq("	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":eq("	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":has("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":has("	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":has("	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":contains("	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::this.value	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::id	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::className	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":contains("	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":contains("	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::out.toString()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":containsOwn("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":containsOwn("	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":containsOwn("	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":containsData("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":containsData("	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":containsData("	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":matches("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":matches("	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":matches("	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::getPseudoClass()	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::parse	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":matchesOwn("	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":matchesOwn("	false
org.jsoup.select.QueryParser::::150::::5180::::5190::::byAttribute::::consumeIndex	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":matchesOwn("	false
org.jsoup.select.QueryParser::::137::::4840::::4841::::sq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"="	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::this.searchText	false
org.jsoup.parser.TokenQueue::::35::::744::::771::::return (queue.length()) - (pos)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::35::::751::::770::::queue.length()) - (pos::::(pos)++	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"="	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":not("	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":not("	false
org.jsoup.parser.TokenQueue::::308::::9548::::9555::::toString::::remainder	false
org.jsoup.parser.TokenQueue::::317::::9789::::9805::::matchesWhitespace::::consume	false
org.jsoup.parser.TokenQueue::::277::::8644::::8648::::start::::end	false
org.jsoup.parser.TokenQueue::::308::::9548::::9555::::toString::::matchesWhitespace	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::this.keyPrefix	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::this.key	false
org.jsoup.select.QueryParser::::133::::4672::::4673::::sq::::new java.lang.StringBuilder()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":not("	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"="	false
org.jsoup.parser.TokenQueue::::270::::8371::::8381::::last != (org.jsoup.parser.TokenQueue.ESC)::::last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":nth-child("	false
org.jsoup.parser.TokenQueue::::132::::3467::::3530::::return (!(isEmpty())) && (org.jsoup.helper.StringUtil.isWhitespace(queue.charAt(pos)))::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::140::::3706::::3771::::return (!(isEmpty())) && (java.lang.Character.isLetterOrDigit(queue.charAt(pos)))::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::284::::8827::::8835::::last != 0::::last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::284::::8827::::8835::::last != 0::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::278::::8681::::8685::::start::::end	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":nth-child("	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::this.keyPrefix	false
org.jsoup.parser.TokenQueue::::276::::8611::::8618::::depth++::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::270::::8371::::8381::::last != (org.jsoup.parser.TokenQueue.ESC)::::last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::270::::8358::::8381::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)::::last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::270::::8358::::8381::::last == 0) || (last != (org.jsoup.parser.TokenQueue.ESC)::::last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::308::::9548::::9555::::toString::::matchesWord	false
org.jsoup.parser.TokenQueue::::224::::6648::::6716::::while ((!(isEmpty())) && (!(matchesAny(seq)))) {    (pos)++;} ::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::31::::665::::679::::remainingLength::::matchesWord	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::this.searchText	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":nth-child("	false
org.jsoup.parser.TokenQueue::::306::::9513::::9516::::last::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.parser.TokenQueue::::284::::8827::::8830::::last::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.parser.TokenQueue::::70::::1706::::1765::::return queue.regionMatches(true, pos, seq, 0, seq.length())::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":nth-last-child("	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::not	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::indexLessThan	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::indexGreaterThan	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::indexEquals	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::has	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::containsData	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::consumeIndex	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::byTag	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::byAttribute	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::allElements	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"!="	false
org.jsoup.parser.TokenQueue::::286::::8929::::8932::::last::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":nth-last-child("	false
org.jsoup.select.QueryParser::::148::::5125::::5129::::byTag::::consumeIndex	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"!="	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"("	false
org.jsoup.parser.TokenQueue::::308::::9541::::9562::::return out.toString()::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::270::::8358::::8361::::last::::org.jsoup.parser.TokenQueue.ESC	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::id	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::this.id	false
org.jsoup.select.Evaluator::::40::::1006::::1017::::this.tagName::::this.className	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::byClass	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"("	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":nth-last-child("	false
org.jsoup.parser.TokenQueue::::284::::8827::::8835::::last != 0::::depth > 0) && (last != 0	false
org.jsoup.parser.TokenQueue::::169::::4597::::4611::::remainingLength::::consume	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"!="	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.parser.TokenQueue::::393::::11957::::11973::::return remainder::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":nth-of-type("	false
org.jsoup.select.QueryParser::::53::::1415::::1426::::findElements::::byId	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"("	false
org.jsoup.parser.TokenQueue::::355::::10834::::10923::::while ((!(isEmpty())) && ((matchesWord()) || (matchesAny("*|", "|", "_", "-"))))    (pos)++;::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":nth-of-type("	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::className	false
org.jsoup.parser.TokenQueue::::268::::8287::::8293::::isEmpty::::matchesWord	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":nth-of-type("	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::269::::8331::::8337::::consume::::matchesWord	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::start = pos	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::284::::8814::::8822::::depth > 0::::depth > 0) && (last != 0	false
org.jsoup.parser.TokenQueue::::90::::2328::::2334::::matches::::matchChomp	false
org.jsoup.parser.TokenQueue::::287::::8956::::8964::::depth > 0::::depth > 0) && (last != 0	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":nth-last-of-type("	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::391::::11856::::11917::::final java.lang.String remainder = queue.substring(pos, queue.length())::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::39::::1059::::1059::::p::::this	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":nth-last-of-type("	false
org.jsoup.parser.TokenQueue::::317::::9789::::9805::::matchesWhitespace::::remainingLength	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"^="	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::234::::8480::::8482::::key::::query	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::id	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"^="	false
org.jsoup.parser.TokenQueue::::31::::665::::679::::remainingLength::::consume	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":nth-last-of-type("	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.parser.TokenQueue::::270::::8358::::8361::::last::::open	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::317::::9782::::9864::::while (matchesWhitespace()) {    (pos)++;    seen = true;} ::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::70::::1706::::1765::::return queue.regionMatches(true, pos, seq, 0, seq.length())::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::"|"	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::"_"	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::"-"	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::"*|"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"^="	false
org.jsoup.parser.TokenQueue::::392::::11927::::11947::::pos = queue.length()::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":first-child"	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::244::::8848::::8850::::key::::query	false
org.jsoup.parser.TokenQueue::::90::::2328::::2334::::matches::::consumeToIgnoreCase	false
org.jsoup.parser.TokenQueue::::90::::2328::::2334::::matches::::consumeTo	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::className	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":first-child"	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::317::::9789::::9805::::matchesWhitespace::::toString	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::this.id	false
org.jsoup.select.Evaluator::::651::::17002::::17016::::this.searchText::::this.className	false
org.jsoup.select.QueryParser::::137::::4840::::4841::::sq::::new java.lang.StringBuilder()	false
org.jsoup.parser.TokenQueue::::284::::8827::::8830::::last::::open	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::consumeSubQuery()	false
org.jsoup.parser.TokenQueue::::297::::9223::::9262::::java.lang.StringBuilder out = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::consumeSubQuery()	false
org.jsoup.parser.TokenQueue::::286::::8929::::8932::::last::::open	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":first-child"	false
org.jsoup.parser.TokenQueue::::277::::8644::::8648::::start::::depth	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::consumeSubQuery()	false
org.jsoup.parser.TokenQueue::::270::::8371::::8374::::last::::open	false
org.jsoup.select.QueryParser::::39::::1059::::1067::::p.parse()::::INSERT::::PARAMETER::::parse(query)	false
org.jsoup.select.QueryParser::::217::::7649::::7655::::tagName::::query	false
org.jsoup.select.QueryParser::::335::::12096::::12129::::own ? ":containsOwn" : ":contains"::::own ? ":matchesOwn" : ":matches"	false
org.jsoup.parser.TokenQueue::::224::::6656::::6662::::isEmpty::::matchesWord	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::end = pos	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::query	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":last-child"	false
org.jsoup.parser.TokenQueue::::166::::4447::::4453::::matches::::matchChomp	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":last-child"	false
org.jsoup.parser.TokenQueue::::278::::8681::::8685::::start::::depth	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::query	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::168::::4555::::4577::::int len = seq.length()::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::288::::9019::::9021::::end::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"odd"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::query	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":last-child"	false
org.jsoup.parser.TokenQueue::::288::::8984::::8986::::end::::(pos)++	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::273::::8510::::8551::::if (inQuote)    continue;::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::273::::8510::::8551::::if (inQuote)    continue;::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"odd"	false
org.jsoup.parser.TokenQueue::::355::::10842::::10848::::isEmpty::::matchesWord	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"$="	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::this.value	false
org.jsoup.parser.TokenQueue::::132::::3475::::3481::::isEmpty::::matchesWord	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"$="	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.parser.TokenQueue::::317::::9789::::9805::::matchesWhitespace::::remainder	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::this.value	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"odd"	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::140::::3714::::3720::::isEmpty::::matchesWord	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::172::::4730::::4732::::len::::(pos)++	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new java.lang.StringBuilder()	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":first-of-type"	false
org.jsoup.parser.TokenQueue::::172::::4723::::4733::::pos += len::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":first-of-type"	false
org.jsoup.parser.TokenQueue::::119::::3169::::3298::::if (matches(seq)) {    pos += seq.length();    return true;}else {    return false;}::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"$="	false
org.jsoup.parser.TokenQueue::::166::::4446::::4458::::!(matches(seq))::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.parser.TokenQueue::::169::::4591::::4593::::len::::(pos)++	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::searchText	false
org.jsoup.parser.TokenQueue::::172::::4723::::4733::::pos += len::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::278::::8689::::8691::::pos::::start	false
org.jsoup.parser.TokenQueue::::285::::8860::::8862::::pos::::start	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":first-of-type"	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::consumeIndex	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::searchText	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::285::::8854::::8856::::end::::(pos)++	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::276::::8611::::8618::::depth++::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::276::::8611::::8618::::depth++::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::""	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":last-of-type"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":last-of-type"	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::284::::8814::::8835::::depth > 0) && (last != 0::::last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::284::::8814::::8835::::depth > 0) && (last != 0::::last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::this.tagName	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::335::::12085::::12131::::tq.consume((own ? ":containsOwn" : ":contains"))::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::119::::3173::::3179::::matches::::matchChomp	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":last-of-type"	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::162::::5579::::5594::::contains(false)::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::268::::8298::::8303::::break::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::298::::9272::::9285::::char last = 0::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::166::::4446::::4458::::!(matches(seq))::::INSERT::::STATEMENT::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");	false
org.jsoup.parser.TokenQueue::::169::::4587::::4704::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.parser.TokenQueue::::284::::8814::::8818::::depth::::(pos)++	false
org.jsoup.parser.TokenQueue::::119::::3169::::3298::::if (matches(seq)) {    pos += seq.length();    return true;}else {    return false;}::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.parser.TokenQueue::::225::::6701::::6703::::pos::::start	false
org.jsoup.parser.TokenQueue::::166::::4447::::4453::::matches::::consumeToIgnoreCase	false
org.jsoup.parser.TokenQueue::::166::::4447::::4453::::matches::::consumeTo	false
org.jsoup.parser.TokenQueue::::166::::4442::::4545::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::remainder()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::223::::6635::::6637::::pos::::start	false
org.jsoup.parser.TokenQueue::::172::::4730::::4732::::len::::(pos) + 1	false
org.jsoup.parser.TokenQueue::::169::::4591::::4593::::len::::(pos) + 1	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::searchText	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::89::::2289::::2377::::for (java.lang.String s : seq) {    if (matches(s))        return true;}::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::276::::8611::::8618::::depth++::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"*="	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::355::::10856::::10866::::matchesWord::::remainingLength	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"*="	false
org.jsoup.parser.TokenQueue::::275::::8582::::8585::::open::::close	false
org.jsoup.parser.TokenQueue::::228::::6757::::6759::::pos::::start	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::seq	false
org.jsoup.select.QueryParser::::29::::783::::814::::this.tq = new org.jsoup.parser.TokenQueue(query)::::this.query = query	false
org.jsoup.parser.TokenQueue::::168::::4555::::4577::::int len = seq.length()::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::169::::4597::::4611::::remainingLength::::toString	false
org.jsoup.parser.TokenQueue::::287::::8956::::8960::::depth::::(pos)++	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":only-child"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":only-child"	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::270::::8358::::8366::::last == 0::::last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::337::::12218::::12290::::org.jsoup.helper.Validate.notEmpty(searchText, ":contains(text) query must not be empty")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::searchText	false
org.jsoup.parser.TokenQueue::::321::::9874::::9885::::return seen::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::""	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"*="	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"%s"	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::90::::2328::::2337::::matches(s)::::INSERT::::STATEMENT::::if (matches(s))    return true;	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::338::::12300::::12449::::if (own)    evals.add(new org.jsoup.select.Evaluator.ContainsOwnText(searchText));else    evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText));::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::270::::8358::::8366::::last == 0::::last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::cssNthChild(true, true)	true
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::139::::4883::::4903::::return sq.toString()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"even"	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::cssNthChild(true, false)	true
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::cssNthChild(false, true)	true
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::cssNthChild(false, false)	true
org.jsoup.parser.TokenQueue::::276::::8611::::8618::::depth++::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":only-child"	false
org.jsoup.parser.TokenQueue::::288::::9012::::9016::::start::::end	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":%s(%dn%+d)"	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::271::::8448::::8451::::open::::close	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"even"	false
org.jsoup.parser.TokenQueue::::276::::8611::::8615::::depth::::(pos)++	false
org.jsoup.parser.TokenQueue::::90::::2328::::2334::::matches::::addFirst	false
org.jsoup.select.QueryParser::::28::::755::::773::::this.query = query::::this.tq = new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":"	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.parser.TokenQueue::::119::::3173::::3179::::matches::::consumeToIgnoreCase	false
org.jsoup.parser.TokenQueue::::119::::3173::::3179::::matches::::consumeTo	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"even"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":"	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::341::::12400::::12449::::evals.add(new org.jsoup.select.Evaluator.ContainsText(searchText))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::284::::8827::::8835::::last != 0::::last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::""	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::consumeIndex	false
org.jsoup.parser.TokenQueue::::166::::4442::::4545::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::169::::4587::::4704::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"|"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"|"	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::269::::8331::::8337::::consume::::toString	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::356::::10918::::10920::::pos::::start	false
org.jsoup.parser.TokenQueue::::268::::8298::::8303::::break::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::288::::9019::::9021::::end::::(pos) + 1	false
org.jsoup.parser.TokenQueue::::265::::8232::::8255::::boolean inQuote = false::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::263::::8186::::8199::::int depth = 0::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::this.keyPrefix	false
org.jsoup.parser.TokenQueue::::288::::8984::::8986::::end::::(pos) + 1	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::not	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::indexLessThan	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::indexGreaterThan	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::indexEquals	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::has	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::findElements	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::containsData	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::byTag	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::byId	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::byClass	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::byAttribute	false
org.jsoup.select.QueryParser::::39::::1059::::1063::::parse::::allElements	false
org.jsoup.parser.TokenQueue::::272::::8474::::8492::::inQuote = !inQuote::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::284::::8827::::8835::::last != 0::::last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)	false
org.jsoup.parser.TokenQueue::::285::::8854::::8856::::end::::(pos) + 1	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":"	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"|"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":only-of-type"	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":only-of-type"	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::169::::4587::::4704::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");::::INSERT::::STATEMENT::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");	false
org.jsoup.parser.TokenQueue::::166::::4442::::4545::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":containsOwn"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":contains"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":containsOwn"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":contains"	false
org.jsoup.parser.TokenQueue::::354::::10821::::10823::::pos::::start	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::270::::8379::::8381::::org.jsoup.parser.TokenQueue.ESC::::close	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":matchesOwn"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":matches"	false
org.jsoup.parser.TokenQueue::::169::::4587::::4704::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::120::::3201::::3220::::pos += seq.length()::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::168::::4555::::4577::::int len = seq.length()::::INSERT::::STATEMENT::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");	false
org.jsoup.parser.TokenQueue::::168::::4555::::4577::::int len = seq.length()::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":only-of-type"	false
org.jsoup.parser.TokenQueue::::284::::8814::::8818::::depth::::(pos) + 1	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":matchesOwn"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":matches"	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::150::::5180::::5193::::byAttribute()::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::166::::4446::::4458::::!(matches(seq))::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":containsOwn"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":contains"	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":matchesOwn"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":matches"	false
org.jsoup.parser.TokenQueue::::287::::8956::::8960::::depth::::(pos) + 1	false
org.jsoup.parser.TokenQueue::::268::::8287::::8293::::isEmpty::::remainingLength	false
org.jsoup.select.QueryParser::::62::::1674::::1858::::if (seenWhite) {    combinator(' ');}else {    findElements();}::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::316::::9752::::9772::::boolean seen = false::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::268::::8298::::8303::::break::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::this.keyPrefix	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::269::::8331::::8337::::consume::::matchesWhitespace	false
org.jsoup.parser.TokenQueue::::273::::8510::::8551::::if (inQuote)    continue;::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::268::::8287::::8293::::isEmpty::::consume	false
org.jsoup.parser.TokenQueue::::288::::8983::::9027::::end >= 0 ? queue.substring(start, end) : ""::::queue	false
org.jsoup.parser.TokenQueue::::358::::10972::::10974::::pos::::start	false
org.jsoup.parser.TokenQueue::::306::::9513::::9516::::last::::c	false
org.jsoup.parser.TokenQueue::::172::::4723::::4733::::pos += len::::INSERT::::STATEMENT::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");	false
org.jsoup.parser.TokenQueue::::172::::4723::::4733::::pos += len::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.parser.TokenQueue::::31::::665::::679::::remainingLength::::toString	false
org.jsoup.parser.TokenQueue::::91::::2356::::2367::::return true::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::depth--	false
org.jsoup.parser.TokenQueue::::93::::2387::::2399::::return false::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::90::::2328::::2337::::matches(s)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::148::::5125::::5132::::byTag()::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":contains(text) query must not be empty"	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::tagName	false
org.jsoup.parser.TokenQueue::::358::::10965::::10969::::start::::(pos)++	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":contains(text) query must not be empty"	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::depth--	true
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":matches(regex) query must not be empty"	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"~="	false
org.jsoup.parser.TokenQueue::::224::::6656::::6662::::isEmpty::::remainingLength	false
org.jsoup.parser.TokenQueue::::273::::8510::::8551::::if (inQuote)    continue;::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"~="	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::276::::8611::::8615::::depth::::(pos) + 1	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":matches(regex) query must not be empty"	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::tagName	false
org.jsoup.parser.TokenQueue::::121::::3234::::3245::::return true::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::273::::8510::::8551::::if (inQuote)    continue;::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":empty"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":contains(text) query must not be empty"	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":matches(regex) query must not be empty"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":empty"	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::288::::9012::::9016::::start::::depth	false
org.jsoup.parser.TokenQueue::::281::::8774::::8778::::depth::::(pos)++	false
org.jsoup.parser.TokenQueue::::90::::2328::::2337::::matches(s)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::120::::3201::::3220::::pos += seq.length()::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::354::::10809::::10824::::int start = pos::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"~="	false
org.jsoup.parser.TokenQueue::::120::::3201::::3220::::pos += seq.length()::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::305::::9486::::9499::::out.append(c)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":empty"	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"]"	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"]"	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::keyPrefix	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::244::::8805::::8869::::evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()))::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"^"	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::128::::4434::::4472::::java.lang.StringBuilder sq = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::268::::8298::::8303::::break::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"^"	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::39::::1052::::1068::::return p.parse()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::keyPrefix	false
org.jsoup.parser.TokenQueue::::166::::4446::::4458::::!(matches(seq))::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::166::::4446::::4458::::!(matches(seq))::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::this.id	false
org.jsoup.select.Evaluator::::40::::1021::::1027::::tagName::::this.className	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::tagName	false
org.jsoup.parser.TokenQueue::::263::::8186::::8199::::int depth = 0::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::223::::6623::::6638::::int start = pos::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"]"	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::166::::4446::::4458::::!(matches(seq))::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::81::::2343::::2357::::subQuery::::DELETE::::PARAMETER::::parse()	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::299::::9295::::9531::::for (char c : in.toCharArray()) {    if (c == (org.jsoup.parser.TokenQueue.ESC)) {        if ((last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)))            out.append(c);    }else        out.append(c);    last = c;}::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::169::::4597::::4611::::remainingLength::::remainder	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"^"	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::288::::9012::::9016::::start::::(pos)++	false
org.jsoup.parser.TokenQueue::::265::::8232::::8255::::boolean inQuote = false::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::271::::8425::::8437::::c.equals('"')::::DELETE::::INFIX	false
org.jsoup.parser.TokenQueue::::271::::8407::::8420::::c.equals('\'')::::DELETE::::INFIX	false
org.jsoup.parser.TokenQueue::::224::::6669::::6684::::!(matchesAny(seq))::::DELETE::::INFIX	false
org.jsoup.parser.TokenQueue::::308::::9541::::9562::::return out.toString()::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::65::::1796::::1810::::findElements()::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::123::::3276::::3288::::return false::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::140::::3714::::3720::::isEmpty::::remainingLength	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::358::::10942::::10976::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::91::::2356::::2367::::return true::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::pattern.toString()	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[%s~=%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":%s(%dn)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":%s(%d)"	false
org.jsoup.select.QueryParser::::81::::2349::::2356::::subQuery::::this.query	false
org.jsoup.select.QueryParser::::39::::1059::::1067::::p.parse()::::INSERT::::PARAMETER::::parse(this.query)	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::140::::3714::::3720::::isEmpty::::consume	false
org.jsoup.parser.TokenQueue::::355::::10842::::10848::::isEmpty::::remainingLength	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::this.id	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::this.className	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::166::::4442::::4545::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");::::INSERT::::STATEMENT::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::tagName	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::276::::8611::::8618::::depth++::::INSERT::::STATEMENT::::depth--	false
org.jsoup.parser.TokenQueue::::228::::6727::::6761::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::120::::3201::::3220::::pos += seq.length()::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.parser.TokenQueue::::265::::8232::::8255::::boolean inQuote = false::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::278::::8681::::8685::::start::::(pos)++	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::62::::1678::::1686::::seenWhite::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":root"	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::keyPrefix	false
org.jsoup.parser.TokenQueue::::263::::8186::::8199::::int depth = 0::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::234::::8462::::8484::::org.jsoup.helper.Validate.notEmpty(key)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":containsData"	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::281::::8774::::8781::::depth--::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::90::::2328::::2337::::matches(s)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::not	false
org.jsoup.parser.TokenQueue::::277::::8644::::8648::::start::::(pos)++	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::findElements	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":root"	false
org.jsoup.select.QueryParser::::133::::4672::::4733::::sq.append("[").append(tq.chompBalanced('[', ']')).append("]")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::305::::9486::::9499::::out.append(c)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::this.tq	false
org.jsoup.parser.TokenQueue::::355::::10856::::10866::::matchesWord::::consume	false
org.jsoup.parser.TokenQueue::::281::::8774::::8778::::depth::::(pos) + 1	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":containsData"	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::depth--	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.parser.TokenQueue::::228::::6750::::6754::::start::::(pos)++	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::containsData	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::""	false
org.jsoup.parser.TokenQueue::::155::::4042::::4068::::return queue.charAt(((pos)++))::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::70::::1706::::1765::::return queue.regionMatches(true, pos, seq, 0, seq.length())::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::keyPrefix	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::this.key	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":containsData"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":not"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":has"	false
org.jsoup.parser.TokenQueue::::121::::3234::::3245::::return true::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":root"	false
org.jsoup.parser.TokenQueue::::119::::3173::::3184::::matches(seq)::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.parser.TokenQueue::::268::::8298::::8303::::break::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::265::::8232::::8255::::boolean inQuote = false::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::278::::8689::::8691::::pos::::end	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::263::::8186::::8199::::int depth = 0::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::this.key	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::299::::9309::::9310::::in::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::has	false
org.jsoup.parser.TokenQueue::::91::::2356::::2367::::return true::::INSERT::::STATEMENT::::if (matches(s))    return true;	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::this.searchText	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":not"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":has"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":containsData(text) query must not be empty"	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::indexEquals	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::217::::7631::::7657::::org.jsoup.helper.Validate.notEmpty(tagName)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::indexGreaterThan	false
org.jsoup.select.QueryParser::::220::::7751::::7774::::tagName.startsWith("*|")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::305::::9486::::9499::::out.append(c)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":not"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":has"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":containsData(text) query must not be empty"	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::indexLessThan	false
org.jsoup.select.QueryParser::::235::::8494::::8516::::cq.consumeWhitespace()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":not(selector) subselect must not be empty"	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::":has(el) subselect must not be empty"	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::""	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsRoot()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsOnlyOfType()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsOnlyChild()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsLastChild()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsFirstChild()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsEmpty()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::allElements	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[^%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[%s^=%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[%s=%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[%s*=%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[%s$=%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"[%s!=%s]"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":matchesOwn(%s)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":matches(%s)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":lt(%d)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":gt(%d)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":eq(%d)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":containsOwn(%s)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":containsData(%s)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::":contains(%s)"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::".%s"	false
org.jsoup.select.Evaluator::::651::::17020::::17029::::searchText::::"#%s"	false
org.jsoup.select.QueryParser::::227::::8170::::8214::::evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()))::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::265::::8232::::8255::::boolean inQuote = false::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::123::::3276::::3288::::return false::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::53::::1415::::1429::::findElements()::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::224::::6656::::6662::::isEmpty::::consume	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":containsData(text) query must not be empty"	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::byAttribute	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":not(selector) subselect must not be empty"	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::":has(el) subselect must not be empty"	false
org.jsoup.parser.TokenQueue::::297::::9223::::9262::::java.lang.StringBuilder out = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::35::::744::::771::::return (queue.length()) - (pos)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::byTag	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::166::::4446::::4458::::!(matches(seq))::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::byClass	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":not(selector) subselect must not be empty"	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::":has(el) subselect must not be empty"	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::89::::2289::::2377::::for (java.lang.String s : seq) {    if (matches(s))        return true;}::::INSERT::::STATEMENT::::if (matches(s))    return true;	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::305::::9486::::9499::::out.append(c)::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::355::::10873::::10902::::matchesAny("*|", "|", "_", "-")::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::81::::2343::::2347::::parse::::byId	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"Index must be numeric"	false
org.jsoup.parser.TokenQueue::::273::::8510::::8551::::if (inQuote)    continue;::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::119::::3173::::3184::::matches(seq)::::INSERT::::STATEMENT::::matchChomp(seq)	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::220::::7747::::8224::::if (tagName.startsWith("*|")) {    evals.add(new org.jsoup.select.CombiningEvaluator.Or(new org.jsoup.select.Evaluator.Tag(tagName.trim().toLowerCase()), new org.jsoup.select.Evaluator.TagEndsWith(tagName.replace("*|", ":").trim().toLowerCase())));}else {    if (tagName.contains("|"))        tagName = tagName.replace("|", ":");    evals.add(new org.jsoup.select.Evaluator.Tag(tagName.trim()));}::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::147::::5095::::5110::::tq.matches("*|")::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::147::::5075::::5090::::tq.matchesWord()::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::this.searchText	false
org.jsoup.parser.TokenQueue::::297::::9223::::9262::::java.lang.StringBuilder out = new java.lang.StringBuilder()::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::132::::3488::::3529::::org.jsoup.helper.StringUtil.isWhitespace(queue.charAt(pos))::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::140::::3727::::3770::::java.lang.Character.isLetterOrDigit(queue.charAt(pos))::::DELETE::::INFIX	false
org.jsoup.parser.TokenQueue::::132::::3475::::3481::::isEmpty::::remainingLength	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"Index must be numeric"	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsLastOfType()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IsFirstOfType()	false
org.jsoup.parser.TokenQueue::::119::::3173::::3184::::matches(seq)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::consumeIndex	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::""	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::""	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::this.searchText	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::""	false
org.jsoup.parser.TokenQueue::::169::::4597::::4611::::remainingLength::::matchesWhitespace	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::31::::665::::679::::remainingLength::::remainder	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"Index must be numeric"	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::268::::8298::::8303::::break::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::depth--	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::298::::9272::::9285::::char last = 0::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::findElements	false
org.jsoup.parser.TokenQueue::::119::::3169::::3298::::if (matches(seq)) {    pos += seq.length();    return true;}else {    return false;}::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.select.QueryParser::::233::::8359::::8403::::java.lang.String key = cq.consumeToAny(org.jsoup.select.QueryParser.AttributeEvals)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::70::::1706::::1765::::return queue.regionMatches(true, pos, seq, 0, seq.length())::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.parser.TokenQueue::::168::::4555::::4577::::int len = seq.length()::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.select.QueryParser::::232::::8274::::8332::::org.jsoup.parser.TokenQueue cq = new org.jsoup.parser.TokenQueue(tq.chompBalanced('[', ']'))::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::38::::1000::::1038::::org.jsoup.select.QueryParser p = new org.jsoup.select.QueryParser(query)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::DELETE::::STATEMENT	false
org.jsoup.parser.TokenQueue::::393::::11957::::11973::::return remainder::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::""	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"Could not parse query '%s': unexpected token at '%s'"	false
org.jsoup.parser.TokenQueue::::169::::4587::::4704::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.select.QueryParser::::224::::8077::::8155::::if (tagName.contains("|"))    tagName = tagName.replace("|", ":");::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::284::::8827::::8830::::last::::close	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::224::::8081::::8101::::tagName.contains("|")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::169::::4597::::4613::::remainingLength()::::DELETE::::INFIX	false
org.jsoup.parser.TokenQueue::::358::::10965::::10969::::start::::(pos) + 1	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::172::::4723::::4733::::pos += len::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::308::::9541::::9562::::return out.toString()::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::285::::8860::::8862::::pos::::end	false
org.jsoup.select.QueryParser::::130::::4522::::4536::::tq.matches("(")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::has()	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::""	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::""	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"Could not parse query '%s': unexpected token at '%s'"	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::120::::3201::::3220::::pos += seq.length()::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::""	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::355::::10842::::10848::::isEmpty::::consume	false
org.jsoup.parser.TokenQueue::::89::::2289::::2377::::for (java.lang.String s : seq) {    if (matches(s))        return true;}::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::132::::3467::::3530::::return (!(isEmpty())) && (org.jsoup.helper.StringUtil.isWhitespace(queue.charAt(pos)))::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.parser.TokenQueue::::140::::3706::::3771::::return (!(isEmpty())) && (java.lang.Character.isLetterOrDigit(queue.charAt(pos)))::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::166::::4442::::4545::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::278::::8681::::8692::::start = pos::::pos = 0	false
org.jsoup.parser.TokenQueue::::169::::4587::::4704::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::132::::3475::::3481::::isEmpty::::consume	false
org.jsoup.parser.TokenQueue::::119::::3173::::3184::::matches(seq)::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::355::::10856::::10866::::matchesWord::::matchesWhitespace	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::""	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::166::::4442::::4545::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::336::::12141::::12208::::java.lang.String searchText = org.jsoup.parser.TokenQueue.unescape(tq.chompBalanced('(', ')'))::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::263::::8186::::8199::::int depth = 0::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.parser.TokenQueue::::277::::8653::::8654::::-1::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::298::::9272::::9285::::char last = 0::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.parser.TokenQueue::::119::::3169::::3298::::if (matches(seq)) {    pos += seq.length();    return true;}else {    return false;}::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::166::::4447::::4453::::matches::::addFirst	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::id	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::61::::1629::::1653::::combinator(tq.consume())::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::278::::8689::::8691::::pos::::depth	false
org.jsoup.parser.TokenQueue::::169::::4587::::4704::::if (len > (remainingLength()))    throw new java.lang.IllegalStateException("Queue not long enough to consume sequence");::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::this.searchText	false
org.jsoup.parser.TokenQueue::::31::::665::::679::::remainingLength::::matchesWhitespace	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"Could not parse attribute query '%s': unexpected token at '%s'"	false
org.jsoup.parser.TokenQueue::::166::::4442::::4545::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::""	false
org.jsoup.parser.TokenQueue::::119::::3173::::3184::::matches(seq)::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::"|"	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::"_"	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::"-"	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::"*|"	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"Could not parse query '%s': unexpected token at '%s'"	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::"|"	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::"_"	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::"-"	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::"*|"	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::className	false
org.jsoup.parser.TokenQueue::::168::::4555::::4577::::int len = seq.length()::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::id	false
org.jsoup.parser.TokenQueue::::286::::8929::::8932::::last::::close	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.parser.TokenQueue::::70::::1706::::1765::::return queue.regionMatches(true, pos, seq, 0, seq.length())::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.parser.TokenQueue::::288::::9012::::9016::::start::::(pos) + 1	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::278::::8681::::8685::::start::::(pos) + 1	false
org.jsoup.parser.TokenQueue::::285::::8854::::8863::::end = pos::::pos = 0	false
org.jsoup.parser.TokenQueue::::392::::11927::::11947::::pos = queue.length()::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::355::::10834::::10923::::while ((!(isEmpty())) && ((matchesWord()) || (matchesAny("*|", "|", "_", "-"))))    (pos)++;::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::224::::6648::::6716::::while ((!(isEmpty())) && (!(matchesAny(seq)))) {    (pos)++;} ::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.parser.TokenQueue::::277::::8644::::8648::::start::::(pos) + 1	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::392::::11927::::11947::::pos = queue.length()::::pos = 0	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::321::::9874::::9885::::return seen::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::className	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::not	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"Could not parse attribute query '%s': unexpected token at '%s'"	false
org.jsoup.parser.TokenQueue::::317::::9782::::9864::::while (matchesWhitespace()) {    (pos)++;    seen = true;} ::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::containsData	false
org.jsoup.select.QueryParser::::215::::7576::::7620::::java.lang.String tagName = tq.consumeElementSelector()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::120::::3201::::3220::::pos += seq.length()::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::316::::9752::::9772::::boolean seen = false::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IndexLessThan(consumeIndex())	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IndexGreaterThan(consumeIndex())	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.IndexEquals(consumeIndex())	false
org.jsoup.parser.TokenQueue::::391::::11856::::11917::::final java.lang.String remainder = queue.substring(pos, queue.length())::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::391::::11856::::11917::::final java.lang.String remainder = queue.substring(pos, queue.length())::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::has	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::137::::4840::::4863::::sq.append(tq.consume())::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::243::::8769::::8786::::cq.matchChomp("=")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::indexEquals	false
org.jsoup.select.QueryParser::::341::::12437::::12446::::searchText::::this.query	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::indexGreaterThan	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.parser.TokenQueue::::91::::2356::::2367::::return true::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::this.value	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::indexLessThan	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::allElements	false
org.jsoup.parser.TokenQueue::::121::::3234::::3245::::return true::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::byAttribute	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::id	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.parser.TokenQueue::::265::::8232::::8255::::boolean inQuote = false::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::270::::8358::::8361::::last::::close	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::byTag	false
org.jsoup.parser.TokenQueue::::280::::8737::::8751::::c.equals(close)::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.parser.TokenQueue::::392::::11927::::11947::::pos = queue.length()::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::byClass	false
org.jsoup.parser.TokenQueue::::168::::4555::::4577::::int len = seq.length()::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::280::::8733::::8781::::if (c.equals(close))    depth--;::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::77::::2098::::2112::::consumeSubQuery::::byId	false
org.jsoup.parser.TokenQueue::::269::::8331::::8337::::consume::::remainder	false
org.jsoup.parser.TokenQueue::::119::::3173::::3184::::matches(seq)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::className	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::224::::6648::::6716::::while ((!(isEmpty())) && (!(matchesAny(seq)))) {    (pos)++;} ::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"Could not parse attribute query '%s': unexpected token at '%s'"	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.parser.TokenQueue::::270::::8371::::8374::::last::::close	false
org.jsoup.parser.TokenQueue::::268::::8298::::8303::::break::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::237::::8531::::8542::::cq.isEmpty()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::228::::6750::::6754::::start::::(pos) + 1	false
org.jsoup.parser.TokenQueue::::119::::3169::::3298::::if (matches(seq)) {    pos += seq.length();    return true;}else {    return false;}::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::69::::1879::::1933::::if ((evals.size()) == 1)    return evals.get(0);::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::271::::8402::::8492::::if (((c.equals('\'')) || (c.equals('"'))) && (c != open))    inQuote = !inQuote;::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::this.value	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::285::::8860::::8862::::pos::::depth	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::this.tagName	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::id	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::77::::2080::::2115::::java.lang.String subQuery = consumeSubQuery()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::81::::2323::::2358::::org.jsoup.select.Evaluator newEval = org.jsoup.select.QueryParser.parse(subQuery)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::89::::2289::::2377::::for (java.lang.String s : seq) {    if (matches(s))        return true;}::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::261::::8140::::8154::::int start = -1::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::"|"	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::"_"	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::"-"	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::"*|"	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.parser.TokenQueue::::93::::2387::::2399::::return false::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::275::::8573::::8586::::c.equals(open)::::INSERT::::STATEMENT::::depth++	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::className	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.parser.TokenQueue::::121::::3234::::3245::::return true::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::DELETE::::STATEMENT	false
org.jsoup.select.QueryParser::::76::::2048::::2070::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::155::::4042::::4068::::return queue.charAt(((pos)++))::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.parser.TokenQueue::::119::::3169::::3298::::if (matches(seq)) {    pos += seq.length();    return true;}else {    return false;}::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::this.tagName	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.parser.TokenQueue::::288::::8984::::8986::::end::::depth++	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.parser.TokenQueue::::288::::8976::::9028::::return end >= 0 ? queue.substring(start, end) : ""::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::consumeToIgnoreCase(seq)	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::consumeTo(seq)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::72::::1944::::1984::::return new org.jsoup.select.CombiningEvaluator.And(evals)::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.parser.TokenQueue::::317::::9782::::9864::::while (matchesWhitespace()) {    (pos)++;    seen = true;} ::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::70::::1706::::1765::::return queue.regionMatches(true, pos, seq, 0, seq.length())::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::277::::8640::::8692::::if (start == (-1))    start = pos;::::INSERT::::STATEMENT::::depth--	false
org.jsoup.parser.TokenQueue::::285::::8854::::8856::::end::::depth++	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::268::::8287::::8293::::isEmpty::::matchesWhitespace	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.parser.TokenQueue::::393::::11957::::11973::::return remainder::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::(pos)++	false
org.jsoup.parser.TokenQueue::::288::::9019::::9021::::end::::depth++	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::has()	false
org.jsoup.parser.TokenQueue::::263::::8186::::8199::::int depth = 0::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::139::::4890::::4891::::sq::::new org.jsoup.select.Evaluator.AllElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::this.query	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::355::::10856::::10866::::matchesWord::::remainder	false
org.jsoup.select.QueryParser::::232::::8305::::8306::::tq::::cq	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::123::::3276::::3288::::return false::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::132::::3467::::3530::::return (!(isEmpty())) && (org.jsoup.helper.StringUtil.isWhitespace(queue.charAt(pos)))::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.parser.TokenQueue::::140::::3706::::3771::::return (!(isEmpty())) && (java.lang.Character.isLetterOrDigit(queue.charAt(pos)))::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::129::::4482::::4873::::while (!(tq.isEmpty())) {    if (tq.matches("("))        sq.append("(").append(tq.chompBalanced('(', ')')).append(")");    else        if (tq.matches("["))            sq.append("[").append(tq.chompBalanced('[', ']')).append("]");        else            if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))                break;            else                sq.append(tq.consume());} ::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::35::::744::::771::::return (queue.length()) - (pos)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::this.tagName	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::this.query	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::this.query	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::119::::3173::::3179::::matches::::addFirst	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.parser.TokenQueue::::288::::9019::::9021::::end::::depth--	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::262::::8164::::8176::::int end = -1::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::217::::7649::::7655::::tagName::::this.query	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::134::::4752::::4863::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))    break;else    sq.append(tq.consume());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::355::::10856::::10866::::matchesWord::::toString	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::161::::5541::::5564::::tq.matches(":contains(")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::134::::4756::::4781::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::121::::3234::::3245::::return true::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.parser.TokenQueue::::355::::10834::::10923::::while ((!(isEmpty())) && ((matchesWord()) || (matchesAny("*|", "|", "_", "-"))))    (pos)++;::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::60::::1583::::1608::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::not()	false
org.jsoup.parser.TokenQueue::::23::::509::::513::::queue::::data	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::151::::5212::::5229::::tq.matchChomp("*")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::172::::4723::::4733::::pos += len::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::172::::4723::::4733::::pos += len::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::56::::1450::::1868::::while (!(tq.isEmpty())) {    boolean seenWhite = tq.consumeWhitespace();    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {        combinator(tq.consume());    }else        if (seenWhite) {            combinator(' ');        }else {            findElements();        }} ::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::224::::6655::::6664::::!(isEmpty())::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::337::::12236::::12245::::searchText::::this.query	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::consumeToIgnoreCase(seq)	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::consumeTo(seq)	false
org.jsoup.parser.TokenQueue::::355::::10856::::10868::::matchesWord()::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.parser.TokenQueue::::299::::9295::::9531::::for (char c : in.toCharArray()) {    if (c == (org.jsoup.parser.TokenQueue.ESC)) {        if ((last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)))            out.append(c);    }else        out.append(c);    last = c;}::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::224::::6656::::6662::::isEmpty::::matchesWhitespace	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::159::::5484::::5502::::tq.matches(":has(")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::140::::3713::::3722::::!(isEmpty())::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::if ((depth > 0) && (last != 0))    end = pos;	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::has()	false
org.jsoup.parser.TokenQueue::::354::::10809::::10824::::int start = pos::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.parser.TokenQueue::::268::::8287::::8293::::isEmpty::::toString	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::299::::9295::::9531::::for (char c : in.toCharArray()) {    if (c == (org.jsoup.parser.TokenQueue.ESC)) {        if ((last != 0) && (last == (org.jsoup.parser.TokenQueue.ESC)))            out.append(c);    }else        out.append(c);    last = c;}::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::123::::3276::::3288::::return false::::INSERT::::STATEMENT::::if (!(matches(seq)))    throw new java.lang.IllegalStateException("Queue did not match expected sequence");	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::consumeToIgnoreCase(seq)	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::consumeTo(seq)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::223::::6623::::6638::::int start = pos::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::49::::1206::::1439::::if (tq.matchesAny(org.jsoup.select.QueryParser.combinators)) {    evals.add(new org.jsoup.select.StructuralEvaluator.Root());    combinator(tq.consume());}else {    findElements();}::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.parser.TokenQueue::::275::::8569::::8781::::if (c.equals(open)) {    depth++;    if (start == (-1))        start = pos;}else    if (c.equals(close))        depth--;::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::this	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::355::::10842::::10848::::isEmpty::::matchesWhitespace	false
org.jsoup.select.QueryParser::::145::::5015::::5032::::tq.matchChomp(".")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::this.tagName	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"Could not parse nth-index '%s': unexpected format"	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::132::::4635::::4863::::if (tq.matches("["))    sq.append("[").append(tq.chompBalanced('[', ']')).append("]");else    if (tq.matchesAny(org.jsoup.select.QueryParser.combinators))        break;    else        sq.append(tq.consume());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::288::::8984::::8986::::end::::depth--	false
org.jsoup.parser.TokenQueue::::140::::3714::::3720::::isEmpty::::matchesWhitespace	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::354::::10809::::10824::::int start = pos::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::132::::3475::::3481::::isEmpty::::matchesWhitespace	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::157::::5417::::5437::::tq.matchChomp(":eq(")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::234::::8480::::8482::::key::::this.query	false
org.jsoup.parser.TokenQueue::::223::::6623::::6638::::int start = pos::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.parser.TokenQueue::::224::::6656::::6662::::isEmpty::::toString	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::this.keyPrefix	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::227::::8198::::8204::::tagName::::"Unknown combinator: "	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::143::::4958::::4975::::tq.matchChomp("#")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.parser.TokenQueue::::93::::2387::::2399::::return false::::INSERT::::STATEMENT::::if (matches(s))    return true;	false
org.jsoup.parser.TokenQueue::::264::::8209::::8222::::char last = 0::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::355::::10841::::10850::::!(isEmpty())::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::237::::8527::::9721::::if (cq.isEmpty()) {    if (key.startsWith("^"))        evals.add(new org.jsoup.select.Evaluator.AttributeStarting(key.substring(1)));    else        evals.add(new org.jsoup.select.Evaluator.Attribute(key));}else {    if (cq.matchChomp("="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));    else        if (cq.matchChomp("!="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));        else            if (cq.matchChomp("^="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));            else                if (cq.matchChomp("$="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));                else                    if (cq.matchChomp("*="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                    else                        if (cq.matchChomp("~="))                            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                        else                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());}::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::132::::3474::::3483::::!(isEmpty())::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::338::::12304::::12306::::own::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::155::::5345::::5365::::tq.matchChomp(":gt(")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::this.keyPrefix	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::244::::8848::::8850::::key::::this.query	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::123::::3276::::3288::::return false::::INSERT::::STATEMENT::::if (matches(seq))    break;	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::remainder()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::49::::1210::::1235::::tq.matchesAny(org.jsoup.select.QueryParser.combinators)::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"Could not parse nth-index '%s': unexpected format"	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::153::::5276::::5296::::tq.matchChomp(":lt(")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::93::::2387::::2399::::return false::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::remainder()	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::this.keyPrefix	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::228::::6727::::6761::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::140::::3714::::3720::::isEmpty::::toString	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::220::::7751::::7757::::tagName::::"Unknown combinator: "	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::273::::8514::::8520::::inQuote::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::355::::10842::::10848::::isEmpty::::toString	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::285::::8854::::8856::::end::::depth--	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::358::::10942::::10976::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::if (isEmpty())    break;	false
org.jsoup.parser.TokenQueue::::132::::3475::::3481::::isEmpty::::toString	false
org.jsoup.select.QueryParser::::149::::5151::::5165::::tq.matches("[")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::132::::4639::::4653::::tq.matches("[")::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::this.id	false
org.jsoup.select.Evaluator::::302::::8060::::8062::::key::::this.className	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"Could not parse nth-index '%s': unexpected format"	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::228::::6727::::6761::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::this.keyPrefix	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::237::::8531::::8532::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.parser.TokenQueue::::358::::10942::::10976::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::"Unknown combinator: "	false
org.jsoup.select.QueryParser::::237::::8531::::8532::::cq::::this.tq	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::if (isEmpty())    return false;	false
org.jsoup.select.QueryParser::::243::::8765::::9711::::if (cq.matchChomp("="))    evals.add(new org.jsoup.select.Evaluator.AttributeWithValue(key, cq.remainder()));else    if (cq.matchChomp("!="))        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueNot(key, cq.remainder()));    else        if (cq.matchChomp("^="))            evals.add(new org.jsoup.select.Evaluator.AttributeWithValueStarting(key, cq.remainder()));        else            if (cq.matchChomp("$="))                evals.add(new org.jsoup.select.Evaluator.AttributeWithValueEnding(key, cq.remainder()));            else                if (cq.matchChomp("*="))                    evals.add(new org.jsoup.select.Evaluator.AttributeWithValueContaining(key, cq.remainder()));                else                    if (cq.matchChomp("~="))                        evals.add(new org.jsoup.select.Evaluator.AttributeWithValueMatching(key, java.util.regex.Pattern.compile(cq.remainder())));                    else                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse attribute query '%s': unexpected token at '%s'", query, cq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::355::::10842::::10848::::isEmpty::::remainder	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::this.id	false
org.jsoup.select.Evaluator::::303::::8096::::8100::::value::::this.className	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::224::::6656::::6662::::isEmpty::::remainder	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::168::::4565::::4567::::seq::::"Queue did not match expected sequence"	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::this.id	false
org.jsoup.select.Evaluator::::175::::4340::::4342::::key::::this.className	false
org.jsoup.parser.TokenQueue::::223::::6623::::6638::::int start = pos::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::remainder()	false
org.jsoup.parser.TokenQueue::::268::::8287::::8293::::isEmpty::::remainder	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::277::::8644::::8648::::start::::depth++	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::120::::3208::::3210::::seq::::"Queue did not match expected sequence"	false
org.jsoup.parser.TokenQueue::::354::::10809::::10824::::int start = pos::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.parser.TokenQueue::::278::::8681::::8685::::start::::depth++	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::"*|"	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::"*|"	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::"|"	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::"_"	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::"-"	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::"*|"	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::70::::1752::::1754::::seq::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.parser.TokenQueue::::228::::6727::::6761::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::358::::10942::::10976::::return queue.substring(start, pos)::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::224::::8081::::8087::::tagName::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::this.id	false
org.jsoup.select.Evaluator::::175::::4345::::4349::::value::::this.className	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::47::::1173::::1195::::tq.consumeWhitespace()::::INSERT::::STATEMENT::::if (seenWhite) {    combinator(' ');}else {    findElements();}	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.parser.TokenQueue::::140::::3714::::3720::::isEmpty::::remainder	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::if (start == (-1))    start = pos;	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::233::::8372::::8373::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::233::::8372::::8373::::cq::::this.tq	false
org.jsoup.parser.TokenQueue::::132::::3475::::3481::::isEmpty::::remainder	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::69::::1883::::1894::::evals.size()::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.parser.TokenQueue::::172::::4723::::4725::::pos::::len	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::235::::8494::::8495::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::243::::8769::::8770::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::235::::8494::::8495::::cq::::this.tq	false
org.jsoup.select.QueryParser::::243::::8769::::8770::::cq::::this.tq	false
org.jsoup.select.QueryParser::::143::::4954::::7193::::if (tq.matchChomp("#"))    byId();else    if (tq.matchChomp("."))        byClass();    else        if ((tq.matchesWord()) || (tq.matches("*|")))            byTag();        else            if (tq.matches("["))                byAttribute();            else                if (tq.matchChomp("*"))                    allElements();                else                    if (tq.matchChomp(":lt("))                        indexLessThan();                    else                        if (tq.matchChomp(":gt("))                            indexGreaterThan();                        else                            if (tq.matchChomp(":eq("))                                indexEquals();                            else                                if (tq.matches(":has("))                                    has();                                else                                    if (tq.matches(":contains("))                                        contains(false);                                    else                                        if (tq.matches(":containsOwn("))                                            contains(true);                                        else                                            if (tq.matches(":containsData("))                                                containsData();                                            else                                                if (tq.matches(":matches("))                                                    matches(false);                                                else                                                    if (tq.matches(":matchesOwn("))                                                        matches(true);                                                    else                                                        if (tq.matches(":not("))                                                            not();                                                        else                                                            if (tq.matchChomp(":nth-child("))                                                                cssNthChild(false, false);                                                            else                                                                if (tq.matchChomp(":nth-last-child("))                                                                    cssNthChild(true, false);                                                                else                                                                    if (tq.matchChomp(":nth-of-type("))                                                                        cssNthChild(false, true);                                                                    else                                                                        if (tq.matchChomp(":nth-last-of-type("))                                                                            cssNthChild(true, true);                                                                        else                                                                            if (tq.matchChomp(":first-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                            else                                                                                if (tq.matchChomp(":last-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                                else                                                                                    if (tq.matchChomp(":first-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                    else                                                                                        if (tq.matchChomp(":last-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                        else                                                                                            if (tq.matchChomp(":only-child"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                            else                                                                                                if (tq.matchChomp(":only-of-type"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                                else                                                                                                    if (tq.matchChomp(":empty"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                    else                                                                                                        if (tq.matchChomp(":root"))                                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                        else                                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::244::::8853::::8854::::cq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::244::::8853::::8854::::cq::::this.tq	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, true)	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(true, false)	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::cssNthChild(false, false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::149::::5147::::7193::::if (tq.matches("["))    byAttribute();else    if (tq.matchChomp("*"))        allElements();    else        if (tq.matchChomp(":lt("))            indexLessThan();        else            if (tq.matchChomp(":gt("))                indexGreaterThan();            else                if (tq.matchChomp(":eq("))                    indexEquals();                else                    if (tq.matches(":has("))                        has();                    else                        if (tq.matches(":contains("))                            contains(false);                        else                            if (tq.matches(":containsOwn("))                                contains(true);                            else                                if (tq.matches(":containsData("))                                    containsData();                                else                                    if (tq.matches(":matches("))                                        matches(false);                                    else                                        if (tq.matches(":matchesOwn("))                                            matches(true);                                        else                                            if (tq.matches(":not("))                                                not();                                            else                                                if (tq.matchChomp(":nth-child("))                                                    cssNthChild(false, false);                                                else                                                    if (tq.matchChomp(":nth-last-child("))                                                        cssNthChild(true, false);                                                    else                                                        if (tq.matchChomp(":nth-of-type("))                                                            cssNthChild(false, true);                                                        else                                                            if (tq.matchChomp(":nth-last-of-type("))                                                                cssNthChild(true, true);                                                            else                                                                if (tq.matchChomp(":first-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                else                                                                    if (tq.matchChomp(":last-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                    else                                                                        if (tq.matchChomp(":first-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                        else                                                                            if (tq.matchChomp(":last-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                            else                                                                                if (tq.matchChomp(":only-child"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                else                                                                                    if (tq.matchChomp(":only-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                    else                                                                                        if (tq.matchChomp(":empty"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                        else                                                                                            if (tq.matchChomp(":root"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                            else                                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(true)	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::161::::5537::::7193::::if (tq.matches(":contains("))    contains(false);else    if (tq.matches(":containsOwn("))        contains(true);    else        if (tq.matches(":containsData("))            containsData();        else            if (tq.matches(":matches("))                matches(false);            else                if (tq.matches(":matchesOwn("))                    matches(true);                else                    if (tq.matches(":not("))                        not();                    else                        if (tq.matchChomp(":nth-child("))                            cssNthChild(false, false);                        else                            if (tq.matchChomp(":nth-last-child("))                                cssNthChild(true, false);                            else                                if (tq.matchChomp(":nth-of-type("))                                    cssNthChild(false, true);                                else                                    if (tq.matchChomp(":nth-last-of-type("))                                        cssNthChild(true, true);                                    else                                        if (tq.matchChomp(":first-child"))                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                        else                                            if (tq.matchChomp(":last-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                            else                                                if (tq.matchChomp(":first-of-type"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                else                                                    if (tq.matchChomp(":last-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                    else                                                        if (tq.matchChomp(":only-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                        else                                                            if (tq.matchChomp(":only-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                            else                                                                if (tq.matchChomp(":empty"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                else                                                                    if (tq.matchChomp(":root"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                    else                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::35::::751::::764::::queue.length()::::DELETE::::INFIX	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::if (inQuote)    continue;	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::matches(false)	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::288::::9012::::9016::::start::::depth--	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::consumeToIgnoreCase(seq)	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::consumeTo(seq)	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(true)	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::contains(false)	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::151::::5208::::7193::::if (tq.matchChomp("*"))    allElements();else    if (tq.matchChomp(":lt("))        indexLessThan();    else        if (tq.matchChomp(":gt("))            indexGreaterThan();        else            if (tq.matchChomp(":eq("))                indexEquals();            else                if (tq.matches(":has("))                    has();                else                    if (tq.matches(":contains("))                        contains(false);                    else                        if (tq.matches(":containsOwn("))                            contains(true);                        else                            if (tq.matches(":containsData("))                                containsData();                            else                                if (tq.matches(":matches("))                                    matches(false);                                else                                    if (tq.matches(":matchesOwn("))                                        matches(true);                                    else                                        if (tq.matches(":not("))                                            not();                                        else                                            if (tq.matchChomp(":nth-child("))                                                cssNthChild(false, false);                                            else                                                if (tq.matchChomp(":nth-last-child("))                                                    cssNthChild(true, false);                                                else                                                    if (tq.matchChomp(":nth-of-type("))                                                        cssNthChild(false, true);                                                    else                                                        if (tq.matchChomp(":nth-last-of-type("))                                                            cssNthChild(true, true);                                                        else                                                            if (tq.matchChomp(":first-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                            else                                                                if (tq.matchChomp(":last-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                else                                                                    if (tq.matchChomp(":first-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                    else                                                                        if (tq.matchChomp(":last-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                        else                                                                            if (tq.matchChomp(":only-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                            else                                                                                if (tq.matchChomp(":only-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                else                                                                                    if (tq.matchChomp(":empty"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                    else                                                                                        if (tq.matchChomp(":root"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                        else                                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.parser.TokenQueue::::288::::9012::::9016::::start::::depth++	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::159::::5480::::7193::::if (tq.matches(":has("))    has();else    if (tq.matches(":contains("))        contains(false);    else        if (tq.matches(":containsOwn("))            contains(true);        else            if (tq.matches(":containsData("))                containsData();            else                if (tq.matches(":matches("))                    matches(false);                else                    if (tq.matches(":matchesOwn("))                        matches(true);                    else                        if (tq.matches(":not("))                            not();                        else                            if (tq.matchChomp(":nth-child("))                                cssNthChild(false, false);                            else                                if (tq.matchChomp(":nth-last-child("))                                    cssNthChild(true, false);                                else                                    if (tq.matchChomp(":nth-of-type("))                                        cssNthChild(false, true);                                    else                                        if (tq.matchChomp(":nth-last-of-type("))                                            cssNthChild(true, true);                                        else                                            if (tq.matchChomp(":first-child"))                                                evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                            else                                                if (tq.matchChomp(":last-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                else                                                    if (tq.matchChomp(":first-of-type"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                    else                                                        if (tq.matchChomp(":last-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                        else                                                            if (tq.matchChomp(":only-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                            else                                                                if (tq.matchChomp(":only-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                else                                                                    if (tq.matchChomp(":empty"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                    else                                                                        if (tq.matchChomp(":root"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                        else                                                                            throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::remainder()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::remainder()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::not()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::findElements()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::157::::5413::::7193::::if (tq.matchChomp(":eq("))    indexEquals();else    if (tq.matches(":has("))        has();    else        if (tq.matches(":contains("))            contains(false);        else            if (tq.matches(":containsOwn("))                contains(true);            else                if (tq.matches(":containsData("))                    containsData();                else                    if (tq.matches(":matches("))                        matches(false);                    else                        if (tq.matches(":matchesOwn("))                            matches(true);                        else                            if (tq.matches(":not("))                                not();                            else                                if (tq.matchChomp(":nth-child("))                                    cssNthChild(false, false);                                else                                    if (tq.matchChomp(":nth-last-child("))                                        cssNthChild(true, false);                                    else                                        if (tq.matchChomp(":nth-of-type("))                                            cssNthChild(false, true);                                        else                                            if (tq.matchChomp(":nth-last-of-type("))                                                cssNthChild(true, true);                                            else                                                if (tq.matchChomp(":first-child"))                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                else                                                    if (tq.matchChomp(":last-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                    else                                                        if (tq.matchChomp(":first-of-type"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                        else                                                            if (tq.matchChomp(":last-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                            else                                                                if (tq.matchChomp(":only-child"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                else                                                                    if (tq.matchChomp(":only-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                    else                                                                        if (tq.matchChomp(":empty"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                        else                                                                            if (tq.matchChomp(":root"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                            else                                                                                throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::containsData()	false
org.jsoup.select.QueryParser::::147::::5071::::7193::::if ((tq.matchesWord()) || (tq.matches("*|")))    byTag();else    if (tq.matches("["))        byAttribute();    else        if (tq.matchChomp("*"))            allElements();        else            if (tq.matchChomp(":lt("))                indexLessThan();            else                if (tq.matchChomp(":gt("))                    indexGreaterThan();                else                    if (tq.matchChomp(":eq("))                        indexEquals();                    else                        if (tq.matches(":has("))                            has();                        else                            if (tq.matches(":contains("))                                contains(false);                            else                                if (tq.matches(":containsOwn("))                                    contains(true);                                else                                    if (tq.matches(":containsData("))                                        containsData();                                    else                                        if (tq.matches(":matches("))                                            matches(false);                                        else                                            if (tq.matches(":matchesOwn("))                                                matches(true);                                            else                                                if (tq.matches(":not("))                                                    not();                                                else                                                    if (tq.matchChomp(":nth-child("))                                                        cssNthChild(false, false);                                                    else                                                        if (tq.matchChomp(":nth-last-child("))                                                            cssNthChild(true, false);                                                        else                                                            if (tq.matchChomp(":nth-of-type("))                                                                cssNthChild(false, true);                                                            else                                                                if (tq.matchChomp(":nth-last-of-type("))                                                                    cssNthChild(true, true);                                                                else                                                                    if (tq.matchChomp(":first-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                    else                                                                        if (tq.matchChomp(":last-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                        else                                                                            if (tq.matchChomp(":first-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                            else                                                                                if (tq.matchChomp(":last-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                else                                                                                    if (tq.matchChomp(":only-child"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                    else                                                                                        if (tq.matchChomp(":only-of-type"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                        else                                                                                            if (tq.matchChomp(":empty"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                            else                                                                                                if (tq.matchChomp(":root"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                else                                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::remainder()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::remainder()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::has()	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::remainder()	false
org.jsoup.select.QueryParser::::145::::5011::::7193::::if (tq.matchChomp("."))    byClass();else    if ((tq.matchesWord()) || (tq.matches("*|")))        byTag();    else        if (tq.matches("["))            byAttribute();        else            if (tq.matchChomp("*"))                allElements();            else                if (tq.matchChomp(":lt("))                    indexLessThan();                else                    if (tq.matchChomp(":gt("))                        indexGreaterThan();                    else                        if (tq.matchChomp(":eq("))                            indexEquals();                        else                            if (tq.matches(":has("))                                has();                            else                                if (tq.matches(":contains("))                                    contains(false);                                else                                    if (tq.matches(":containsOwn("))                                        contains(true);                                    else                                        if (tq.matches(":containsData("))                                            containsData();                                        else                                            if (tq.matches(":matches("))                                                matches(false);                                            else                                                if (tq.matches(":matchesOwn("))                                                    matches(true);                                                else                                                    if (tq.matches(":not("))                                                        not();                                                    else                                                        if (tq.matchChomp(":nth-child("))                                                            cssNthChild(false, false);                                                        else                                                            if (tq.matchChomp(":nth-last-child("))                                                                cssNthChild(true, false);                                                            else                                                                if (tq.matchChomp(":nth-of-type("))                                                                    cssNthChild(false, true);                                                                else                                                                    if (tq.matchChomp(":nth-last-of-type("))                                                                        cssNthChild(true, true);                                                                    else                                                                        if (tq.matchChomp(":first-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                                        else                                                                            if (tq.matchChomp(":last-child"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                                            else                                                                                if (tq.matchChomp(":first-of-type"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                                else                                                                                    if (tq.matchChomp(":last-of-type"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                                    else                                                                                        if (tq.matchChomp(":only-child"))                                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                                        else                                                                                            if (tq.matchChomp(":only-of-type"))                                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                                            else                                                                                                if (tq.matchChomp(":empty"))                                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                                else                                                                                                    if (tq.matchChomp(":root"))                                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                                    else                                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::remainder()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexEquals()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexGreaterThan()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::remainder()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::indexLessThan()	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::155::::5341::::7193::::if (tq.matchChomp(":gt("))    indexGreaterThan();else    if (tq.matchChomp(":eq("))        indexEquals();    else        if (tq.matches(":has("))            has();        else            if (tq.matches(":contains("))                contains(false);            else                if (tq.matches(":containsOwn("))                    contains(true);                else                    if (tq.matches(":containsData("))                        containsData();                    else                        if (tq.matches(":matches("))                            matches(false);                        else                            if (tq.matches(":matchesOwn("))                                matches(true);                            else                                if (tq.matches(":not("))                                    not();                                else                                    if (tq.matchChomp(":nth-child("))                                        cssNthChild(false, false);                                    else                                        if (tq.matchChomp(":nth-last-child("))                                            cssNthChild(true, false);                                        else                                            if (tq.matchChomp(":nth-of-type("))                                                cssNthChild(false, true);                                            else                                                if (tq.matchChomp(":nth-last-of-type("))                                                    cssNthChild(true, true);                                                else                                                    if (tq.matchChomp(":first-child"))                                                        evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                    else                                                        if (tq.matchChomp(":last-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                        else                                                            if (tq.matchChomp(":first-of-type"))                                                                evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                            else                                                                if (tq.matchChomp(":last-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                else                                                                    if (tq.matchChomp(":only-child"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                    else                                                                        if (tq.matchChomp(":only-of-type"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                        else                                                                            if (tq.matchChomp(":empty"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                            else                                                                                if (tq.matchChomp(":root"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                else                                                                                    throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.parser.TokenQueue::::278::::8681::::8685::::start::::depth--	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::remainder()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::allElements()	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byAttribute()	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::remainder	false
org.jsoup.parser.TokenQueue::::277::::8644::::8648::::start::::depth--	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byTag()	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::remainder()	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byClass()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::combinator(' ')	false
org.jsoup.select.QueryParser::::153::::5272::::7193::::if (tq.matchChomp(":lt("))    indexLessThan();else    if (tq.matchChomp(":gt("))        indexGreaterThan();    else        if (tq.matchChomp(":eq("))            indexEquals();        else            if (tq.matches(":has("))                has();            else                if (tq.matches(":contains("))                    contains(false);                else                    if (tq.matches(":containsOwn("))                        contains(true);                    else                        if (tq.matches(":containsData("))                            containsData();                        else                            if (tq.matches(":matches("))                                matches(false);                            else                                if (tq.matches(":matchesOwn("))                                    matches(true);                                else                                    if (tq.matches(":not("))                                        not();                                    else                                        if (tq.matchChomp(":nth-child("))                                            cssNthChild(false, false);                                        else                                            if (tq.matchChomp(":nth-last-child("))                                                cssNthChild(true, false);                                            else                                                if (tq.matchChomp(":nth-of-type("))                                                    cssNthChild(false, true);                                                else                                                    if (tq.matchChomp(":nth-last-of-type("))                                                        cssNthChild(true, true);                                                    else                                                        if (tq.matchChomp(":first-child"))                                                            evals.add(new org.jsoup.select.Evaluator.IsFirstChild());                                                        else                                                            if (tq.matchChomp(":last-child"))                                                                evals.add(new org.jsoup.select.Evaluator.IsLastChild());                                                            else                                                                if (tq.matchChomp(":first-of-type"))                                                                    evals.add(new org.jsoup.select.Evaluator.IsFirstOfType());                                                                else                                                                    if (tq.matchChomp(":last-of-type"))                                                                        evals.add(new org.jsoup.select.Evaluator.IsLastOfType());                                                                    else                                                                        if (tq.matchChomp(":only-child"))                                                                            evals.add(new org.jsoup.select.Evaluator.IsOnlyChild());                                                                        else                                                                            if (tq.matchChomp(":only-of-type"))                                                                                evals.add(new org.jsoup.select.Evaluator.IsOnlyOfType());                                                                            else                                                                                if (tq.matchChomp(":empty"))                                                                                    evals.add(new org.jsoup.select.Evaluator.IsEmpty());                                                                                else                                                                                    if (tq.matchChomp(":root"))                                                                                        evals.add(new org.jsoup.select.Evaluator.IsRoot());                                                                                    else                                                                                        throw new org.jsoup.select.Selector.SelectorParseException("Could not parse query '%s': unexpected token at '%s'", query, tq.remainder());::::INSERT::::STATEMENT::::byId()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::remainder()	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::remainder()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::addFirst(c.toString())	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::remainder	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::org.jsoup.select.QueryParser.NTH_AB	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::depth++	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::c.toString()	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::org.jsoup.select.QueryParser.NTH_B	false
org.jsoup.parser.TokenQueue::::278::::8689::::8691::::pos::::depth++	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::remainder	false
org.jsoup.parser.TokenQueue::::285::::8860::::8862::::pos::::depth++	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::132::::3512::::3516::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::335::::12085::::12086::::tq::::this.tq	false
org.jsoup.select.QueryParser::::335::::12085::::12086::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::133::::4694::::4695::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::336::::12181::::12182::::tq::::this.tq	false
org.jsoup.select.QueryParser::::336::::12181::::12182::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::133::::4694::::4695::::tq::::this.tq	false
org.jsoup.parser.TokenQueue::::285::::8860::::8862::::pos::::depth--	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::this.tq	false
org.jsoup.select.QueryParser::::58::::1542::::1543::::tq::::this.tq	false
org.jsoup.select.QueryParser::::58::::1542::::1543::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::this	false
org.jsoup.select.QueryParser::::60::::1583::::1584::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::60::::1583::::1584::::tq::::this.tq	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::70::::1713::::1717::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::this.tq	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::61::::1640::::1641::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.parser.TokenQueue::::278::::8689::::8691::::pos::::depth--	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::this.tq	false
org.jsoup.select.QueryParser::::157::::5417::::5418::::tq::::this.tq	false
org.jsoup.select.QueryParser::::157::::5417::::5418::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::61::::1640::::1641::::tq::::this.tq	false
org.jsoup.parser.TokenQueue::::268::::8287::::8295::::isEmpty()::::INSERT::::STATEMENT::::depth--	false
org.jsoup.select.QueryParser::::155::::5345::::5346::::tq::::this.tq	false
org.jsoup.select.QueryParser::::155::::5345::::5346::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::232::::8305::::8306::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::153::::5276::::5277::::tq::::this.tq	false
org.jsoup.select.QueryParser::::153::::5276::::5277::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::232::::8305::::8306::::tq::::this.tq	false
org.jsoup.select.QueryParser::::151::::5212::::5213::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::151::::5212::::5213::::tq::::this.tq	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::288::::8996::::9000::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::147::::5075::::5076::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::145::::5015::::5016::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::56::::1458::::1459::::tq::::this.tq	false
org.jsoup.select.QueryParser::::56::::1458::::1459::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::49::::1210::::1211::::tq::::this.tq	false
org.jsoup.select.QueryParser::::49::::1210::::1211::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::143::::4958::::4959::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::215::::7593::::7594::::tq::::this.tq	false
org.jsoup.select.QueryParser::::215::::7593::::7594::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::47::::1173::::1174::::tq::::this.tq	false
org.jsoup.select.QueryParser::::47::::1173::::1174::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::this.tq	false
org.jsoup.select.QueryParser::::147::::5075::::5076::::tq::::this.tq	false
org.jsoup.select.QueryParser::::145::::5015::::5016::::tq::::this.tq	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::this	false
org.jsoup.select.QueryParser::::143::::4958::::4959::::tq::::this.tq	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::358::::10949::::10953::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::137::::4850::::4851::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::134::::4756::::4757::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::this	false
org.jsoup.select.QueryParser::::137::::4850::::4851::::tq::::this.tq	false
org.jsoup.select.QueryParser::::134::::4756::::4757::::tq::::this.tq	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::228::::6734::::6738::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::this.tq	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::this.tq	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::this	false
org.jsoup.select.QueryParser::::129::::4490::::4491::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::129::::4490::::4491::::tq::::this.tq	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::this	false
org.jsoup.select.QueryParser::::76::::2048::::2049::::tq::::new org.jsoup.parser.TokenQueue(query)	false
org.jsoup.select.QueryParser::::76::::2048::::2049::::tq::::this.tq	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::155::::4049::::4053::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IsRoot()	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IsEmpty()	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IsOnlyOfType()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IsRoot()	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IsOnlyChild()	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::391::::11881::::11885::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IsRoot()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IsEmpty()	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IsEmpty()	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::391::::11902::::11906::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IsOnlyOfType()	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IsOnlyOfType()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IsOnlyChild()	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IsOnlyChild()	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IsLastChild()	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::35::::751::::755::::queue::::"Queue did not match expected sequence"	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::392::::11933::::11937::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IsFirstChild()	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IsLastChild()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IsLastChild()	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IsFirstChild()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IsFirstChild()	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::this	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IsRoot()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IsEmpty()	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IsRoot()	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IsEmpty()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IsOnlyOfType()	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::"Queue not long enough to consume sequence"	false
org.jsoup.parser.TokenQueue::::140::::3753::::3757::::queue::::"Queue did not match expected sequence"	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IsOnlyOfType()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IsOnlyChild()	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IsOnlyChild()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IsLastChild()	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IsLastChild()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IsFirstChild()	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IsFirstChild()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IsRoot()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IsEmpty()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IsOnlyOfType()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IsOnlyChild()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IsLastChild()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IsFirstChild()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IndexLessThan(consumeIndex())	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IndexGreaterThan(consumeIndex())	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.IndexEquals(consumeIndex())	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.QueryParser(query)	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IndexLessThan(consumeIndex())	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IndexGreaterThan(consumeIndex())	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.IndexEquals(consumeIndex())	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IndexLessThan(consumeIndex())	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IndexGreaterThan(consumeIndex())	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.IndexEquals(consumeIndex())	false
org.jsoup.select.QueryParser::::149::::5151::::5152::::tq::::new org.jsoup.select.Evaluator.AllElements()	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IndexLessThan(consumeIndex())	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IndexGreaterThan(consumeIndex())	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.IndexEquals(consumeIndex())	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IndexLessThan(consumeIndex())	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IndexGreaterThan(consumeIndex())	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.IndexEquals(consumeIndex())	false
org.jsoup.select.QueryParser::::132::::4639::::4640::::tq::::new org.jsoup.select.Evaluator.AllElements()	false
org.jsoup.select.QueryParser::::147::::5095::::5096::::tq::::new org.jsoup.select.Evaluator.AllElements()	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IndexLessThan(consumeIndex())	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IndexGreaterThan(consumeIndex())	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.IndexEquals(consumeIndex())	false
org.jsoup.select.QueryParser::::130::::4522::::4523::::tq::::new org.jsoup.select.Evaluator.AllElements()	false
org.jsoup.select.QueryParser::::161::::5541::::5542::::tq::::new org.jsoup.select.Evaluator.AllElements()	false
org.jsoup.select.QueryParser::::159::::5484::::5485::::tq::::new org.jsoup.select.Evaluator.AllElements()	false
