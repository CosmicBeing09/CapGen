<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	288:291	11:11	null	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.Boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	429:441	17:17	wasAccessible	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	446:449	17:17	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	429:449	17:17	(wasAccessible) != null	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtAssertImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	453:490	17:17	"accessibility info shall not be null"	[]	[]	[spoon.support.reflect.code.CtAssertImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssertImpl	Statement	class spoon.support.reflect.code.CtAssertImpl	422:490	17:17	assert (wasAccessible) != null : "accessibility info shall not be null"	[]	[java.lang.Boolean:wasAccessible]	[]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.AccessibleObject	Expression	class spoon.support.reflect.code.CtVariableReadImpl	519:534	19:19	accessibleObject	[]	[java.lang.reflect.AccessibleObject:accessibleObject]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	550:562	19:19	wasAccessible	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	519:564	19:19	accessibleObject.setAccessible(wasAccessible)	[void:setAccessible]	[java.lang.reflect.AccessibleObject:accessibleObject, java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	501:627	18:22	try {    accessibleObject.setAccessible(wasAccessible);} catch (java.lang.Throwable t) {}	[void:setAccessible]	[java.lang.reflect.AccessibleObject:accessibleObject, java.lang.Boolean:wasAccessible]	[]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Boolean	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	822:834	29:29	wasAccessible	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.AccessibleObject	Expression	class spoon.support.reflect.code.CtVariableReadImpl	838:853	29:29	accessibleObject	[]	[java.lang.reflect.AccessibleObject:accessibleObject]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	838:868	29:29	accessibleObject.isAccessible()	[boolean:isAccessible]	[java.lang.reflect.AccessibleObject:accessibleObject]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	822:869	29:29	wasAccessible = accessibleObject.isAccessible()	[boolean:isAccessible]	[java.lang.reflect.AccessibleObject:accessibleObject, java.lang.Boolean:wasAccessible]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.AccessibleObject	Expression	class spoon.support.reflect.code.CtVariableReadImpl	879:894	30:30	accessibleObject	[]	[java.lang.reflect.AccessibleObject:accessibleObject]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	910:913	30:30	true	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	879:915	30:30	accessibleObject.setAccessible(true)	[void:setAccessible]	[java.lang.reflect.AccessibleObject:accessibleObject]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
