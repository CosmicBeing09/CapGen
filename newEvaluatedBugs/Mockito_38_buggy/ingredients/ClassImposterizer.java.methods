Constructor	sun.reflect.generics.factory.GenericsFactory	getFactory	[]
Constructor	sun.reflect.generics.repository.ConstructorRepository	getGenericInfo	[]
Constructor	java.lang.reflect.Executable	getRoot	[]
Constructor		java.lang.reflect.Constructor	[java.lang.Class, java.lang.Class[], java.lang.Class[], int, int, java.lang.String, byte[], byte[]]
Constructor	java.lang.reflect.Constructor<T>	copy	[]
Constructor	boolean	hasGenericInformation	[]
Constructor	byte[]	getAnnotationBytes	[]
Constructor	java.lang.Class<T>	getDeclaringClass	[]
Constructor	java.lang.String	getName	[]
Constructor	int	getModifiers	[]
Constructor	java.lang.reflect.TypeVariable<java.lang.reflect.Constructor<T>>[]	getTypeParameters	[]
Constructor	java.lang.Class<?>[]	getParameterTypes	[]
Constructor	int	getParameterCount	[]
Constructor	java.lang.reflect.Type[]	getGenericParameterTypes	[]
Constructor	java.lang.Class<?>[]	getExceptionTypes	[]
Constructor	java.lang.reflect.Type[]	getGenericExceptionTypes	[]
Constructor	boolean	equals	[java.lang.Object]
Constructor	int	hashCode	[]
Constructor	java.lang.String	toString	[]
Constructor	void	specificToStringHeader	[java.lang.StringBuilder]
Constructor	java.lang.String	toGenericString	[]
Constructor	void	specificToGenericStringHeader	[java.lang.StringBuilder]
Constructor	T	newInstance	[java.lang.Object[]]
Constructor	boolean	isVarArgs	[]
Constructor	boolean	isSynthetic	[]
Constructor	sun.reflect.ConstructorAccessor	acquireConstructorAccessor	[]
Constructor	sun.reflect.ConstructorAccessor	getConstructorAccessor	[]
Constructor	void	setConstructorAccessor	[sun.reflect.ConstructorAccessor]
Constructor	int	getSlot	[]
Constructor	java.lang.String	getSignature	[]
Constructor	byte[]	getRawAnnotations	[]
Constructor	byte[]	getRawParameterAnnotations	[]
Constructor	T	getAnnotation	[java.lang.Class]
Constructor	java.lang.annotation.Annotation[]	getDeclaredAnnotations	[]
Constructor	java.lang.annotation.Annotation[][]	getParameterAnnotations	[]
Constructor	void	handleParameterNumberMismatch	[int, int]
Constructor	java.lang.reflect.AnnotatedType	getAnnotatedReturnType	[]
Constructor	java.lang.reflect.AnnotatedType	getAnnotatedReceiverType	[]
Method	java.lang.String	getGenericSignature	[]
Method	sun.reflect.generics.factory.GenericsFactory	getFactory	[]
Method	sun.reflect.generics.repository.MethodRepository	getGenericInfo	[]
Method		java.lang.reflect.Method	[java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], int, int, java.lang.String, byte[], byte[], byte[]]
Method	java.lang.reflect.Method	copy	[]
Method	java.lang.reflect.Executable	getRoot	[]
Method	boolean	hasGenericInformation	[]
Method	byte[]	getAnnotationBytes	[]
Method	java.lang.Class<?>	getDeclaringClass	[]
Method	java.lang.String	getName	[]
Method	int	getModifiers	[]
Method	java.lang.reflect.TypeVariable<java.lang.reflect.Method>[]	getTypeParameters	[]
Method	java.lang.Class<?>	getReturnType	[]
Method	java.lang.reflect.Type	getGenericReturnType	[]
Method	java.lang.Class<?>[]	getParameterTypes	[]
Method	int	getParameterCount	[]
Method	java.lang.reflect.Type[]	getGenericParameterTypes	[]
Method	java.lang.Class<?>[]	getExceptionTypes	[]
Method	java.lang.reflect.Type[]	getGenericExceptionTypes	[]
Method	boolean	equals	[java.lang.Object]
Method	int	hashCode	[]
Method	java.lang.String	toString	[]
Method	void	specificToStringHeader	[java.lang.StringBuilder]
Method	java.lang.String	toGenericString	[]
Method	void	specificToGenericStringHeader	[java.lang.StringBuilder]
Method	java.lang.Object	invoke	[java.lang.Object, java.lang.Object[]]
Method	boolean	isBridge	[]
Method	boolean	isVarArgs	[]
Method	boolean	isSynthetic	[]
Method	boolean	isDefault	[]
Method	sun.reflect.MethodAccessor	acquireMethodAccessor	[]
Method	sun.reflect.MethodAccessor	getMethodAccessor	[]
Method	void	setMethodAccessor	[sun.reflect.MethodAccessor]
Method	java.lang.Object	getDefaultValue	[]
Method	T	getAnnotation	[java.lang.Class]
Method	java.lang.annotation.Annotation[]	getDeclaredAnnotations	[]
Method	java.lang.annotation.Annotation[][]	getParameterAnnotations	[]
Method	java.lang.reflect.AnnotatedType	getAnnotatedReturnType	[]
Method	void	handleParameterNumberMismatch	[int, int]
Modifier		java.lang.reflect.Modifier	[]
Modifier	boolean	isPublic	[int]
Modifier	boolean	isPrivate	[int]
Modifier	boolean	isProtected	[int]
Modifier	boolean	isStatic	[int]
Modifier	boolean	isFinal	[int]
Modifier	boolean	isSynchronized	[int]
Modifier	boolean	isVolatile	[int]
Modifier	boolean	isTransient	[int]
Modifier	boolean	isNative	[int]
Modifier	boolean	isInterface	[int]
Modifier	boolean	isAbstract	[int]
Modifier	boolean	isStrict	[int]
Modifier	java.lang.String	toString	[int]
Modifier	boolean	isSynthetic	[int]
Modifier	boolean	isMandated	[int]
Modifier	int	classModifiers	[]
Modifier	int	interfaceModifiers	[]
Modifier	int	constructorModifiers	[]
Modifier	int	methodModifiers	[]
Modifier	int	fieldModifiers	[]
Modifier	int	parameterModifiers	[]
MockitoException		org.mockito.exceptions.base.MockitoException	[java.lang.String, java.lang.Throwable]
MockitoException		org.mockito.exceptions.base.MockitoException	[java.lang.String]
MockitoException	void	filterStackTrace	[]
MockitoException	java.lang.StackTraceElement[]	getUnfilteredStackTrace	[]
MockitoNamingPolicy		org.mockito.internal.creation.cglib.MockitoNamingPolicy	[]
MockitoNamingPolicy	java.lang.String	getTag	[]
ClassWithSuperclassToWorkAroundCglibBug		org.mockito.internal.creation.jmock.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug	[]
1		org.mockito.internal.creation.jmock.ClassImposterizer$1	[]
1	java.lang.String	getClassName	[java.lang.String, java.lang.String, java.lang.Object, org.mockito.cglib.core.Predicate]
2	int	accept	[java.lang.reflect.Method]
ClassImposterizer		org.mockito.internal.creation.jmock.ClassImposterizer	[]
ClassImposterizer	boolean	canImposterise	[java.lang.Class]
ClassImposterizer	T	imposterise	[org.mockito.cglib.proxy.MethodInterceptor, java.lang.Class, java.lang.Class[]]
ClassImposterizer	void	setConstructorsAccessible	[java.lang.Class, boolean]
3	void	filterConstructors	[java.lang.Class, java.util.List]
ClassImposterizer	java.lang.Class<?>	createProxyClass	[java.lang.Class, java.lang.Class[]]
ClassImposterizer	java.lang.Object	createProxy	[java.lang.Class, org.mockito.cglib.proxy.MethodInterceptor]
ClassImposterizer	java.lang.Class<?>[]	prepend	[java.lang.Class, java.lang.Class[]]
