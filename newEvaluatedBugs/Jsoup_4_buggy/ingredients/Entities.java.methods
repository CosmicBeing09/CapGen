IOException		java.io.IOException	[]
IOException		java.io.IOException	[java.lang.String]
IOException		java.io.IOException	[java.lang.String, java.lang.Throwable]
IOException		java.io.IOException	[java.lang.Throwable]
InputStream		java.io.InputStream	[]
InputStream	int	read	[]
InputStream	int	read	[byte[]]
InputStream	int	read	[byte[], int, int]
InputStream	long	skip	[long]
InputStream	int	available	[]
InputStream	void	close	[]
InputStream	void	mark	[int]
InputStream	void	reset	[]
InputStream	boolean	markSupported	[]
ExtendedProviderHolder		java.nio.charset.Charset$ExtendedProviderHolder	[]
1		java.nio.charset.Charset$ExtendedProviderHolder$1	[]
1	java.nio.charset.spi.CharsetProvider	run	[]
ExtendedProviderHolder	java.nio.charset.spi.CharsetProvider	extendedProvider	[]
Charset	boolean	atBugLevel	[java.lang.String]
Charset	void	checkName	[java.lang.String]
Charset	void	cache	[java.lang.String, java.nio.charset.Charset]
1		java.nio.charset.Charset$1	[]
1	boolean	getNext	[]
1	boolean	hasNext	[]
1	java.nio.charset.spi.CharsetProvider	next	[]
1	void	remove	[]
Charset	java.util.Iterator<java.nio.charset.spi.CharsetProvider>	providers	[]
2		java.nio.charset.Charset$2	[]
2	java.nio.charset.Charset	run	[]
Charset	java.nio.charset.Charset	lookupViaProviders	[java.lang.String]
Charset	java.nio.charset.Charset	lookupExtendedCharset	[java.lang.String]
Charset	java.nio.charset.Charset	lookup	[java.lang.String]
Charset	java.nio.charset.Charset	lookup2	[java.lang.String]
Charset	boolean	isSupported	[java.lang.String]
Charset	java.nio.charset.Charset	forName	[java.lang.String]
Charset	void	put	[java.util.Iterator, java.util.Map]
3		java.nio.charset.Charset$3	[]
3	java.util.SortedMap<java.lang.String, java.nio.charset.Charset>	run	[]
Charset	java.util.SortedMap<java.lang.String, java.nio.charset.Charset>	availableCharsets	[]
Charset	java.nio.charset.Charset	defaultCharset	[]
Charset		java.nio.charset.Charset	[java.lang.String, java.lang.String[]]
Charset	java.lang.String	name	[]
Charset	java.util.Set<java.lang.String>	aliases	[]
Charset	java.lang.String	displayName	[]
Charset	boolean	isRegistered	[]
Charset	java.lang.String	displayName	[java.util.Locale]
Charset	boolean	contains	[java.nio.charset.Charset]
Charset	java.nio.charset.CharsetDecoder	newDecoder	[]
Charset	java.nio.charset.CharsetEncoder	newEncoder	[]
Charset	boolean	canEncode	[]
Charset	java.nio.CharBuffer	decode	[java.nio.ByteBuffer]
Charset	java.nio.ByteBuffer	encode	[java.nio.CharBuffer]
Charset	java.nio.ByteBuffer	encode	[java.lang.String]
Charset	int	compareTo	[java.nio.charset.Charset]
Charset	int	hashCode	[]
Charset	boolean	equals	[java.lang.Object]
Charset	java.lang.String	toString	[]
CharsetEncoder		java.nio.charset.CharsetEncoder	[java.nio.charset.Charset, float, float, byte[]]
CharsetEncoder		java.nio.charset.CharsetEncoder	[java.nio.charset.Charset, float, float]
CharsetEncoder	java.nio.charset.Charset	charset	[]
CharsetEncoder	byte[]	replacement	[]
CharsetEncoder	java.nio.charset.CharsetEncoder	replaceWith	[byte[]]
CharsetEncoder	void	implReplaceWith	[byte[]]
CharsetEncoder	boolean	isLegalReplacement	[byte[]]
CharsetEncoder	java.nio.charset.CodingErrorAction	malformedInputAction	[]
CharsetEncoder	java.nio.charset.CharsetEncoder	onMalformedInput	[java.nio.charset.CodingErrorAction]
CharsetEncoder	void	implOnMalformedInput	[java.nio.charset.CodingErrorAction]
CharsetEncoder	java.nio.charset.CodingErrorAction	unmappableCharacterAction	[]
CharsetEncoder	java.nio.charset.CharsetEncoder	onUnmappableCharacter	[java.nio.charset.CodingErrorAction]
CharsetEncoder	void	implOnUnmappableCharacter	[java.nio.charset.CodingErrorAction]
CharsetEncoder	float	averageBytesPerChar	[]
CharsetEncoder	float	maxBytesPerChar	[]
CharsetEncoder	java.nio.charset.CoderResult	encode	[java.nio.CharBuffer, java.nio.ByteBuffer, boolean]
CharsetEncoder	java.nio.charset.CoderResult	flush	[java.nio.ByteBuffer]
CharsetEncoder	java.nio.charset.CoderResult	implFlush	[java.nio.ByteBuffer]
CharsetEncoder	java.nio.charset.CharsetEncoder	reset	[]
CharsetEncoder	void	implReset	[]
CharsetEncoder	java.nio.charset.CoderResult	encodeLoop	[java.nio.CharBuffer, java.nio.ByteBuffer]
CharsetEncoder	java.nio.ByteBuffer	encode	[java.nio.CharBuffer]
CharsetEncoder	boolean	canEncode	[java.nio.CharBuffer]
CharsetEncoder	boolean	canEncode	[char]
CharsetEncoder	boolean	canEncode	[java.lang.CharSequence]
CharsetEncoder	void	throwIllegalStateException	[int, int]
ByteBuffer		java.nio.ByteBuffer	[int, int, int, int, byte[], int]
ByteBuffer		java.nio.ByteBuffer	[int, int, int, int]
ByteBuffer	java.nio.ByteBuffer	allocateDirect	[int]
ByteBuffer	java.nio.ByteBuffer	allocate	[int]
ByteBuffer	java.nio.ByteBuffer	wrap	[byte[], int, int]
ByteBuffer	java.nio.ByteBuffer	wrap	[byte[]]
ByteBuffer	java.nio.ByteBuffer	slice	[]
ByteBuffer	java.nio.ByteBuffer	duplicate	[]
ByteBuffer	java.nio.ByteBuffer	asReadOnlyBuffer	[]
ByteBuffer	byte	get	[]
ByteBuffer	java.nio.ByteBuffer	put	[byte]
ByteBuffer	byte	get	[int]
ByteBuffer	java.nio.ByteBuffer	put	[int, byte]
ByteBuffer	java.nio.ByteBuffer	get	[byte[], int, int]
ByteBuffer	java.nio.ByteBuffer	get	[byte[]]
ByteBuffer	java.nio.ByteBuffer	put	[java.nio.ByteBuffer]
ByteBuffer	java.nio.ByteBuffer	put	[byte[], int, int]
ByteBuffer	java.nio.ByteBuffer	put	[byte[]]
ByteBuffer	boolean	hasArray	[]
ByteBuffer	byte[]	array	[]
ByteBuffer	int	arrayOffset	[]
ByteBuffer	java.nio.ByteBuffer	compact	[]
ByteBuffer	boolean	isDirect	[]
ByteBuffer	java.lang.String	toString	[]
ByteBuffer	int	hashCode	[]
ByteBuffer	boolean	equals	[java.lang.Object]
ByteBuffer	boolean	equals	[byte, byte]
ByteBuffer	int	compareTo	[java.nio.ByteBuffer]
ByteBuffer	int	compare	[byte, byte]
ByteBuffer	java.nio.ByteOrder	order	[]
ByteBuffer	java.nio.ByteBuffer	order	[java.nio.ByteOrder]
ByteBuffer	byte	_get	[int]
ByteBuffer	void	_put	[int, byte]
ByteBuffer	char	getChar	[]
ByteBuffer	java.nio.ByteBuffer	putChar	[char]
ByteBuffer	char	getChar	[int]
ByteBuffer	java.nio.ByteBuffer	putChar	[int, char]
ByteBuffer	java.nio.CharBuffer	asCharBuffer	[]
ByteBuffer	short	getShort	[]
ByteBuffer	java.nio.ByteBuffer	putShort	[short]
ByteBuffer	short	getShort	[int]
ByteBuffer	java.nio.ByteBuffer	putShort	[int, short]
ByteBuffer	java.nio.ShortBuffer	asShortBuffer	[]
ByteBuffer	int	getInt	[]
ByteBuffer	java.nio.ByteBuffer	putInt	[int]
ByteBuffer	int	getInt	[int]
ByteBuffer	java.nio.ByteBuffer	putInt	[int, int]
ByteBuffer	java.nio.IntBuffer	asIntBuffer	[]
ByteBuffer	long	getLong	[]
ByteBuffer	java.nio.ByteBuffer	putLong	[long]
ByteBuffer	long	getLong	[int]
ByteBuffer	java.nio.ByteBuffer	putLong	[int, long]
ByteBuffer	java.nio.LongBuffer	asLongBuffer	[]
ByteBuffer	float	getFloat	[]
ByteBuffer	java.nio.ByteBuffer	putFloat	[float]
ByteBuffer	float	getFloat	[int]
ByteBuffer	java.nio.ByteBuffer	putFloat	[int, float]
ByteBuffer	java.nio.FloatBuffer	asFloatBuffer	[]
ByteBuffer	double	getDouble	[]
ByteBuffer	java.nio.ByteBuffer	putDouble	[double]
ByteBuffer	double	getDouble	[int]
ByteBuffer	java.nio.ByteBuffer	putDouble	[int, double]
ByteBuffer	java.nio.DoubleBuffer	asDoubleBuffer	[]
NaturalOrder		java.util.Arrays$NaturalOrder	[]
NaturalOrder	int	compare	[java.lang.Object, java.lang.Object]
LegacyMergeSort		java.util.Arrays$LegacyMergeSort	[]
ArrayList		java.util.Arrays$ArrayList	[E[]]
ArrayList	int	size	[]
ArrayList	java.lang.Object[]	toArray	[]
ArrayList	T[]	toArray	[T[]]
ArrayList	E	get	[int]
ArrayList	E	set	[int, E]
ArrayList	int	indexOf	[java.lang.Object]
ArrayList	boolean	contains	[java.lang.Object]
ArrayList	java.util.Spliterator<E>	spliterator	[]
ArrayList	void	forEach	[java.util.function.Consumer]
ArrayList	void	replaceAll	[java.util.function.UnaryOperator]
ArrayList	void	sort	[java.util.Comparator]
Arrays		java.util.Arrays	[]
Arrays	void	rangeCheck	[int, int, int]
Arrays	void	sort	[int[]]
Arrays	void	sort	[int[], int, int]
Arrays	void	sort	[long[]]
Arrays	void	sort	[long[], int, int]
Arrays	void	sort	[short[]]
Arrays	void	sort	[short[], int, int]
Arrays	void	sort	[char[]]
Arrays	void	sort	[char[], int, int]
Arrays	void	sort	[byte[]]
Arrays	void	sort	[byte[], int, int]
Arrays	void	sort	[float[]]
Arrays	void	sort	[float[], int, int]
Arrays	void	sort	[double[]]
Arrays	void	sort	[double[], int, int]
Arrays	void	parallelSort	[byte[]]
Arrays	void	parallelSort	[byte[], int, int]
Arrays	void	parallelSort	[char[]]
Arrays	void	parallelSort	[char[], int, int]
Arrays	void	parallelSort	[short[]]
Arrays	void	parallelSort	[short[], int, int]
Arrays	void	parallelSort	[int[]]
Arrays	void	parallelSort	[int[], int, int]
Arrays	void	parallelSort	[long[]]
Arrays	void	parallelSort	[long[], int, int]
Arrays	void	parallelSort	[float[]]
Arrays	void	parallelSort	[float[], int, int]
Arrays	void	parallelSort	[double[]]
Arrays	void	parallelSort	[double[], int, int]
Arrays	void	parallelSort	[T extends java.lang.Comparable[]]
Arrays	void	parallelSort	[T extends java.lang.Comparable[], int, int]
Arrays	void	parallelSort	[T[], java.util.Comparator]
Arrays	void	parallelSort	[T[], int, int, java.util.Comparator]
Arrays	void	sort	[java.lang.Object[]]
Arrays	void	legacyMergeSort	[java.lang.Object[]]
Arrays	void	sort	[java.lang.Object[], int, int]
Arrays	void	legacyMergeSort	[java.lang.Object[], int, int]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int]
Arrays	void	swap	[java.lang.Object[], int, int]
Arrays	void	sort	[T[], java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], java.util.Comparator]
Arrays	void	sort	[T[], int, int, java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], int, int, java.util.Comparator]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int, java.util.Comparator]
Arrays	void	parallelPrefix	[T[], java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[T[], int, int, java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[long[], java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[long[], int, int, java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[double[], java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[double[], int, int, java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[int[], java.util.function.IntBinaryOperator]
Arrays	void	parallelPrefix	[int[], int, int, java.util.function.IntBinaryOperator]
Arrays	int	binarySearch	[long[], long]
Arrays	int	binarySearch	[long[], int, int, long]
Arrays	int	binarySearch0	[long[], int, int, long]
Arrays	int	binarySearch	[int[], int]
Arrays	int	binarySearch	[int[], int, int, int]
Arrays	int	binarySearch0	[int[], int, int, int]
Arrays	int	binarySearch	[short[], short]
Arrays	int	binarySearch	[short[], int, int, short]
Arrays	int	binarySearch0	[short[], int, int, short]
Arrays	int	binarySearch	[char[], char]
Arrays	int	binarySearch	[char[], int, int, char]
Arrays	int	binarySearch0	[char[], int, int, char]
Arrays	int	binarySearch	[byte[], byte]
Arrays	int	binarySearch	[byte[], int, int, byte]
Arrays	int	binarySearch0	[byte[], int, int, byte]
Arrays	int	binarySearch	[double[], double]
Arrays	int	binarySearch	[double[], int, int, double]
Arrays	int	binarySearch0	[double[], int, int, double]
Arrays	int	binarySearch	[float[], float]
Arrays	int	binarySearch	[float[], int, int, float]
Arrays	int	binarySearch0	[float[], int, int, float]
Arrays	int	binarySearch	[java.lang.Object[], java.lang.Object]
Arrays	int	binarySearch	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch0	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch	[T[], T, java.util.Comparator]
Arrays	int	binarySearch	[T[], int, int, T, java.util.Comparator]
Arrays	int	binarySearch0	[T[], int, int, T, java.util.Comparator]
Arrays	boolean	equals	[long[], long[]]
Arrays	boolean	equals	[int[], int[]]
Arrays	boolean	equals	[short[], short[]]
Arrays	boolean	equals	[char[], char[]]
Arrays	boolean	equals	[byte[], byte[]]
Arrays	boolean	equals	[boolean[], boolean[]]
Arrays	boolean	equals	[double[], double[]]
Arrays	boolean	equals	[float[], float[]]
Arrays	boolean	equals	[java.lang.Object[], java.lang.Object[]]
Arrays	void	fill	[long[], long]
Arrays	void	fill	[long[], int, int, long]
Arrays	void	fill	[int[], int]
Arrays	void	fill	[int[], int, int, int]
Arrays	void	fill	[short[], short]
Arrays	void	fill	[short[], int, int, short]
Arrays	void	fill	[char[], char]
Arrays	void	fill	[char[], int, int, char]
Arrays	void	fill	[byte[], byte]
Arrays	void	fill	[byte[], int, int, byte]
Arrays	void	fill	[boolean[], boolean]
Arrays	void	fill	[boolean[], int, int, boolean]
Arrays	void	fill	[double[], double]
Arrays	void	fill	[double[], int, int, double]
Arrays	void	fill	[float[], float]
Arrays	void	fill	[float[], int, int, float]
Arrays	void	fill	[java.lang.Object[], java.lang.Object]
Arrays	void	fill	[java.lang.Object[], int, int, java.lang.Object]
Arrays	T[]	copyOf	[T[], int]
Arrays	T[]	copyOf	[U[], int, java.lang.Class]
Arrays	byte[]	copyOf	[byte[], int]
Arrays	short[]	copyOf	[short[], int]
Arrays	int[]	copyOf	[int[], int]
Arrays	long[]	copyOf	[long[], int]
Arrays	char[]	copyOf	[char[], int]
Arrays	float[]	copyOf	[float[], int]
Arrays	double[]	copyOf	[double[], int]
Arrays	boolean[]	copyOf	[boolean[], int]
Arrays	T[]	copyOfRange	[T[], int, int]
Arrays	T[]	copyOfRange	[U[], int, int, java.lang.Class]
Arrays	byte[]	copyOfRange	[byte[], int, int]
Arrays	short[]	copyOfRange	[short[], int, int]
Arrays	int[]	copyOfRange	[int[], int, int]
Arrays	long[]	copyOfRange	[long[], int, int]
Arrays	char[]	copyOfRange	[char[], int, int]
Arrays	float[]	copyOfRange	[float[], int, int]
Arrays	double[]	copyOfRange	[double[], int, int]
Arrays	boolean[]	copyOfRange	[boolean[], int, int]
Arrays	java.util.List<T>	asList	[T[]]
Arrays	int	hashCode	[long[]]
Arrays	int	hashCode	[int[]]
Arrays	int	hashCode	[short[]]
Arrays	int	hashCode	[char[]]
Arrays	int	hashCode	[byte[]]
Arrays	int	hashCode	[boolean[]]
Arrays	int	hashCode	[float[]]
Arrays	int	hashCode	[double[]]
Arrays	int	hashCode	[java.lang.Object[]]
Arrays	int	deepHashCode	[java.lang.Object[]]
Arrays	boolean	deepEquals	[java.lang.Object[], java.lang.Object[]]
Arrays	boolean	deepEquals0	[java.lang.Object, java.lang.Object]
Arrays	java.lang.String	toString	[long[]]
Arrays	java.lang.String	toString	[int[]]
Arrays	java.lang.String	toString	[short[]]
Arrays	java.lang.String	toString	[char[]]
Arrays	java.lang.String	toString	[byte[]]
Arrays	java.lang.String	toString	[boolean[]]
Arrays	java.lang.String	toString	[float[]]
Arrays	java.lang.String	toString	[double[]]
Arrays	java.lang.String	toString	[java.lang.Object[]]
Arrays	java.lang.String	deepToString	[java.lang.Object[]]
Arrays	void	deepToString	[java.lang.Object[], java.lang.StringBuilder, java.util.Set]
Arrays	void	setAll	[T[], java.util.function.IntFunction]
Arrays	void	parallelSetAll	[T[], java.util.function.IntFunction]
Arrays	void	setAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	parallelSetAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	setAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	parallelSetAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	setAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	void	parallelSetAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	java.util.Spliterator<T>	spliterator	[T[]]
Arrays	java.util.Spliterator<T>	spliterator	[T[], int, int]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[]]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[], int, int]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[]]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[], int, int]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[]]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[], int, int]
Arrays	java.util.stream.Stream<T>	stream	[T[]]
Arrays	java.util.stream.Stream<T>	stream	[T[], int, int]
Arrays	java.util.stream.IntStream	stream	[int[]]
Arrays	java.util.stream.IntStream	stream	[int[], int, int]
Arrays	java.util.stream.LongStream	stream	[long[]]
Arrays	java.util.stream.LongStream	stream	[long[], int, int]
Arrays	java.util.stream.DoubleStream	stream	[double[]]
Arrays	java.util.stream.DoubleStream	stream	[double[], int, int]
Node		java.util.HashMap$Node	[int, K, V, java.util.HashMap$Node]
Node	K	getKey	[]
Node	V	getValue	[]
Node	java.lang.String	toString	[]
Node	int	hashCode	[]
Node	V	setValue	[V]
Node	boolean	equals	[java.lang.Object]
KeySet		java.util.HashMap$KeySet	[]
KeySet	int	size	[]
KeySet	void	clear	[]
KeySet	java.util.Iterator<K>	iterator	[]
KeySet	boolean	contains	[java.lang.Object]
KeySet	boolean	remove	[java.lang.Object]
KeySet	java.util.Spliterator<K>	spliterator	[]
KeySet	void	forEach	[java.util.function.Consumer]
Values		java.util.HashMap$Values	[]
Values	int	size	[]
Values	void	clear	[]
Values	java.util.Iterator<V>	iterator	[]
Values	boolean	contains	[java.lang.Object]
Values	java.util.Spliterator<V>	spliterator	[]
Values	void	forEach	[java.util.function.Consumer]
EntrySet		java.util.HashMap$EntrySet	[]
EntrySet	int	size	[]
EntrySet	void	clear	[]
EntrySet	java.util.Iterator<java.util.Map.Entry<K, V>>	iterator	[]
EntrySet	boolean	contains	[java.lang.Object]
EntrySet	boolean	remove	[java.lang.Object]
EntrySet	java.util.Spliterator<java.util.Map.Entry<K, V>>	spliterator	[]
EntrySet	void	forEach	[java.util.function.Consumer]
HashIterator		java.util.HashMap$HashIterator	[]
HashIterator	boolean	hasNext	[]
HashIterator	java.util.HashMap.Node<K, V>	nextNode	[]
HashIterator	void	remove	[]
KeyIterator		java.util.HashMap$KeyIterator	[]
KeyIterator	K	next	[]
ValueIterator		java.util.HashMap$ValueIterator	[]
ValueIterator	V	next	[]
EntryIterator		java.util.HashMap$EntryIterator	[]
EntryIterator	java.util.Map.Entry<K, V>	next	[]
HashMapSpliterator		java.util.HashMap$HashMapSpliterator	[java.util.HashMap, int, int, int, int]
HashMapSpliterator	int	getFence	[]
HashMapSpliterator	long	estimateSize	[]
KeySpliterator		java.util.HashMap$KeySpliterator	[java.util.HashMap, int, int, int, int]
KeySpliterator	java.util.HashMap.KeySpliterator<K, V>	trySplit	[]
KeySpliterator	void	forEachRemaining	[java.util.function.Consumer]
KeySpliterator	boolean	tryAdvance	[java.util.function.Consumer]
KeySpliterator	int	characteristics	[]
ValueSpliterator		java.util.HashMap$ValueSpliterator	[java.util.HashMap, int, int, int, int]
ValueSpliterator	java.util.HashMap.ValueSpliterator<K, V>	trySplit	[]
ValueSpliterator	void	forEachRemaining	[java.util.function.Consumer]
ValueSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
ValueSpliterator	int	characteristics	[]
EntrySpliterator		java.util.HashMap$EntrySpliterator	[java.util.HashMap, int, int, int, int]
EntrySpliterator	java.util.HashMap.EntrySpliterator<K, V>	trySplit	[]
EntrySpliterator	void	forEachRemaining	[java.util.function.Consumer]
EntrySpliterator	boolean	tryAdvance	[java.util.function.Consumer]
EntrySpliterator	int	characteristics	[]
TreeNode		java.util.HashMap$TreeNode	[int, K, V, java.util.HashMap$Node]
TreeNode	java.util.HashMap.TreeNode<K, V>	root	[]
TreeNode	void	moveRootToFront	[java.util.HashMap$Node[], java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	find	[int, java.lang.Object, java.lang.Class]
TreeNode	java.util.HashMap.TreeNode<K, V>	getTreeNode	[int, java.lang.Object]
TreeNode	int	tieBreakOrder	[java.lang.Object, java.lang.Object]
TreeNode	void	treeify	[java.util.HashMap$Node[]]
TreeNode	java.util.HashMap.Node<K, V>	untreeify	[java.util.HashMap]
TreeNode	java.util.HashMap.TreeNode<K, V>	putTreeVal	[java.util.HashMap, java.util.HashMap$Node[], int, K, V]
TreeNode	void	removeTreeNode	[java.util.HashMap, java.util.HashMap$Node[], boolean]
TreeNode	void	split	[java.util.HashMap, java.util.HashMap$Node[], int, int]
TreeNode	java.util.HashMap.TreeNode<K, V>	rotateLeft	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	rotateRight	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	balanceInsertion	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	balanceDeletion	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	boolean	checkInvariants	[java.util.HashMap$TreeNode]
HashMap	int	hash	[java.lang.Object]
HashMap	java.lang.Class<?>	comparableClassFor	[java.lang.Object]
HashMap	int	compareComparables	[java.lang.Class, java.lang.Object, java.lang.Object]
HashMap	int	tableSizeFor	[int]
HashMap		java.util.HashMap	[int, float]
HashMap		java.util.HashMap	[int]
HashMap		java.util.HashMap	[]
HashMap		java.util.HashMap	[java.util.Map]
HashMap	void	putMapEntries	[java.util.Map, boolean]
HashMap	int	size	[]
HashMap	boolean	isEmpty	[]
HashMap	V	get	[java.lang.Object]
HashMap	java.util.HashMap.Node<K, V>	getNode	[int, java.lang.Object]
HashMap	boolean	containsKey	[java.lang.Object]
HashMap	V	put	[K, V]
HashMap	V	putVal	[int, K, V, boolean, boolean]
HashMap	java.util.HashMap.Node<K, V>[]	resize	[]
HashMap	void	treeifyBin	[java.util.HashMap$Node[], int]
HashMap	void	putAll	[java.util.Map]
HashMap	V	remove	[java.lang.Object]
HashMap	java.util.HashMap.Node<K, V>	removeNode	[int, java.lang.Object, java.lang.Object, boolean, boolean]
HashMap	void	clear	[]
HashMap	boolean	containsValue	[java.lang.Object]
HashMap	java.util.Set<K>	keySet	[]
HashMap	java.util.Collection<V>	values	[]
HashMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
HashMap	V	getOrDefault	[java.lang.Object, V]
HashMap	V	putIfAbsent	[K, V]
HashMap	boolean	remove	[java.lang.Object, java.lang.Object]
HashMap	boolean	replace	[K, V, V]
HashMap	V	replace	[K, V]
HashMap	V	computeIfAbsent	[K, java.util.function.Function]
HashMap	V	computeIfPresent	[K, java.util.function.BiFunction]
HashMap	V	compute	[K, java.util.function.BiFunction]
HashMap	V	merge	[K, V, java.util.function.BiFunction]
HashMap	void	forEach	[java.util.function.BiConsumer]
HashMap	void	replaceAll	[java.util.function.BiFunction]
HashMap	java.lang.Object	clone	[]
HashMap	float	loadFactor	[]
HashMap	int	capacity	[]
HashMap	void	writeObject	[java.io.ObjectOutputStream]
HashMap	void	readObject	[java.io.ObjectInputStream]
HashMap	java.util.HashMap.Node<K, V>	newNode	[int, K, V, java.util.HashMap$Node]
HashMap	java.util.HashMap.Node<K, V>	replacementNode	[java.util.HashMap$Node, java.util.HashMap$Node]
HashMap	java.util.HashMap.TreeNode<K, V>	newTreeNode	[int, K, V, java.util.HashMap$Node]
HashMap	java.util.HashMap.TreeNode<K, V>	replacementTreeNode	[java.util.HashMap$Node, java.util.HashMap$Node]
HashMap	void	reinitialize	[]
HashMap	void	afterNodeAccess	[java.util.HashMap$Node]
HashMap	void	afterNodeInsertion	[boolean]
HashMap	void	afterNodeRemoval	[java.util.HashMap$Node]
HashMap	void	internalWriteEntries	[java.io.ObjectOutputStream]
DataUtil		org.jsoup.helper.DataUtil	[]
DataUtil	org.jsoup.nodes.Document	load	[java.io.File, java.lang.String, java.lang.String]
DataUtil	org.jsoup.nodes.Document	load	[java.io.InputStream, java.lang.String, java.lang.String]
DataUtil	org.jsoup.nodes.Document	load	[java.io.InputStream, java.lang.String, java.lang.String, org.jsoup.parser.Parser]
DataUtil	void	crossStreams	[java.io.InputStream, java.io.OutputStream]
DataUtil	org.jsoup.nodes.Document	parseByteData	[java.nio.ByteBuffer, java.lang.String, java.lang.String, org.jsoup.parser.Parser]
DataUtil	java.nio.ByteBuffer	readToByteBuffer	[java.io.InputStream, int]
DataUtil	java.nio.ByteBuffer	readToByteBuffer	[java.io.InputStream]
DataUtil	java.nio.ByteBuffer	readFileToByteBuffer	[java.io.File]
DataUtil	java.nio.ByteBuffer	emptyByteBuffer	[]
DataUtil	java.lang.String	getCharsetFromContentType	[java.lang.String]
DataUtil	java.lang.String	validateCharset	[java.lang.String]
DataUtil	java.lang.String	mimeBoundary	[]
DataUtil	java.lang.String	detectCharsetFromBom	[java.nio.ByteBuffer, java.lang.String]
StringUtil		org.jsoup.helper.StringUtil	[]
StringUtil	java.lang.String	join	[java.util.Collection, java.lang.String]
StringUtil	java.lang.String	join	[java.util.Iterator, java.lang.String]
StringUtil	java.lang.String	padding	[int]
StringUtil	boolean	isBlank	[java.lang.String]
StringUtil	boolean	isNumeric	[java.lang.String]
StringUtil	boolean	isWhitespace	[int]
StringUtil	java.lang.String	normaliseWhitespace	[java.lang.String]
StringUtil	void	appendNormalisedWhitespace	[java.lang.StringBuilder, java.lang.String, boolean]
StringUtil	boolean	in	[java.lang.String, java.lang.String[]]
StringUtil	boolean	inSorted	[java.lang.String, java.lang.String[]]
StringUtil	java.net.URL	resolve	[java.net.URL, java.lang.String]
StringUtil	java.lang.String	resolve	[java.lang.String, java.lang.String]
EscapeMode		org.jsoup.nodes.Entities$EscapeMode	[java.lang.String, int]
EscapeMode	int	codepointForName	[java.lang.String]
EscapeMode	java.lang.String	nameForCodepoint	[int]
EscapeMode	int	size	[]
CoreCharset		org.jsoup.nodes.Entities$CoreCharset	[]
CoreCharset	org.jsoup.nodes.Entities.CoreCharset	byName	[java.lang.String]
Entities		org.jsoup.nodes.Entities	[]
Entities	boolean	isNamedEntity	[java.lang.String]
Entities	boolean	isBaseNamedEntity	[java.lang.String]
Entities	java.lang.Character	getCharacterByName	[java.lang.String]
Entities	java.lang.String	getByName	[java.lang.String]
Entities	int	codepointsForName	[java.lang.String, int[]]
Entities	java.lang.String	escape	[java.lang.String, org.jsoup.nodes.Document$OutputSettings]
Entities	void	escape	[java.lang.Appendable, java.lang.String, org.jsoup.nodes.Document$OutputSettings, boolean, boolean, boolean]
Entities	void	appendEncoded	[java.lang.Appendable, org.jsoup.nodes.Entities$EscapeMode, int]
Entities	java.lang.String	unescape	[java.lang.String]
Entities	java.lang.String	unescape	[java.lang.String, boolean]
Entities	boolean	canEncode	[org.jsoup.nodes.Entities$CoreCharset, char, java.nio.charset.CharsetEncoder]
Entities	void	load	[org.jsoup.nodes.Entities$EscapeMode, java.lang.String, int]
CharacterReader		org.jsoup.parser.CharacterReader	[java.lang.String]
CharacterReader	int	pos	[]
CharacterReader	boolean	isEmpty	[]
CharacterReader	char	current	[]
CharacterReader	char	consume	[]
CharacterReader	void	unconsume	[]
CharacterReader	void	advance	[]
CharacterReader	void	mark	[]
CharacterReader	void	rewindToMark	[]
CharacterReader	java.lang.String	consumeAsString	[]
CharacterReader	int	nextIndexOf	[char]
CharacterReader	int	nextIndexOf	[java.lang.CharSequence]
CharacterReader	java.lang.String	consumeTo	[char]
CharacterReader	java.lang.String	consumeTo	[java.lang.String]
CharacterReader	java.lang.String	consumeToAny	[char[]]
CharacterReader	java.lang.String	consumeToAnySorted	[char[]]
CharacterReader	java.lang.String	consumeData	[]
CharacterReader	java.lang.String	consumeTagName	[]
CharacterReader	java.lang.String	consumeToEnd	[]
CharacterReader	java.lang.String	consumeLetterSequence	[]
CharacterReader	java.lang.String	consumeLetterThenDigitSequence	[]
CharacterReader	java.lang.String	consumeHexSequence	[]
CharacterReader	java.lang.String	consumeDigitSequence	[]
CharacterReader	boolean	matches	[char]
CharacterReader	boolean	matches	[java.lang.String]
CharacterReader	boolean	matchesIgnoreCase	[java.lang.String]
CharacterReader	boolean	matchesAny	[char[]]
CharacterReader	boolean	matchesAnySorted	[char[]]
CharacterReader	boolean	matchesLetter	[]
CharacterReader	boolean	matchesDigit	[]
CharacterReader	boolean	matchConsume	[java.lang.String]
CharacterReader	boolean	matchConsumeIgnoreCase	[java.lang.String]
CharacterReader	boolean	containsIgnoreCase	[java.lang.String]
CharacterReader	java.lang.String	toString	[]
CharacterReader	java.lang.String	cacheString	[int, int]
CharacterReader	boolean	rangeEquals	[int, int, java.lang.String]
Parser		org.jsoup.parser.Parser	[org.jsoup.parser.TreeBuilder]
Parser	org.jsoup.nodes.Document	parseInput	[java.lang.String, java.lang.String]
Parser	org.jsoup.parser.TreeBuilder	getTreeBuilder	[]
Parser	org.jsoup.parser.Parser	setTreeBuilder	[org.jsoup.parser.TreeBuilder]
Parser	boolean	isTrackErrors	[]
Parser	org.jsoup.parser.Parser	setTrackErrors	[int]
Parser	java.util.List<org.jsoup.parser.ParseError>	getErrors	[]
Parser	org.jsoup.parser.Parser	settings	[org.jsoup.parser.ParseSettings]
Parser	org.jsoup.parser.ParseSettings	settings	[]
Parser	org.jsoup.nodes.Document	parse	[java.lang.String, java.lang.String]
Parser	java.util.List<org.jsoup.nodes.Node>	parseFragment	[java.lang.String, org.jsoup.nodes.Element, java.lang.String]
Parser	java.util.List<org.jsoup.nodes.Node>	parseFragment	[java.lang.String, org.jsoup.nodes.Element, java.lang.String, org.jsoup.parser.ParseErrorList]
Parser	java.util.List<org.jsoup.nodes.Node>	parseXmlFragment	[java.lang.String, java.lang.String]
Parser	org.jsoup.nodes.Document	parseBodyFragment	[java.lang.String, java.lang.String]
Parser	java.lang.String	unescapeEntities	[java.lang.String, boolean]
Parser	org.jsoup.nodes.Document	parseBodyFragmentRelaxed	[java.lang.String, java.lang.String]
Parser	org.jsoup.parser.Parser	htmlParser	[]
Parser	org.jsoup.parser.Parser	xmlParser	[]
SerializationException		org.jsoup.SerializationException	[]
SerializationException		org.jsoup.SerializationException	[java.lang.String]
SerializationException		org.jsoup.SerializationException	[java.lang.Throwable]
SerializationException		org.jsoup.SerializationException	[java.lang.String, java.lang.Throwable]
