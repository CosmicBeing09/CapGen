java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	309:311	15:15	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	316:319	15:15	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	309:319	15:15	obj == null	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	369:393	16:16	"Object must not be null"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	340:394	16:16	new java.lang.IllegalArgumentException("Object must not be null")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	334:395	16:16	throw new java.lang.IllegalArgumentException("Object must not be null")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	305:395	15:16	if (obj == null)    throw new java.lang.IllegalArgumentException("Object must not be null");	[]	[java.lang.Object:obj]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	623:625	25:25	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	630:633	25:25	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	623:633	25:25	obj == null	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	683:685	26:26	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	654:686	26:26	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	648:687	26:26	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	619:687	25:26	if (obj == null)    throw new java.lang.IllegalArgumentException(msg);	[]	[java.lang.Object:obj, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	843:845	34:34	val	[]	[boolean:val]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	842:845	34:34	!val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	895:908	35:35	"Must be true"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	866:909	35:35	new java.lang.IllegalArgumentException("Must be true")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	860:910	35:35	throw new java.lang.IllegalArgumentException("Must be true")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	838:910	34:35	if (!val)    throw new java.lang.IllegalArgumentException("Must be true");	[]	[boolean:val]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1134:1136	44:44	val	[]	[boolean:val]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	1133:1136	44:44	!val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1186:1188	45:45	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1157:1189	45:45	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1151:1190	45:45	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1129:1190	44:45	if (!val)    throw new java.lang.IllegalArgumentException(msg);	[]	[boolean:val, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1347:1349	53:53	val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1399:1413	54:54	"Must be false"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1370:1414	54:54	new java.lang.IllegalArgumentException("Must be false")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1364:1415	54:54	throw new java.lang.IllegalArgumentException("Must be false")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1343:1415	53:54	if (val)    throw new java.lang.IllegalArgumentException("Must be false");	[]	[boolean:val]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1640:1642	63:63	val	[]	[boolean:val]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1692:1694	64:64	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1663:1695	64:64	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1657:1696	64:64	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	1636:1696	63:64	if (val)    throw new java.lang.IllegalArgumentException(msg);	[]	[boolean:val, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1900:1906	72:72	objects	[]	[java.lang.Object[]:objects]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1909:1949	72:72	"Array must not contain any null objects"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	1885:1951	72:72	org.jsoup.helper.Validate.noNullElements(objects, "Array must not contain any null objects")	[void:noNullElements]	[java.lang.Object[]:objects]	[]	[spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2213:2232	81:81	java.lang.Object obj	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2226:2232	81:81	objects	[]	[java.lang.Object[]:objects]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2251:2253	82:82	obj	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2258:2261	82:82	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2251:2261	82:82	obj == null	[]	[java.lang.Object:obj]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2315:2317	83:83	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2286:2318	83:83	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2280:2319	83:83	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2247:2319	82:83	if (obj == null)    throw new java.lang.IllegalArgumentException(msg);	[]	[java.lang.Object:obj, java.lang.String:msg]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	2208:2319	81:83	for (java.lang.Object obj : objects)    if (obj == null)        throw new java.lang.IllegalArgumentException(msg);	[]	[java.lang.Object:obj, java.lang.String:msg, java.lang.Object[]:objects]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2491:2496	91:91	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2501:2504	91:91	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2491:2504	91:91	string == null	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2509:2514	91:91	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2509:2523	91:91	string.length()	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2528:2528	91:91	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2509:2528	91:91	(string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2491:2528	91:91	string == null) || ((string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	2578:2603	92:92	"String must not be empty"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2549:2604	92:92	new java.lang.IllegalArgumentException("String must not be empty")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2543:2605	92:92	throw new java.lang.IllegalArgumentException("String must not be empty")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2487:2605	91:92	if ((string == null) || ((string.length()) == 0))    throw new java.lang.IllegalArgumentException("String must not be empty");	[int:length]	[java.lang.String:string]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2845:2850	101:101	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	2855:2858	101:101	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2845:2858	101:101	string == null	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2863:2868	101:101	string	[]	[java.lang.String:string]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2863:2877	101:101	string.length()	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2882:2882	101:101	0	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2863:2882	101:101	(string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2845:2882	101:101	string == null) || ((string.length()) == 0	[int:length]	[java.lang.String:string]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2932:2934	102:102	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2903:2935	102:102	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2897:2936	102:102	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2841:2936	101:102	if ((string == null) || ((string.length()) == 0))    throw new java.lang.IllegalArgumentException(msg);	[int:length]	[java.lang.String:string, java.lang.String:msg]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3103:3105	110:110	msg	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	3074:3106	110:110	new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[spoon.support.reflect.code.CtThrowImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	3068:3107	110:110	throw new java.lang.IllegalArgumentException(msg)	[]	[java.lang.String:msg]	[]	[spoon.support.reflect.code.CtThrowImpl]
