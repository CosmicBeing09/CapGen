java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	426:436	15:15	"unchecked"	[]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.declaration.CtAnnotationImpl]	[]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	425:437	15:15	{ "unchecked" }	[]	[]	[spoon.support.reflect.declaration.CtAnnotationImpl]	[]
java.lang.SuppressWarnings	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	407:438	15:15	@java.lang.SuppressWarnings({ "unchecked" })	[]	[]	[]	[]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	569:572	18:18	null	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	549:573	18:18	java.lang.Class configClass = null	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	601:611	20:20	configClass	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	623:627	20:20	java.lang.Class	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	637:684	20:20	"org.mockito.configuration.MockitoConfiguration"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<?>	Expression	class spoon.support.reflect.code.CtInvocationImpl	623:685	20:20	(java.lang.Class) (java.lang.Class.forName("org.mockito.configuration.MockitoConfiguration"))	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	601:686	20:20	configClass = ((java.lang.Class) (java.lang.Class.forName("org.mockito.configuration.MockitoConfiguration")))	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	833:836	23:23	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	826:837	23:23	return null	[]	[]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	583:847	19:24	try {    configClass = ((java.lang.Class) (java.lang.Class.forName("org.mockito.configuration.MockitoConfiguration")));} catch (java.lang.ClassNotFoundException e) {    return null;}	[]	[java.lang.Class:configClass]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class	Expression	class spoon.support.reflect.code.CtVariableReadImpl	915:925	27:27	configClass	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	915:939	27:27	(org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance())	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	884:940	27:27	return ((org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance()))	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1035:1038	29:29	"\n"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1062:1163	30:30	"MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1035:1163	29:30	"\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.ClassCastException	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1166:1166	30:30	e	[]	[java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
org.mockito.exceptions.misusing.MockitoConfigurationException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1001:1167	29:30	new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."), e)	[]	[java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	995:1168	29:30	throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."), e)	[]	[java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1254:1257	32:32	"\n"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1281:1400	33:33	"Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1254:1400	32:33	"\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.Exception	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1403:1403	33:33	e	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
org.mockito.exceptions.misusing.MockitoConfigurationException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1220:1404	32:33	new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"), e)	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1214:1405	32:33	throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"), e)	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	866:1415	26:34	try {    return ((org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance()));} catch (java.lang.ClassCastException e) {    throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."), e);} catch (java.lang.Exception e) {    throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"), e);}	[]	[java.lang.Class:configClass, java.lang.Exception:e, java.lang.ClassCastException:e]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
