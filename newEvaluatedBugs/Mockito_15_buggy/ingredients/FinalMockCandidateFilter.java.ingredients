java.util.Collection<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	765:769	19:19	mocks	[]	[java.util.Collection<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	765:776	19:19	mocks.size()	[int:size]	[java.util.Collection<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	781:781	19:19	1	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	765:781	19:19	(mocks.size()) == 1	[int:size]	[java.util.Collection<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	826:830	20:20	mocks	[]	[java.util.Collection<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	826:841	20:20	mocks.iterator()	[java.util.Iterator<java.lang.Object>:iterator]	[java.util.Collection<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	826:848	20:20	mocks.iterator().next()	[java.lang.Object:iterator, java.util.Iterator<java.lang.Object>:iterator]	[java.util.Collection<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	798:849	20:20	final java.lang.Object matchingMock = mocks.iterator().next()	[java.lang.Object:iterator, java.util.Iterator<java.lang.Object>:iterator]	[java.util.Collection<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1011:1023	25:25	fieldInstance	[]	[java.lang.Object:fieldInstance]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1026:1030	25:25	field	[]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.reflection.FieldSetter	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	995:1031	25:25	new org.mockito.internal.util.reflection.FieldSetter(fieldInstance, field)	[]	[java.lang.Object:fieldInstance, java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1037:1048	25:25	matchingMock	[]	[java.lang.Object:matchingMock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	995:1050	25:25	new org.mockito.internal.util.reflection.FieldSetter(fieldInstance, field).set(matchingMock)	[:FieldSetter]	[java.lang.Object:fieldInstance, java.lang.reflect.Field:field, java.lang.Object:matchingMock]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1147:1181	27:27	"Problems injecting dependency in "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1185:1189	27:27	field	[]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	1185:1199	27:27	field.getName()	[java.lang.String:getName]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1147:1199	27:27	"Problems injecting dependency in " + (field.getName())	[java.lang.String:getName]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Exception	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1202:1202	27:27	e	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.exceptions.base.MockitoException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1126:1203	27:27	new org.mockito.exceptions.base.MockitoException(("Problems injecting dependency in " + (field.getName())), e)	[java.lang.String:getName]	[java.lang.Exception:e, java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1120:1204	27:27	throw new org.mockito.exceptions.base.MockitoException(("Problems injecting dependency in " + (field.getName())), e)	[java.lang.String:getName]	[java.lang.Exception:e, java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	961:1226	24:28	try {    new org.mockito.internal.util.reflection.FieldSetter(fieldInstance, field).set(matchingMock);} catch (java.lang.Exception e) {    throw new org.mockito.exceptions.base.MockitoException(("Problems injecting dependency in " + (field.getName())), e);}	[:FieldSetter, java.lang.String:getName]	[java.lang.Object:fieldInstance, java.lang.Exception:e, java.lang.reflect.Field:field, java.lang.Object:matchingMock]	[]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1255:1258	29:29	true	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1248:1259	29:29	return true	[]	[]	[]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.injection.OngoingInjecter	Expression	class spoon.support.reflect.code.CtNewClassImpl	871:1291	22:31	new org.mockito.internal.configuration.injection.OngoingInjecter() {    public boolean thenInject() {        try {            new org.mockito.internal.util.reflection.FieldSetter(fieldInstance, field).set(matchingMock);        } catch (java.lang.Exception e) {            throw new org.mockito.exceptions.base.MockitoException(("Problems injecting dependency in " + (field.getName())), e);        }        return true;    }}	[:FieldSetter, java.lang.String:getName]	[java.lang.Object:fieldInstance, java.lang.Exception:e, java.lang.reflect.Field:field, java.lang.Object:matchingMock]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	864:1292	22:31	return new org.mockito.internal.configuration.injection.OngoingInjecter() {    public boolean thenInject() {        try {            new org.mockito.internal.util.reflection.FieldSetter(fieldInstance, field).set(matchingMock);        } catch (java.lang.Exception e) {            throw new org.mockito.exceptions.base.MockitoException(("Problems injecting dependency in " + (field.getName())), e);        }        return true;    }}	[:FieldSetter, java.lang.String:getName]	[java.lang.Object:fieldInstance, java.lang.Exception:e, java.lang.reflect.Field:field, java.lang.Object:matchingMock]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	762:1302	19:32	if ((mocks.size()) == 1) {    final java.lang.Object matchingMock = mocks.iterator().next();    return new org.mockito.internal.configuration.injection.OngoingInjecter() {        public boolean thenInject() {            try {                new org.mockito.internal.util.reflection.FieldSetter(fieldInstance, field).set(matchingMock);            } catch (java.lang.Exception e) {                throw new org.mockito.exceptions.base.MockitoException(("Problems injecting dependency in " + (field.getName())), e);            }            return true;        }    };}	[:FieldSetter, java.lang.String:getName, int:size, java.lang.Object:iterator, java.util.Iterator<java.lang.Object>:iterator]	[java.lang.Object:fieldInstance, java.lang.Exception:e, java.lang.reflect.Field:field, java.lang.Object:matchingMock, java.util.Collection<java.lang.Object>:mocks]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	1409:1413	36:36	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1402:1414	36:36	return false	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
org.mockito.internal.configuration.injection.OngoingInjecter	Expression	class spoon.support.reflect.code.CtNewClassImpl	1320:1438	34:38	new org.mockito.internal.configuration.injection.OngoingInjecter() {    public boolean thenInject() {        return false;    }}	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1313:1439	34:38	return new org.mockito.internal.configuration.injection.OngoingInjecter() {    public boolean thenInject() {        return false;    }}	[]	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
