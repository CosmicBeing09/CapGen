void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	409:432	16:16	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Iterable<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	437:441	16:16	mocks	[]	[java.lang.Iterable<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Set<java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	409:442	16:16	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(mocks)	[java.util.Set<java.lang.Object>:of]	[java.lang.Iterable<java.lang.Object>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	402:443	16:16	return org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(mocks)	[java.util.Set<java.lang.Object>:of]	[java.lang.Iterable<java.lang.Object>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	535:558	20:20	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	563:567	20:20	mocks	[]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Set<java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	535:568	20:20	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(mocks)	[java.util.Set<java.lang.Object>:of]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	528:569	20:20	return org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(mocks)	[java.util.Set<java.lang.Object>:of]	[java.lang.Object[]:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.IdentitySet	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	642:658	24:24	new org.mockito.internal.util.collections.IdentitySet()	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	635:659	24:24	return new org.mockito.internal.util.collections.IdentitySet()	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	734:741	28:28	elements	[]	[T[]:elements]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	746:749	28:28	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	734:749	28:28	elements == null	[]	[T[]:elements]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	801:869	29:29	"Expected an array of elements (or empty array) but received a null."	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.IllegalArgumentException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	772:870	29:29	new java.lang.IllegalArgumentException("Expected an array of elements (or empty array) but received a null.")	[]	[]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	766:871	29:29	throw new java.lang.IllegalArgumentException("Expected an array of elements (or empty array) but received a null.")	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	730:881	28:30	if (elements == null) {    throw new java.lang.IllegalArgumentException("Expected an array of elements (or empty array) but received a null.");}	[]	[T[]:elements]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	926:933	31:31	elements	[]	[T[]:elements]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<T>	Expression	class spoon.support.reflect.code.CtInvocationImpl	919:934	31:31	java.util.Arrays.asList(elements)	[java.util.List<T>:asList]	[T[]:elements]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.LinkedHashSet<T>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	898:935	31:31	new java.util.LinkedHashSet<T>(java.util.Arrays.asList(elements))	[java.util.List<T>:asList]	[T[]:elements]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	891:936	31:31	return new java.util.LinkedHashSet<T>(java.util.Arrays.asList(elements))	[java.util.List<T>:asList]	[T[]:elements]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
