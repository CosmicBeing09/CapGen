Constructor	sun.reflect.generics.factory.GenericsFactory	getFactory	[]
Constructor	sun.reflect.generics.repository.ConstructorRepository	getGenericInfo	[]
Constructor	java.lang.reflect.Executable	getRoot	[]
Constructor		java.lang.reflect.Constructor	[java.lang.Class, java.lang.Class[], java.lang.Class[], int, int, java.lang.String, byte[], byte[]]
Constructor	java.lang.reflect.Constructor<T>	copy	[]
Constructor	boolean	hasGenericInformation	[]
Constructor	byte[]	getAnnotationBytes	[]
Constructor	java.lang.Class<T>	getDeclaringClass	[]
Constructor	java.lang.String	getName	[]
Constructor	int	getModifiers	[]
Constructor	java.lang.reflect.TypeVariable<java.lang.reflect.Constructor<T>>[]	getTypeParameters	[]
Constructor	java.lang.Class<?>[]	getParameterTypes	[]
Constructor	int	getParameterCount	[]
Constructor	java.lang.reflect.Type[]	getGenericParameterTypes	[]
Constructor	java.lang.Class<?>[]	getExceptionTypes	[]
Constructor	java.lang.reflect.Type[]	getGenericExceptionTypes	[]
Constructor	boolean	equals	[java.lang.Object]
Constructor	int	hashCode	[]
Constructor	java.lang.String	toString	[]
Constructor	void	specificToStringHeader	[java.lang.StringBuilder]
Constructor	java.lang.String	toGenericString	[]
Constructor	void	specificToGenericStringHeader	[java.lang.StringBuilder]
Constructor	T	newInstance	[java.lang.Object[]]
Constructor	boolean	isVarArgs	[]
Constructor	boolean	isSynthetic	[]
Constructor	sun.reflect.ConstructorAccessor	acquireConstructorAccessor	[]
Constructor	sun.reflect.ConstructorAccessor	getConstructorAccessor	[]
Constructor	void	setConstructorAccessor	[sun.reflect.ConstructorAccessor]
Constructor	int	getSlot	[]
Constructor	java.lang.String	getSignature	[]
Constructor	byte[]	getRawAnnotations	[]
Constructor	byte[]	getRawParameterAnnotations	[]
Constructor	T	getAnnotation	[java.lang.Class]
Constructor	java.lang.annotation.Annotation[]	getDeclaredAnnotations	[]
Constructor	java.lang.annotation.Annotation[][]	getParameterAnnotations	[]
Constructor	void	handleParameterNumberMismatch	[int, int]
Constructor	java.lang.reflect.AnnotatedType	getAnnotatedReturnType	[]
Constructor	java.lang.reflect.AnnotatedType	getAnnotatedReceiverType	[]
Field	java.lang.String	getGenericSignature	[]
Field	sun.reflect.generics.factory.GenericsFactory	getFactory	[]
Field	sun.reflect.generics.repository.FieldRepository	getGenericInfo	[]
Field		java.lang.reflect.Field	[java.lang.Class, java.lang.String, java.lang.Class, int, int, java.lang.String, byte[]]
Field	java.lang.reflect.Field	copy	[]
Field	java.lang.Class<?>	getDeclaringClass	[]
Field	java.lang.String	getName	[]
Field	int	getModifiers	[]
Field	boolean	isEnumConstant	[]
Field	boolean	isSynthetic	[]
Field	java.lang.Class<?>	getType	[]
Field	java.lang.reflect.Type	getGenericType	[]
Field	boolean	equals	[java.lang.Object]
Field	int	hashCode	[]
Field	java.lang.String	toString	[]
Field	java.lang.String	toGenericString	[]
Field	java.lang.Object	get	[java.lang.Object]
Field	boolean	getBoolean	[java.lang.Object]
Field	byte	getByte	[java.lang.Object]
Field	char	getChar	[java.lang.Object]
Field	short	getShort	[java.lang.Object]
Field	int	getInt	[java.lang.Object]
Field	long	getLong	[java.lang.Object]
Field	float	getFloat	[java.lang.Object]
Field	double	getDouble	[java.lang.Object]
Field	void	set	[java.lang.Object, java.lang.Object]
Field	void	setBoolean	[java.lang.Object, boolean]
Field	void	setByte	[java.lang.Object, byte]
Field	void	setChar	[java.lang.Object, char]
Field	void	setShort	[java.lang.Object, short]
Field	void	setInt	[java.lang.Object, int]
Field	void	setLong	[java.lang.Object, long]
Field	void	setFloat	[java.lang.Object, float]
Field	void	setDouble	[java.lang.Object, double]
Field	sun.reflect.FieldAccessor	getFieldAccessor	[java.lang.Object]
Field	sun.reflect.FieldAccessor	acquireFieldAccessor	[boolean]
Field	sun.reflect.FieldAccessor	getFieldAccessor	[boolean]
Field	void	setFieldAccessor	[sun.reflect.FieldAccessor, boolean]
Field	T	getAnnotation	[java.lang.Class]
Field	T[]	getAnnotationsByType	[java.lang.Class]
Field	java.lang.annotation.Annotation[]	getDeclaredAnnotations	[]
Field	java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.annotation.Annotation>	declaredAnnotations	[]
Field	byte[]	getTypeAnnotationBytes0	[]
Field	java.lang.reflect.AnnotatedType	getAnnotatedType	[]
InvocationTargetException		java.lang.reflect.InvocationTargetException	[]
InvocationTargetException		java.lang.reflect.InvocationTargetException	[java.lang.Throwable]
InvocationTargetException		java.lang.reflect.InvocationTargetException	[java.lang.Throwable, java.lang.String]
InvocationTargetException	java.lang.Throwable	getTargetException	[]
InvocationTargetException	java.lang.Throwable	getCause	[]
Modifier		java.lang.reflect.Modifier	[]
Modifier	boolean	isPublic	[int]
Modifier	boolean	isPrivate	[int]
Modifier	boolean	isProtected	[int]
Modifier	boolean	isStatic	[int]
Modifier	boolean	isFinal	[int]
Modifier	boolean	isSynchronized	[int]
Modifier	boolean	isVolatile	[int]
Modifier	boolean	isTransient	[int]
Modifier	boolean	isNative	[int]
Modifier	boolean	isInterface	[int]
Modifier	boolean	isAbstract	[int]
Modifier	boolean	isStrict	[int]
Modifier	java.lang.String	toString	[int]
Modifier	boolean	isSynthetic	[int]
Modifier	boolean	isMandated	[int]
Modifier	int	classModifiers	[]
Modifier	int	interfaceModifiers	[]
Modifier	int	constructorModifiers	[]
Modifier	int	methodModifiers	[]
Modifier	int	fieldModifiers	[]
Modifier	int	parameterModifiers	[]
NaturalOrder		java.util.Arrays$NaturalOrder	[]
NaturalOrder	int	compare	[java.lang.Object, java.lang.Object]
LegacyMergeSort		java.util.Arrays$LegacyMergeSort	[]
ArrayList		java.util.Arrays$ArrayList	[E[]]
ArrayList	int	size	[]
ArrayList	java.lang.Object[]	toArray	[]
ArrayList	T[]	toArray	[T[]]
ArrayList	E	get	[int]
ArrayList	E	set	[int, E]
ArrayList	int	indexOf	[java.lang.Object]
ArrayList	boolean	contains	[java.lang.Object]
ArrayList	java.util.Spliterator<E>	spliterator	[]
ArrayList	void	forEach	[java.util.function.Consumer]
ArrayList	void	replaceAll	[java.util.function.UnaryOperator]
ArrayList	void	sort	[java.util.Comparator]
Arrays		java.util.Arrays	[]
Arrays	void	rangeCheck	[int, int, int]
Arrays	void	sort	[int[]]
Arrays	void	sort	[int[], int, int]
Arrays	void	sort	[long[]]
Arrays	void	sort	[long[], int, int]
Arrays	void	sort	[short[]]
Arrays	void	sort	[short[], int, int]
Arrays	void	sort	[char[]]
Arrays	void	sort	[char[], int, int]
Arrays	void	sort	[byte[]]
Arrays	void	sort	[byte[], int, int]
Arrays	void	sort	[float[]]
Arrays	void	sort	[float[], int, int]
Arrays	void	sort	[double[]]
Arrays	void	sort	[double[], int, int]
Arrays	void	parallelSort	[byte[]]
Arrays	void	parallelSort	[byte[], int, int]
Arrays	void	parallelSort	[char[]]
Arrays	void	parallelSort	[char[], int, int]
Arrays	void	parallelSort	[short[]]
Arrays	void	parallelSort	[short[], int, int]
Arrays	void	parallelSort	[int[]]
Arrays	void	parallelSort	[int[], int, int]
Arrays	void	parallelSort	[long[]]
Arrays	void	parallelSort	[long[], int, int]
Arrays	void	parallelSort	[float[]]
Arrays	void	parallelSort	[float[], int, int]
Arrays	void	parallelSort	[double[]]
Arrays	void	parallelSort	[double[], int, int]
Arrays	void	parallelSort	[T extends java.lang.Comparable[]]
Arrays	void	parallelSort	[T extends java.lang.Comparable[], int, int]
Arrays	void	parallelSort	[T[], java.util.Comparator]
Arrays	void	parallelSort	[T[], int, int, java.util.Comparator]
Arrays	void	sort	[java.lang.Object[]]
Arrays	void	legacyMergeSort	[java.lang.Object[]]
Arrays	void	sort	[java.lang.Object[], int, int]
Arrays	void	legacyMergeSort	[java.lang.Object[], int, int]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int]
Arrays	void	swap	[java.lang.Object[], int, int]
Arrays	void	sort	[T[], java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], java.util.Comparator]
Arrays	void	sort	[T[], int, int, java.util.Comparator]
Arrays	void	legacyMergeSort	[T[], int, int, java.util.Comparator]
Arrays	void	mergeSort	[java.lang.Object[], java.lang.Object[], int, int, int, java.util.Comparator]
Arrays	void	parallelPrefix	[T[], java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[T[], int, int, java.util.function.BinaryOperator]
Arrays	void	parallelPrefix	[long[], java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[long[], int, int, java.util.function.LongBinaryOperator]
Arrays	void	parallelPrefix	[double[], java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[double[], int, int, java.util.function.DoubleBinaryOperator]
Arrays	void	parallelPrefix	[int[], java.util.function.IntBinaryOperator]
Arrays	void	parallelPrefix	[int[], int, int, java.util.function.IntBinaryOperator]
Arrays	int	binarySearch	[long[], long]
Arrays	int	binarySearch	[long[], int, int, long]
Arrays	int	binarySearch0	[long[], int, int, long]
Arrays	int	binarySearch	[int[], int]
Arrays	int	binarySearch	[int[], int, int, int]
Arrays	int	binarySearch0	[int[], int, int, int]
Arrays	int	binarySearch	[short[], short]
Arrays	int	binarySearch	[short[], int, int, short]
Arrays	int	binarySearch0	[short[], int, int, short]
Arrays	int	binarySearch	[char[], char]
Arrays	int	binarySearch	[char[], int, int, char]
Arrays	int	binarySearch0	[char[], int, int, char]
Arrays	int	binarySearch	[byte[], byte]
Arrays	int	binarySearch	[byte[], int, int, byte]
Arrays	int	binarySearch0	[byte[], int, int, byte]
Arrays	int	binarySearch	[double[], double]
Arrays	int	binarySearch	[double[], int, int, double]
Arrays	int	binarySearch0	[double[], int, int, double]
Arrays	int	binarySearch	[float[], float]
Arrays	int	binarySearch	[float[], int, int, float]
Arrays	int	binarySearch0	[float[], int, int, float]
Arrays	int	binarySearch	[java.lang.Object[], java.lang.Object]
Arrays	int	binarySearch	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch0	[java.lang.Object[], int, int, java.lang.Object]
Arrays	int	binarySearch	[T[], T, java.util.Comparator]
Arrays	int	binarySearch	[T[], int, int, T, java.util.Comparator]
Arrays	int	binarySearch0	[T[], int, int, T, java.util.Comparator]
Arrays	boolean	equals	[long[], long[]]
Arrays	boolean	equals	[int[], int[]]
Arrays	boolean	equals	[short[], short[]]
Arrays	boolean	equals	[char[], char[]]
Arrays	boolean	equals	[byte[], byte[]]
Arrays	boolean	equals	[boolean[], boolean[]]
Arrays	boolean	equals	[double[], double[]]
Arrays	boolean	equals	[float[], float[]]
Arrays	boolean	equals	[java.lang.Object[], java.lang.Object[]]
Arrays	void	fill	[long[], long]
Arrays	void	fill	[long[], int, int, long]
Arrays	void	fill	[int[], int]
Arrays	void	fill	[int[], int, int, int]
Arrays	void	fill	[short[], short]
Arrays	void	fill	[short[], int, int, short]
Arrays	void	fill	[char[], char]
Arrays	void	fill	[char[], int, int, char]
Arrays	void	fill	[byte[], byte]
Arrays	void	fill	[byte[], int, int, byte]
Arrays	void	fill	[boolean[], boolean]
Arrays	void	fill	[boolean[], int, int, boolean]
Arrays	void	fill	[double[], double]
Arrays	void	fill	[double[], int, int, double]
Arrays	void	fill	[float[], float]
Arrays	void	fill	[float[], int, int, float]
Arrays	void	fill	[java.lang.Object[], java.lang.Object]
Arrays	void	fill	[java.lang.Object[], int, int, java.lang.Object]
Arrays	T[]	copyOf	[T[], int]
Arrays	T[]	copyOf	[U[], int, java.lang.Class]
Arrays	byte[]	copyOf	[byte[], int]
Arrays	short[]	copyOf	[short[], int]
Arrays	int[]	copyOf	[int[], int]
Arrays	long[]	copyOf	[long[], int]
Arrays	char[]	copyOf	[char[], int]
Arrays	float[]	copyOf	[float[], int]
Arrays	double[]	copyOf	[double[], int]
Arrays	boolean[]	copyOf	[boolean[], int]
Arrays	T[]	copyOfRange	[T[], int, int]
Arrays	T[]	copyOfRange	[U[], int, int, java.lang.Class]
Arrays	byte[]	copyOfRange	[byte[], int, int]
Arrays	short[]	copyOfRange	[short[], int, int]
Arrays	int[]	copyOfRange	[int[], int, int]
Arrays	long[]	copyOfRange	[long[], int, int]
Arrays	char[]	copyOfRange	[char[], int, int]
Arrays	float[]	copyOfRange	[float[], int, int]
Arrays	double[]	copyOfRange	[double[], int, int]
Arrays	boolean[]	copyOfRange	[boolean[], int, int]
Arrays	java.util.List<T>	asList	[T[]]
Arrays	int	hashCode	[long[]]
Arrays	int	hashCode	[int[]]
Arrays	int	hashCode	[short[]]
Arrays	int	hashCode	[char[]]
Arrays	int	hashCode	[byte[]]
Arrays	int	hashCode	[boolean[]]
Arrays	int	hashCode	[float[]]
Arrays	int	hashCode	[double[]]
Arrays	int	hashCode	[java.lang.Object[]]
Arrays	int	deepHashCode	[java.lang.Object[]]
Arrays	boolean	deepEquals	[java.lang.Object[], java.lang.Object[]]
Arrays	boolean	deepEquals0	[java.lang.Object, java.lang.Object]
Arrays	java.lang.String	toString	[long[]]
Arrays	java.lang.String	toString	[int[]]
Arrays	java.lang.String	toString	[short[]]
Arrays	java.lang.String	toString	[char[]]
Arrays	java.lang.String	toString	[byte[]]
Arrays	java.lang.String	toString	[boolean[]]
Arrays	java.lang.String	toString	[float[]]
Arrays	java.lang.String	toString	[double[]]
Arrays	java.lang.String	toString	[java.lang.Object[]]
Arrays	java.lang.String	deepToString	[java.lang.Object[]]
Arrays	void	deepToString	[java.lang.Object[], java.lang.StringBuilder, java.util.Set]
Arrays	void	setAll	[T[], java.util.function.IntFunction]
Arrays	void	parallelSetAll	[T[], java.util.function.IntFunction]
Arrays	void	setAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	parallelSetAll	[int[], java.util.function.IntUnaryOperator]
Arrays	void	setAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	parallelSetAll	[long[], java.util.function.IntToLongFunction]
Arrays	void	setAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	void	parallelSetAll	[double[], java.util.function.IntToDoubleFunction]
Arrays	java.util.Spliterator<T>	spliterator	[T[]]
Arrays	java.util.Spliterator<T>	spliterator	[T[], int, int]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[]]
Arrays	java.util.Spliterator.OfInt	spliterator	[int[], int, int]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[]]
Arrays	java.util.Spliterator.OfLong	spliterator	[long[], int, int]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[]]
Arrays	java.util.Spliterator.OfDouble	spliterator	[double[], int, int]
Arrays	java.util.stream.Stream<T>	stream	[T[]]
Arrays	java.util.stream.Stream<T>	stream	[T[], int, int]
Arrays	java.util.stream.IntStream	stream	[int[]]
Arrays	java.util.stream.IntStream	stream	[int[], int, int]
Arrays	java.util.stream.LongStream	stream	[long[]]
Arrays	java.util.stream.LongStream	stream	[long[], int, int]
Arrays	java.util.stream.DoubleStream	stream	[double[]]
Arrays	java.util.stream.DoubleStream	stream	[double[], int, int]
UnmodifiableCollection		java.util.Collections$UnmodifiableCollection	[java.util.Collection]
UnmodifiableCollection	int	size	[]
UnmodifiableCollection	boolean	isEmpty	[]
UnmodifiableCollection	boolean	contains	[java.lang.Object]
UnmodifiableCollection	java.lang.Object[]	toArray	[]
UnmodifiableCollection	T[]	toArray	[T[]]
UnmodifiableCollection	java.lang.String	toString	[]
1		java.util.Collections$UnmodifiableCollection$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	void	remove	[]
1	void	forEachRemaining	[java.util.function.Consumer]
UnmodifiableCollection	java.util.Iterator<E>	iterator	[]
UnmodifiableCollection	boolean	add	[E]
UnmodifiableCollection	boolean	remove	[java.lang.Object]
UnmodifiableCollection	boolean	containsAll	[java.util.Collection]
UnmodifiableCollection	boolean	addAll	[java.util.Collection]
UnmodifiableCollection	boolean	removeAll	[java.util.Collection]
UnmodifiableCollection	boolean	retainAll	[java.util.Collection]
UnmodifiableCollection	void	clear	[]
UnmodifiableCollection	void	forEach	[java.util.function.Consumer]
UnmodifiableCollection	boolean	removeIf	[java.util.function.Predicate]
UnmodifiableCollection	java.util.Spliterator<E>	spliterator	[]
UnmodifiableCollection	java.util.stream.Stream<E>	stream	[]
UnmodifiableCollection	java.util.stream.Stream<E>	parallelStream	[]
UnmodifiableSet		java.util.Collections$UnmodifiableSet	[java.util.Set]
UnmodifiableSet	boolean	equals	[java.lang.Object]
UnmodifiableSet	int	hashCode	[]
UnmodifiableSortedSet		java.util.Collections$UnmodifiableSortedSet	[java.util.SortedSet]
UnmodifiableSortedSet	java.util.Comparator<? super E>	comparator	[]
UnmodifiableSortedSet	java.util.SortedSet<E>	subSet	[E, E]
UnmodifiableSortedSet	java.util.SortedSet<E>	headSet	[E]
UnmodifiableSortedSet	java.util.SortedSet<E>	tailSet	[E]
UnmodifiableSortedSet	E	first	[]
UnmodifiableSortedSet	E	last	[]
EmptyNavigableSet		java.util.Collections$UnmodifiableNavigableSet$EmptyNavigableSet	[]
EmptyNavigableSet	java.lang.Object	readResolve	[]
UnmodifiableNavigableSet		java.util.Collections$UnmodifiableNavigableSet	[java.util.NavigableSet]
UnmodifiableNavigableSet	E	lower	[E]
UnmodifiableNavigableSet	E	floor	[E]
UnmodifiableNavigableSet	E	ceiling	[E]
UnmodifiableNavigableSet	E	higher	[E]
UnmodifiableNavigableSet	E	pollFirst	[]
UnmodifiableNavigableSet	E	pollLast	[]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	descendingSet	[]
UnmodifiableNavigableSet	java.util.Iterator<E>	descendingIterator	[]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	subSet	[E, boolean, E, boolean]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	headSet	[E, boolean]
UnmodifiableNavigableSet	java.util.NavigableSet<E>	tailSet	[E, boolean]
UnmodifiableList		java.util.Collections$UnmodifiableList	[java.util.List]
UnmodifiableList	boolean	equals	[java.lang.Object]
UnmodifiableList	int	hashCode	[]
UnmodifiableList	E	get	[int]
UnmodifiableList	E	set	[int, E]
UnmodifiableList	void	add	[int, E]
UnmodifiableList	E	remove	[int]
UnmodifiableList	int	indexOf	[java.lang.Object]
UnmodifiableList	int	lastIndexOf	[java.lang.Object]
UnmodifiableList	boolean	addAll	[int, java.util.Collection]
UnmodifiableList	void	replaceAll	[java.util.function.UnaryOperator]
UnmodifiableList	void	sort	[java.util.Comparator]
UnmodifiableList	java.util.ListIterator<E>	listIterator	[]
1		java.util.Collections$UnmodifiableList$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	boolean	hasPrevious	[]
1	E	previous	[]
1	int	nextIndex	[]
1	int	previousIndex	[]
1	void	remove	[]
1	void	set	[E]
1	void	add	[E]
1	void	forEachRemaining	[java.util.function.Consumer]
UnmodifiableList	java.util.ListIterator<E>	listIterator	[int]
UnmodifiableList	java.util.List<E>	subList	[int, int]
UnmodifiableList	java.lang.Object	readResolve	[]
UnmodifiableRandomAccessList		java.util.Collections$UnmodifiableRandomAccessList	[java.util.List]
UnmodifiableRandomAccessList	java.util.List<E>	subList	[int, int]
UnmodifiableRandomAccessList	java.lang.Object	writeReplace	[]
UnmodifiableEntrySetSpliterator		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator	[java.util.Spliterator]
UnmodifiableEntrySetSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
UnmodifiableEntrySetSpliterator	void	forEachRemaining	[java.util.function.Consumer]
UnmodifiableEntrySetSpliterator	java.util.Spliterator<java.util.Map.Entry<K, V>>	trySplit	[]
UnmodifiableEntrySetSpliterator	long	estimateSize	[]
UnmodifiableEntrySetSpliterator	long	getExactSizeIfKnown	[]
UnmodifiableEntrySetSpliterator	int	characteristics	[]
UnmodifiableEntrySetSpliterator	boolean	hasCharacteristics	[int]
UnmodifiableEntrySetSpliterator	java.util.Comparator<? super java.util.Map.Entry<K, V>>	getComparator	[]
UnmodifiableEntry		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry	[java.util.Map$Entry]
UnmodifiableEntry	K	getKey	[]
UnmodifiableEntry	V	getValue	[]
UnmodifiableEntry	V	setValue	[V]
UnmodifiableEntry	int	hashCode	[]
UnmodifiableEntry	boolean	equals	[java.lang.Object]
UnmodifiableEntry	java.lang.String	toString	[]
UnmodifiableEntrySet		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet	[java.util.Set]
UnmodifiableEntrySet	java.util.function.Consumer<java.util.Map.Entry<K, V>>	entryConsumer	[java.util.function.Consumer]
UnmodifiableEntrySet	void	forEach	[java.util.function.Consumer]
UnmodifiableEntrySet	java.util.Spliterator<java.util.Map.Entry<K, V>>	spliterator	[]
UnmodifiableEntrySet	java.util.stream.Stream<java.util.Map.Entry<K, V>>	stream	[]
UnmodifiableEntrySet	java.util.stream.Stream<java.util.Map.Entry<K, V>>	parallelStream	[]
1		java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1	[]
1	boolean	hasNext	[]
1	java.util.Map.Entry<K, V>	next	[]
1	void	remove	[]
UnmodifiableEntrySet	java.util.Iterator<java.util.Map.Entry<K, V>>	iterator	[]
UnmodifiableEntrySet	java.lang.Object[]	toArray	[]
UnmodifiableEntrySet	T[]	toArray	[T[]]
UnmodifiableEntrySet	boolean	contains	[java.lang.Object]
UnmodifiableEntrySet	boolean	containsAll	[java.util.Collection]
UnmodifiableEntrySet	boolean	equals	[java.lang.Object]
UnmodifiableMap		java.util.Collections$UnmodifiableMap	[java.util.Map]
UnmodifiableMap	int	size	[]
UnmodifiableMap	boolean	isEmpty	[]
UnmodifiableMap	boolean	containsKey	[java.lang.Object]
UnmodifiableMap	boolean	containsValue	[java.lang.Object]
UnmodifiableMap	V	get	[java.lang.Object]
UnmodifiableMap	V	put	[K, V]
UnmodifiableMap	V	remove	[java.lang.Object]
UnmodifiableMap	void	putAll	[java.util.Map]
UnmodifiableMap	void	clear	[]
UnmodifiableMap	java.util.Set<K>	keySet	[]
UnmodifiableMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
UnmodifiableMap	java.util.Collection<V>	values	[]
UnmodifiableMap	boolean	equals	[java.lang.Object]
UnmodifiableMap	int	hashCode	[]
UnmodifiableMap	java.lang.String	toString	[]
UnmodifiableMap	V	getOrDefault	[java.lang.Object, V]
UnmodifiableMap	void	forEach	[java.util.function.BiConsumer]
UnmodifiableMap	void	replaceAll	[java.util.function.BiFunction]
UnmodifiableMap	V	putIfAbsent	[K, V]
UnmodifiableMap	boolean	remove	[java.lang.Object, java.lang.Object]
UnmodifiableMap	boolean	replace	[K, V, V]
UnmodifiableMap	V	replace	[K, V]
UnmodifiableMap	V	computeIfAbsent	[K, java.util.function.Function]
UnmodifiableMap	V	computeIfPresent	[K, java.util.function.BiFunction]
UnmodifiableMap	V	compute	[K, java.util.function.BiFunction]
UnmodifiableMap	V	merge	[K, V, java.util.function.BiFunction]
UnmodifiableSortedMap		java.util.Collections$UnmodifiableSortedMap	[java.util.SortedMap]
UnmodifiableSortedMap	java.util.Comparator<? super K>	comparator	[]
UnmodifiableSortedMap	java.util.SortedMap<K, V>	subMap	[K, K]
UnmodifiableSortedMap	java.util.SortedMap<K, V>	headMap	[K]
UnmodifiableSortedMap	java.util.SortedMap<K, V>	tailMap	[K]
UnmodifiableSortedMap	K	firstKey	[]
UnmodifiableSortedMap	K	lastKey	[]
EmptyNavigableMap		java.util.Collections$UnmodifiableNavigableMap$EmptyNavigableMap	[]
EmptyNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
EmptyNavigableMap	java.lang.Object	readResolve	[]
UnmodifiableNavigableMap		java.util.Collections$UnmodifiableNavigableMap	[java.util.NavigableMap]
UnmodifiableNavigableMap	K	lowerKey	[K]
UnmodifiableNavigableMap	K	floorKey	[K]
UnmodifiableNavigableMap	K	ceilingKey	[K]
UnmodifiableNavigableMap	K	higherKey	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	lowerEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	floorEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	ceilingEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	higherEntry	[K]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	firstEntry	[]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	lastEntry	[]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	pollFirstEntry	[]
UnmodifiableNavigableMap	java.util.Map.Entry<K, V>	pollLastEntry	[]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	descendingMap	[]
UnmodifiableNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
UnmodifiableNavigableMap	java.util.NavigableSet<K>	descendingKeySet	[]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, boolean, K, boolean]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	headMap	[K, boolean]
UnmodifiableNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K, boolean]
SynchronizedCollection		java.util.Collections$SynchronizedCollection	[java.util.Collection]
SynchronizedCollection		java.util.Collections$SynchronizedCollection	[java.util.Collection, java.lang.Object]
SynchronizedCollection	int	size	[]
SynchronizedCollection	boolean	isEmpty	[]
SynchronizedCollection	boolean	contains	[java.lang.Object]
SynchronizedCollection	java.lang.Object[]	toArray	[]
SynchronizedCollection	T[]	toArray	[T[]]
SynchronizedCollection	java.util.Iterator<E>	iterator	[]
SynchronizedCollection	boolean	add	[E]
SynchronizedCollection	boolean	remove	[java.lang.Object]
SynchronizedCollection	boolean	containsAll	[java.util.Collection]
SynchronizedCollection	boolean	addAll	[java.util.Collection]
SynchronizedCollection	boolean	removeAll	[java.util.Collection]
SynchronizedCollection	boolean	retainAll	[java.util.Collection]
SynchronizedCollection	void	clear	[]
SynchronizedCollection	java.lang.String	toString	[]
SynchronizedCollection	void	forEach	[java.util.function.Consumer]
SynchronizedCollection	boolean	removeIf	[java.util.function.Predicate]
SynchronizedCollection	java.util.Spliterator<E>	spliterator	[]
SynchronizedCollection	java.util.stream.Stream<E>	stream	[]
SynchronizedCollection	java.util.stream.Stream<E>	parallelStream	[]
SynchronizedCollection	void	writeObject	[java.io.ObjectOutputStream]
SynchronizedSet		java.util.Collections$SynchronizedSet	[java.util.Set]
SynchronizedSet		java.util.Collections$SynchronizedSet	[java.util.Set, java.lang.Object]
SynchronizedSet	boolean	equals	[java.lang.Object]
SynchronizedSet	int	hashCode	[]
SynchronizedSortedSet		java.util.Collections$SynchronizedSortedSet	[java.util.SortedSet]
SynchronizedSortedSet		java.util.Collections$SynchronizedSortedSet	[java.util.SortedSet, java.lang.Object]
SynchronizedSortedSet	java.util.Comparator<? super E>	comparator	[]
SynchronizedSortedSet	java.util.SortedSet<E>	subSet	[E, E]
SynchronizedSortedSet	java.util.SortedSet<E>	headSet	[E]
SynchronizedSortedSet	java.util.SortedSet<E>	tailSet	[E]
SynchronizedSortedSet	E	first	[]
SynchronizedSortedSet	E	last	[]
SynchronizedNavigableSet		java.util.Collections$SynchronizedNavigableSet	[java.util.NavigableSet]
SynchronizedNavigableSet		java.util.Collections$SynchronizedNavigableSet	[java.util.NavigableSet, java.lang.Object]
SynchronizedNavigableSet	E	lower	[E]
SynchronizedNavigableSet	E	floor	[E]
SynchronizedNavigableSet	E	ceiling	[E]
SynchronizedNavigableSet	E	higher	[E]
SynchronizedNavigableSet	E	pollFirst	[]
SynchronizedNavigableSet	E	pollLast	[]
SynchronizedNavigableSet	java.util.NavigableSet<E>	descendingSet	[]
SynchronizedNavigableSet	java.util.Iterator<E>	descendingIterator	[]
SynchronizedNavigableSet	java.util.NavigableSet<E>	subSet	[E, E]
SynchronizedNavigableSet	java.util.NavigableSet<E>	headSet	[E]
SynchronizedNavigableSet	java.util.NavigableSet<E>	tailSet	[E]
SynchronizedNavigableSet	java.util.NavigableSet<E>	subSet	[E, boolean, E, boolean]
SynchronizedNavigableSet	java.util.NavigableSet<E>	headSet	[E, boolean]
SynchronizedNavigableSet	java.util.NavigableSet<E>	tailSet	[E, boolean]
SynchronizedList		java.util.Collections$SynchronizedList	[java.util.List]
SynchronizedList		java.util.Collections$SynchronizedList	[java.util.List, java.lang.Object]
SynchronizedList	boolean	equals	[java.lang.Object]
SynchronizedList	int	hashCode	[]
SynchronizedList	E	get	[int]
SynchronizedList	E	set	[int, E]
SynchronizedList	void	add	[int, E]
SynchronizedList	E	remove	[int]
SynchronizedList	int	indexOf	[java.lang.Object]
SynchronizedList	int	lastIndexOf	[java.lang.Object]
SynchronizedList	boolean	addAll	[int, java.util.Collection]
SynchronizedList	java.util.ListIterator<E>	listIterator	[]
SynchronizedList	java.util.ListIterator<E>	listIterator	[int]
SynchronizedList	java.util.List<E>	subList	[int, int]
SynchronizedList	void	replaceAll	[java.util.function.UnaryOperator]
SynchronizedList	void	sort	[java.util.Comparator]
SynchronizedList	java.lang.Object	readResolve	[]
SynchronizedRandomAccessList		java.util.Collections$SynchronizedRandomAccessList	[java.util.List]
SynchronizedRandomAccessList		java.util.Collections$SynchronizedRandomAccessList	[java.util.List, java.lang.Object]
SynchronizedRandomAccessList	java.util.List<E>	subList	[int, int]
SynchronizedRandomAccessList	java.lang.Object	writeReplace	[]
SynchronizedMap		java.util.Collections$SynchronizedMap	[java.util.Map]
SynchronizedMap		java.util.Collections$SynchronizedMap	[java.util.Map, java.lang.Object]
SynchronizedMap	int	size	[]
SynchronizedMap	boolean	isEmpty	[]
SynchronizedMap	boolean	containsKey	[java.lang.Object]
SynchronizedMap	boolean	containsValue	[java.lang.Object]
SynchronizedMap	V	get	[java.lang.Object]
SynchronizedMap	V	put	[K, V]
SynchronizedMap	V	remove	[java.lang.Object]
SynchronizedMap	void	putAll	[java.util.Map]
SynchronizedMap	void	clear	[]
SynchronizedMap	java.util.Set<K>	keySet	[]
SynchronizedMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
SynchronizedMap	java.util.Collection<V>	values	[]
SynchronizedMap	boolean	equals	[java.lang.Object]
SynchronizedMap	int	hashCode	[]
SynchronizedMap	java.lang.String	toString	[]
SynchronizedMap	V	getOrDefault	[java.lang.Object, V]
SynchronizedMap	void	forEach	[java.util.function.BiConsumer]
SynchronizedMap	void	replaceAll	[java.util.function.BiFunction]
SynchronizedMap	V	putIfAbsent	[K, V]
SynchronizedMap	boolean	remove	[java.lang.Object, java.lang.Object]
SynchronizedMap	boolean	replace	[K, V, V]
SynchronizedMap	V	replace	[K, V]
SynchronizedMap	V	computeIfAbsent	[K, java.util.function.Function]
SynchronizedMap	V	computeIfPresent	[K, java.util.function.BiFunction]
SynchronizedMap	V	compute	[K, java.util.function.BiFunction]
SynchronizedMap	V	merge	[K, V, java.util.function.BiFunction]
SynchronizedMap	void	writeObject	[java.io.ObjectOutputStream]
SynchronizedSortedMap		java.util.Collections$SynchronizedSortedMap	[java.util.SortedMap]
SynchronizedSortedMap		java.util.Collections$SynchronizedSortedMap	[java.util.SortedMap, java.lang.Object]
SynchronizedSortedMap	java.util.Comparator<? super K>	comparator	[]
SynchronizedSortedMap	java.util.SortedMap<K, V>	subMap	[K, K]
SynchronizedSortedMap	java.util.SortedMap<K, V>	headMap	[K]
SynchronizedSortedMap	java.util.SortedMap<K, V>	tailMap	[K]
SynchronizedSortedMap	K	firstKey	[]
SynchronizedSortedMap	K	lastKey	[]
SynchronizedNavigableMap		java.util.Collections$SynchronizedNavigableMap	[java.util.NavigableMap]
SynchronizedNavigableMap		java.util.Collections$SynchronizedNavigableMap	[java.util.NavigableMap, java.lang.Object]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	lowerEntry	[K]
SynchronizedNavigableMap	K	lowerKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	floorEntry	[K]
SynchronizedNavigableMap	K	floorKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	ceilingEntry	[K]
SynchronizedNavigableMap	K	ceilingKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	higherEntry	[K]
SynchronizedNavigableMap	K	higherKey	[K]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	firstEntry	[]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	lastEntry	[]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	pollFirstEntry	[]
SynchronizedNavigableMap	java.util.Map.Entry<K, V>	pollLastEntry	[]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	descendingMap	[]
SynchronizedNavigableMap	java.util.NavigableSet<K>	keySet	[]
SynchronizedNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
SynchronizedNavigableMap	java.util.NavigableSet<K>	descendingKeySet	[]
SynchronizedNavigableMap	java.util.SortedMap<K, V>	subMap	[K, K]
SynchronizedNavigableMap	java.util.SortedMap<K, V>	headMap	[K]
SynchronizedNavigableMap	java.util.SortedMap<K, V>	tailMap	[K]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, boolean, K, boolean]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	headMap	[K, boolean]
SynchronizedNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K, boolean]
CheckedCollection	E	typeCheck	[java.lang.Object]
CheckedCollection	java.lang.String	badElementMsg	[java.lang.Object]
CheckedCollection		java.util.Collections$CheckedCollection	[java.util.Collection, java.lang.Class]
CheckedCollection	int	size	[]
CheckedCollection	boolean	isEmpty	[]
CheckedCollection	boolean	contains	[java.lang.Object]
CheckedCollection	java.lang.Object[]	toArray	[]
CheckedCollection	T[]	toArray	[T[]]
CheckedCollection	java.lang.String	toString	[]
CheckedCollection	boolean	remove	[java.lang.Object]
CheckedCollection	void	clear	[]
CheckedCollection	boolean	containsAll	[java.util.Collection]
CheckedCollection	boolean	removeAll	[java.util.Collection]
CheckedCollection	boolean	retainAll	[java.util.Collection]
1		java.util.Collections$CheckedCollection$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	void	remove	[]
CheckedCollection	java.util.Iterator<E>	iterator	[]
CheckedCollection	boolean	add	[E]
CheckedCollection	E[]	zeroLengthElementArray	[]
CheckedCollection	java.util.Collection<E>	checkedCopyOf	[java.util.Collection]
CheckedCollection	boolean	addAll	[java.util.Collection]
CheckedCollection	void	forEach	[java.util.function.Consumer]
CheckedCollection	boolean	removeIf	[java.util.function.Predicate]
CheckedCollection	java.util.Spliterator<E>	spliterator	[]
CheckedCollection	java.util.stream.Stream<E>	stream	[]
CheckedCollection	java.util.stream.Stream<E>	parallelStream	[]
CheckedQueue		java.util.Collections$CheckedQueue	[java.util.Queue, java.lang.Class]
CheckedQueue	E	element	[]
CheckedQueue	boolean	equals	[java.lang.Object]
CheckedQueue	int	hashCode	[]
CheckedQueue	E	peek	[]
CheckedQueue	E	poll	[]
CheckedQueue	E	remove	[]
CheckedQueue	boolean	offer	[E]
CheckedSet		java.util.Collections$CheckedSet	[java.util.Set, java.lang.Class]
CheckedSet	boolean	equals	[java.lang.Object]
CheckedSet	int	hashCode	[]
CheckedSortedSet		java.util.Collections$CheckedSortedSet	[java.util.SortedSet, java.lang.Class]
CheckedSortedSet	java.util.Comparator<? super E>	comparator	[]
CheckedSortedSet	E	first	[]
CheckedSortedSet	E	last	[]
CheckedSortedSet	java.util.SortedSet<E>	subSet	[E, E]
CheckedSortedSet	java.util.SortedSet<E>	headSet	[E]
CheckedSortedSet	java.util.SortedSet<E>	tailSet	[E]
CheckedNavigableSet		java.util.Collections$CheckedNavigableSet	[java.util.NavigableSet, java.lang.Class]
CheckedNavigableSet	E	lower	[E]
CheckedNavigableSet	E	floor	[E]
CheckedNavigableSet	E	ceiling	[E]
CheckedNavigableSet	E	higher	[E]
CheckedNavigableSet	E	pollFirst	[]
CheckedNavigableSet	E	pollLast	[]
CheckedNavigableSet	java.util.NavigableSet<E>	descendingSet	[]
CheckedNavigableSet	java.util.Iterator<E>	descendingIterator	[]
CheckedNavigableSet	java.util.NavigableSet<E>	subSet	[E, E]
CheckedNavigableSet	java.util.NavigableSet<E>	headSet	[E]
CheckedNavigableSet	java.util.NavigableSet<E>	tailSet	[E]
CheckedNavigableSet	java.util.NavigableSet<E>	subSet	[E, boolean, E, boolean]
CheckedNavigableSet	java.util.NavigableSet<E>	headSet	[E, boolean]
CheckedNavigableSet	java.util.NavigableSet<E>	tailSet	[E, boolean]
CheckedList		java.util.Collections$CheckedList	[java.util.List, java.lang.Class]
CheckedList	boolean	equals	[java.lang.Object]
CheckedList	int	hashCode	[]
CheckedList	E	get	[int]
CheckedList	E	remove	[int]
CheckedList	int	indexOf	[java.lang.Object]
CheckedList	int	lastIndexOf	[java.lang.Object]
CheckedList	E	set	[int, E]
CheckedList	void	add	[int, E]
CheckedList	boolean	addAll	[int, java.util.Collection]
CheckedList	java.util.ListIterator<E>	listIterator	[]
1		java.util.Collections$CheckedList$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	boolean	hasPrevious	[]
1	E	previous	[]
1	int	nextIndex	[]
1	int	previousIndex	[]
1	void	remove	[]
1	void	set	[E]
1	void	add	[E]
1	void	forEachRemaining	[java.util.function.Consumer]
CheckedList	java.util.ListIterator<E>	listIterator	[int]
CheckedList	java.util.List<E>	subList	[int, int]
CheckedList	void	replaceAll	[java.util.function.UnaryOperator]
CheckedList	void	sort	[java.util.Comparator]
CheckedRandomAccessList		java.util.Collections$CheckedRandomAccessList	[java.util.List, java.lang.Class]
CheckedRandomAccessList	java.util.List<E>	subList	[int, int]
CheckedEntry		java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry	[java.util.Map$Entry, java.lang.Class]
CheckedEntry	K	getKey	[]
CheckedEntry	V	getValue	[]
CheckedEntry	int	hashCode	[]
CheckedEntry	java.lang.String	toString	[]
CheckedEntry	V	setValue	[V]
CheckedEntry	java.lang.String	badValueMsg	[java.lang.Object]
CheckedEntry	boolean	equals	[java.lang.Object]
CheckedEntrySet		java.util.Collections$CheckedMap$CheckedEntrySet	[java.util.Set, java.lang.Class]
CheckedEntrySet	int	size	[]
CheckedEntrySet	boolean	isEmpty	[]
CheckedEntrySet	java.lang.String	toString	[]
CheckedEntrySet	int	hashCode	[]
CheckedEntrySet	void	clear	[]
CheckedEntrySet	boolean	add	[java.util.Map$Entry]
CheckedEntrySet	boolean	addAll	[java.util.Collection]
1		java.util.Collections$CheckedMap$CheckedEntrySet$1	[]
1	boolean	hasNext	[]
1	void	remove	[]
1	java.util.Map.Entry<K, V>	next	[]
CheckedEntrySet	java.util.Iterator<java.util.Map.Entry<K, V>>	iterator	[]
CheckedEntrySet	java.lang.Object[]	toArray	[]
CheckedEntrySet	T[]	toArray	[T[]]
CheckedEntrySet	boolean	contains	[java.lang.Object]
CheckedEntrySet	boolean	containsAll	[java.util.Collection]
CheckedEntrySet	boolean	remove	[java.lang.Object]
CheckedEntrySet	boolean	removeAll	[java.util.Collection]
CheckedEntrySet	boolean	retainAll	[java.util.Collection]
CheckedEntrySet	boolean	batchRemove	[java.util.Collection, boolean]
CheckedEntrySet	boolean	equals	[java.lang.Object]
CheckedEntrySet	java.util.Collections.CheckedMap.CheckedEntrySet.CheckedEntry<K, V, T>	checkedEntry	[java.util.Map$Entry, java.lang.Class]
CheckedMap	void	typeCheck	[java.lang.Object, java.lang.Object]
CheckedMap	java.util.function.BiFunction<? super K, ? super V, ? extends V>	typeCheck	[java.util.function.BiFunction]
CheckedMap	java.lang.String	badKeyMsg	[java.lang.Object]
CheckedMap	java.lang.String	badValueMsg	[java.lang.Object]
CheckedMap		java.util.Collections$CheckedMap	[java.util.Map, java.lang.Class, java.lang.Class]
CheckedMap	int	size	[]
CheckedMap	boolean	isEmpty	[]
CheckedMap	boolean	containsKey	[java.lang.Object]
CheckedMap	boolean	containsValue	[java.lang.Object]
CheckedMap	V	get	[java.lang.Object]
CheckedMap	V	remove	[java.lang.Object]
CheckedMap	void	clear	[]
CheckedMap	java.util.Set<K>	keySet	[]
CheckedMap	java.util.Collection<V>	values	[]
CheckedMap	boolean	equals	[java.lang.Object]
CheckedMap	int	hashCode	[]
CheckedMap	java.lang.String	toString	[]
CheckedMap	V	put	[K, V]
CheckedMap	void	putAll	[java.util.Map]
CheckedMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
CheckedMap	void	forEach	[java.util.function.BiConsumer]
CheckedMap	void	replaceAll	[java.util.function.BiFunction]
CheckedMap	V	putIfAbsent	[K, V]
CheckedMap	boolean	remove	[java.lang.Object, java.lang.Object]
CheckedMap	boolean	replace	[K, V, V]
CheckedMap	V	replace	[K, V]
CheckedMap	V	computeIfAbsent	[K, java.util.function.Function]
CheckedMap	V	computeIfPresent	[K, java.util.function.BiFunction]
CheckedMap	V	compute	[K, java.util.function.BiFunction]
CheckedMap	V	merge	[K, V, java.util.function.BiFunction]
CheckedSortedMap		java.util.Collections$CheckedSortedMap	[java.util.SortedMap, java.lang.Class, java.lang.Class]
CheckedSortedMap	java.util.Comparator<? super K>	comparator	[]
CheckedSortedMap	K	firstKey	[]
CheckedSortedMap	K	lastKey	[]
CheckedSortedMap	java.util.SortedMap<K, V>	subMap	[K, K]
CheckedSortedMap	java.util.SortedMap<K, V>	headMap	[K]
CheckedSortedMap	java.util.SortedMap<K, V>	tailMap	[K]
CheckedNavigableMap		java.util.Collections$CheckedNavigableMap	[java.util.NavigableMap, java.lang.Class, java.lang.Class]
CheckedNavigableMap	java.util.Comparator<? super K>	comparator	[]
CheckedNavigableMap	K	firstKey	[]
CheckedNavigableMap	K	lastKey	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	lowerEntry	[K]
CheckedNavigableMap	K	lowerKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	floorEntry	[K]
CheckedNavigableMap	K	floorKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	ceilingEntry	[K]
CheckedNavigableMap	K	ceilingKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	higherEntry	[K]
CheckedNavigableMap	K	higherKey	[K]
CheckedNavigableMap	java.util.Map.Entry<K, V>	firstEntry	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	lastEntry	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	pollFirstEntry	[]
CheckedNavigableMap	java.util.Map.Entry<K, V>	pollLastEntry	[]
CheckedNavigableMap	java.util.NavigableMap<K, V>	descendingMap	[]
CheckedNavigableMap	java.util.NavigableSet<K>	keySet	[]
CheckedNavigableMap	java.util.NavigableSet<K>	navigableKeySet	[]
CheckedNavigableMap	java.util.NavigableSet<K>	descendingKeySet	[]
CheckedNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, K]
CheckedNavigableMap	java.util.NavigableMap<K, V>	headMap	[K]
CheckedNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K]
CheckedNavigableMap	java.util.NavigableMap<K, V>	subMap	[K, boolean, K, boolean]
CheckedNavigableMap	java.util.NavigableMap<K, V>	headMap	[K, boolean]
CheckedNavigableMap	java.util.NavigableMap<K, V>	tailMap	[K, boolean]
EmptyIterator		java.util.Collections$EmptyIterator	[]
EmptyIterator	boolean	hasNext	[]
EmptyIterator	E	next	[]
EmptyIterator	void	remove	[]
EmptyIterator	void	forEachRemaining	[java.util.function.Consumer]
EmptyListIterator		java.util.Collections$EmptyListIterator	[]
EmptyListIterator	boolean	hasPrevious	[]
EmptyListIterator	E	previous	[]
EmptyListIterator	int	nextIndex	[]
EmptyListIterator	int	previousIndex	[]
EmptyListIterator	void	set	[E]
EmptyListIterator	void	add	[E]
EmptyEnumeration		java.util.Collections$EmptyEnumeration	[]
EmptyEnumeration	boolean	hasMoreElements	[]
EmptyEnumeration	E	nextElement	[]
EmptySet		java.util.Collections$EmptySet	[]
EmptySet	java.util.Iterator<E>	iterator	[]
EmptySet	int	size	[]
EmptySet	boolean	isEmpty	[]
EmptySet	boolean	contains	[java.lang.Object]
EmptySet	boolean	containsAll	[java.util.Collection]
EmptySet	java.lang.Object[]	toArray	[]
EmptySet	T[]	toArray	[T[]]
EmptySet	void	forEach	[java.util.function.Consumer]
EmptySet	boolean	removeIf	[java.util.function.Predicate]
EmptySet	java.util.Spliterator<E>	spliterator	[]
EmptySet	java.lang.Object	readResolve	[]
EmptyList		java.util.Collections$EmptyList	[]
EmptyList	java.util.Iterator<E>	iterator	[]
EmptyList	java.util.ListIterator<E>	listIterator	[]
EmptyList	int	size	[]
EmptyList	boolean	isEmpty	[]
EmptyList	boolean	contains	[java.lang.Object]
EmptyList	boolean	containsAll	[java.util.Collection]
EmptyList	java.lang.Object[]	toArray	[]
EmptyList	T[]	toArray	[T[]]
EmptyList	E	get	[int]
EmptyList	boolean	equals	[java.lang.Object]
EmptyList	int	hashCode	[]
EmptyList	boolean	removeIf	[java.util.function.Predicate]
EmptyList	void	replaceAll	[java.util.function.UnaryOperator]
EmptyList	void	sort	[java.util.Comparator]
EmptyList	void	forEach	[java.util.function.Consumer]
EmptyList	java.util.Spliterator<E>	spliterator	[]
EmptyList	java.lang.Object	readResolve	[]
EmptyMap		java.util.Collections$EmptyMap	[]
EmptyMap	int	size	[]
EmptyMap	boolean	isEmpty	[]
EmptyMap	boolean	containsKey	[java.lang.Object]
EmptyMap	boolean	containsValue	[java.lang.Object]
EmptyMap	V	get	[java.lang.Object]
EmptyMap	java.util.Set<K>	keySet	[]
EmptyMap	java.util.Collection<V>	values	[]
EmptyMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
EmptyMap	boolean	equals	[java.lang.Object]
EmptyMap	int	hashCode	[]
EmptyMap	V	getOrDefault	[java.lang.Object, V]
EmptyMap	void	forEach	[java.util.function.BiConsumer]
EmptyMap	void	replaceAll	[java.util.function.BiFunction]
EmptyMap	V	putIfAbsent	[K, V]
EmptyMap	boolean	remove	[java.lang.Object, java.lang.Object]
EmptyMap	boolean	replace	[K, V, V]
EmptyMap	V	replace	[K, V]
EmptyMap	V	computeIfAbsent	[K, java.util.function.Function]
EmptyMap	V	computeIfPresent	[K, java.util.function.BiFunction]
EmptyMap	V	compute	[K, java.util.function.BiFunction]
EmptyMap	V	merge	[K, V, java.util.function.BiFunction]
EmptyMap	java.lang.Object	readResolve	[]
SingletonSet		java.util.Collections$SingletonSet	[E]
SingletonSet	java.util.Iterator<E>	iterator	[]
SingletonSet	int	size	[]
SingletonSet	boolean	contains	[java.lang.Object]
SingletonSet	void	forEach	[java.util.function.Consumer]
SingletonSet	java.util.Spliterator<E>	spliterator	[]
SingletonSet	boolean	removeIf	[java.util.function.Predicate]
SingletonList		java.util.Collections$SingletonList	[E]
SingletonList	java.util.Iterator<E>	iterator	[]
SingletonList	int	size	[]
SingletonList	boolean	contains	[java.lang.Object]
SingletonList	E	get	[int]
SingletonList	void	forEach	[java.util.function.Consumer]
SingletonList	boolean	removeIf	[java.util.function.Predicate]
SingletonList	void	replaceAll	[java.util.function.UnaryOperator]
SingletonList	void	sort	[java.util.Comparator]
SingletonList	java.util.Spliterator<E>	spliterator	[]
SingletonMap		java.util.Collections$SingletonMap	[K, V]
SingletonMap	int	size	[]
SingletonMap	boolean	isEmpty	[]
SingletonMap	boolean	containsKey	[java.lang.Object]
SingletonMap	boolean	containsValue	[java.lang.Object]
SingletonMap	V	get	[java.lang.Object]
SingletonMap	java.util.Set<K>	keySet	[]
SingletonMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
SingletonMap	java.util.Collection<V>	values	[]
SingletonMap	V	getOrDefault	[java.lang.Object, V]
SingletonMap	void	forEach	[java.util.function.BiConsumer]
SingletonMap	void	replaceAll	[java.util.function.BiFunction]
SingletonMap	V	putIfAbsent	[K, V]
SingletonMap	boolean	remove	[java.lang.Object, java.lang.Object]
SingletonMap	boolean	replace	[K, V, V]
SingletonMap	V	replace	[K, V]
SingletonMap	V	computeIfAbsent	[K, java.util.function.Function]
SingletonMap	V	computeIfPresent	[K, java.util.function.BiFunction]
SingletonMap	V	compute	[K, java.util.function.BiFunction]
SingletonMap	V	merge	[K, V, java.util.function.BiFunction]
CopiesList		java.util.Collections$CopiesList	[int, E]
CopiesList	int	size	[]
CopiesList	boolean	contains	[java.lang.Object]
CopiesList	int	indexOf	[java.lang.Object]
CopiesList	int	lastIndexOf	[java.lang.Object]
CopiesList	E	get	[int]
CopiesList	java.lang.Object[]	toArray	[]
CopiesList	T[]	toArray	[T[]]
CopiesList	java.util.List<E>	subList	[int, int]
CopiesList	java.util.stream.Stream<E>	stream	[]
CopiesList	java.util.stream.Stream<E>	parallelStream	[]
CopiesList	java.util.Spliterator<E>	spliterator	[]
ReverseComparator		java.util.Collections$ReverseComparator	[]
ReverseComparator	int	compare	[java.lang.Comparable, java.lang.Comparable]
ReverseComparator	java.lang.Object	readResolve	[]
ReverseComparator	java.util.Comparator<java.lang.Comparable<java.lang.Object>>	reversed	[]
ReverseComparator2		java.util.Collections$ReverseComparator2	[java.util.Comparator]
ReverseComparator2	int	compare	[T, T]
ReverseComparator2	boolean	equals	[java.lang.Object]
ReverseComparator2	int	hashCode	[]
ReverseComparator2	java.util.Comparator<T>	reversed	[]
SetFromMap		java.util.Collections$SetFromMap	[java.util.Map]
SetFromMap	void	clear	[]
SetFromMap	int	size	[]
SetFromMap	boolean	isEmpty	[]
SetFromMap	boolean	contains	[java.lang.Object]
SetFromMap	boolean	remove	[java.lang.Object]
SetFromMap	boolean	add	[E]
SetFromMap	java.util.Iterator<E>	iterator	[]
SetFromMap	java.lang.Object[]	toArray	[]
SetFromMap	T[]	toArray	[T[]]
SetFromMap	java.lang.String	toString	[]
SetFromMap	int	hashCode	[]
SetFromMap	boolean	equals	[java.lang.Object]
SetFromMap	boolean	containsAll	[java.util.Collection]
SetFromMap	boolean	removeAll	[java.util.Collection]
SetFromMap	boolean	retainAll	[java.util.Collection]
SetFromMap	void	forEach	[java.util.function.Consumer]
SetFromMap	boolean	removeIf	[java.util.function.Predicate]
SetFromMap	java.util.Spliterator<E>	spliterator	[]
SetFromMap	java.util.stream.Stream<E>	stream	[]
SetFromMap	java.util.stream.Stream<E>	parallelStream	[]
SetFromMap	void	readObject	[java.io.ObjectInputStream]
AsLIFOQueue		java.util.Collections$AsLIFOQueue	[java.util.Deque]
AsLIFOQueue	boolean	add	[E]
AsLIFOQueue	boolean	offer	[E]
AsLIFOQueue	E	poll	[]
AsLIFOQueue	E	remove	[]
AsLIFOQueue	E	peek	[]
AsLIFOQueue	E	element	[]
AsLIFOQueue	void	clear	[]
AsLIFOQueue	int	size	[]
AsLIFOQueue	boolean	isEmpty	[]
AsLIFOQueue	boolean	contains	[java.lang.Object]
AsLIFOQueue	boolean	remove	[java.lang.Object]
AsLIFOQueue	java.util.Iterator<E>	iterator	[]
AsLIFOQueue	java.lang.Object[]	toArray	[]
AsLIFOQueue	T[]	toArray	[T[]]
AsLIFOQueue	java.lang.String	toString	[]
AsLIFOQueue	boolean	containsAll	[java.util.Collection]
AsLIFOQueue	boolean	removeAll	[java.util.Collection]
AsLIFOQueue	boolean	retainAll	[java.util.Collection]
AsLIFOQueue	void	forEach	[java.util.function.Consumer]
AsLIFOQueue	boolean	removeIf	[java.util.function.Predicate]
AsLIFOQueue	java.util.Spliterator<E>	spliterator	[]
AsLIFOQueue	java.util.stream.Stream<E>	stream	[]
AsLIFOQueue	java.util.stream.Stream<E>	parallelStream	[]
Collections		java.util.Collections	[]
Collections	void	sort	[java.util.List]
Collections	void	sort	[java.util.List, java.util.Comparator]
Collections	int	binarySearch	[java.util.List, T]
Collections	int	indexedBinarySearch	[java.util.List, T]
Collections	int	iteratorBinarySearch	[java.util.List, T]
Collections	T	get	[java.util.ListIterator, int]
Collections	int	binarySearch	[java.util.List, T, java.util.Comparator]
Collections	int	indexedBinarySearch	[java.util.List, T, java.util.Comparator]
Collections	int	iteratorBinarySearch	[java.util.List, T, java.util.Comparator]
Collections	void	reverse	[java.util.List]
Collections	void	shuffle	[java.util.List]
Collections	void	shuffle	[java.util.List, java.util.Random]
Collections	void	swap	[java.util.List, int, int]
Collections	void	swap	[java.lang.Object[], int, int]
Collections	void	fill	[java.util.List, T]
Collections	void	copy	[java.util.List, java.util.List]
Collections	T	min	[java.util.Collection]
Collections	T	min	[java.util.Collection, java.util.Comparator]
Collections	T	max	[java.util.Collection]
Collections	T	max	[java.util.Collection, java.util.Comparator]
Collections	void	rotate	[java.util.List, int]
Collections	void	rotate1	[java.util.List, int]
Collections	void	rotate2	[java.util.List, int]
Collections	boolean	replaceAll	[java.util.List, T, T]
Collections	int	indexOfSubList	[java.util.List, java.util.List]
Collections	int	lastIndexOfSubList	[java.util.List, java.util.List]
Collections	java.util.Collection<T>	unmodifiableCollection	[java.util.Collection]
Collections	java.util.Set<T>	unmodifiableSet	[java.util.Set]
Collections	java.util.SortedSet<T>	unmodifiableSortedSet	[java.util.SortedSet]
Collections	java.util.NavigableSet<T>	unmodifiableNavigableSet	[java.util.NavigableSet]
Collections	java.util.List<T>	unmodifiableList	[java.util.List]
Collections	java.util.Map<K, V>	unmodifiableMap	[java.util.Map]
Collections	java.util.SortedMap<K, V>	unmodifiableSortedMap	[java.util.SortedMap]
Collections	java.util.NavigableMap<K, V>	unmodifiableNavigableMap	[java.util.NavigableMap]
Collections	java.util.Collection<T>	synchronizedCollection	[java.util.Collection]
Collections	java.util.Collection<T>	synchronizedCollection	[java.util.Collection, java.lang.Object]
Collections	java.util.Set<T>	synchronizedSet	[java.util.Set]
Collections	java.util.Set<T>	synchronizedSet	[java.util.Set, java.lang.Object]
Collections	java.util.SortedSet<T>	synchronizedSortedSet	[java.util.SortedSet]
Collections	java.util.NavigableSet<T>	synchronizedNavigableSet	[java.util.NavigableSet]
Collections	java.util.List<T>	synchronizedList	[java.util.List]
Collections	java.util.List<T>	synchronizedList	[java.util.List, java.lang.Object]
Collections	java.util.Map<K, V>	synchronizedMap	[java.util.Map]
Collections	java.util.SortedMap<K, V>	synchronizedSortedMap	[java.util.SortedMap]
Collections	java.util.NavigableMap<K, V>	synchronizedNavigableMap	[java.util.NavigableMap]
Collections	java.util.Collection<E>	checkedCollection	[java.util.Collection, java.lang.Class]
Collections	T[]	zeroLengthArray	[java.lang.Class]
Collections	java.util.Queue<E>	checkedQueue	[java.util.Queue, java.lang.Class]
Collections	java.util.Set<E>	checkedSet	[java.util.Set, java.lang.Class]
Collections	java.util.SortedSet<E>	checkedSortedSet	[java.util.SortedSet, java.lang.Class]
Collections	java.util.NavigableSet<E>	checkedNavigableSet	[java.util.NavigableSet, java.lang.Class]
Collections	java.util.List<E>	checkedList	[java.util.List, java.lang.Class]
Collections	java.util.Map<K, V>	checkedMap	[java.util.Map, java.lang.Class, java.lang.Class]
Collections	java.util.SortedMap<K, V>	checkedSortedMap	[java.util.SortedMap, java.lang.Class, java.lang.Class]
Collections	java.util.NavigableMap<K, V>	checkedNavigableMap	[java.util.NavigableMap, java.lang.Class, java.lang.Class]
Collections	java.util.Iterator<T>	emptyIterator	[]
Collections	java.util.ListIterator<T>	emptyListIterator	[]
Collections	java.util.Enumeration<T>	emptyEnumeration	[]
Collections	java.util.Set<T>	emptySet	[]
Collections	java.util.SortedSet<E>	emptySortedSet	[]
Collections	java.util.NavigableSet<E>	emptyNavigableSet	[]
Collections	java.util.List<T>	emptyList	[]
Collections	java.util.Map<K, V>	emptyMap	[]
Collections	java.util.SortedMap<K, V>	emptySortedMap	[]
Collections	java.util.NavigableMap<K, V>	emptyNavigableMap	[]
Collections	java.util.Set<T>	singleton	[T]
1		java.util.Collections$1	[]
1	boolean	hasNext	[]
1	E	next	[]
1	void	remove	[]
1	void	forEachRemaining	[java.util.function.Consumer]
Collections	java.util.Iterator<E>	singletonIterator	[E]
2		java.util.Collections$2	[]
2	java.util.Spliterator<T>	trySplit	[]
2	boolean	tryAdvance	[java.util.function.Consumer]
2	void	forEachRemaining	[java.util.function.Consumer]
2	long	estimateSize	[]
2	int	characteristics	[]
Collections	java.util.Spliterator<T>	singletonSpliterator	[T]
Collections	java.util.List<T>	singletonList	[T]
Collections	java.util.Map<K, V>	singletonMap	[K, V]
Collections	java.util.List<T>	nCopies	[int, T]
Collections	java.util.Comparator<T>	reverseOrder	[]
Collections	java.util.Comparator<T>	reverseOrder	[java.util.Comparator]
3		java.util.Collections$3	[]
3	boolean	hasMoreElements	[]
3	T	nextElement	[]
Collections	java.util.Enumeration<T>	enumeration	[java.util.Collection]
Collections	java.util.ArrayList<T>	list	[java.util.Enumeration]
Collections	boolean	eq	[java.lang.Object, java.lang.Object]
Collections	int	frequency	[java.util.Collection, java.lang.Object]
Collections	boolean	disjoint	[java.util.Collection, java.util.Collection]
Collections	boolean	addAll	[java.util.Collection, T[]]
Collections	java.util.Set<E>	newSetFromMap	[java.util.Map]
Collections	java.util.Queue<T>	asLifoQueue	[java.util.Deque]
MockitoException		org.mockito.exceptions.base.MockitoException	[java.lang.String, java.lang.Throwable]
MockitoException		org.mockito.exceptions.base.MockitoException	[java.lang.String]
MockitoException	void	filterStackTrace	[]
MockitoException	java.lang.StackTraceElement[]	getUnfilteredStackTrace	[]
FieldInitializer	java.lang.Object[]	resolveTypeInstances	[java.lang.Class[]]
FieldInitializer	org.mockito.internal.util.reflection.FieldInitializationReport	instantiate	[]
NoArgConstructorInstantiator		org.mockito.internal.util.reflection.FieldInitializer$NoArgConstructorInstantiator	[java.lang.Object, java.lang.reflect.Field]
NoArgConstructorInstantiator	org.mockito.internal.util.reflection.FieldInitializationReport	instantiate	[]
1		org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator$1	[]
1	int	compare	[java.lang.reflect.Constructor, java.lang.reflect.Constructor]
ParameterizedConstructorInstantiator		org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator	[java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver]
ParameterizedConstructorInstantiator	org.mockito.internal.util.reflection.FieldInitializationReport	instantiate	[]
ParameterizedConstructorInstantiator	void	checkParameterized	[java.lang.reflect.Constructor, java.lang.reflect.Field]
ParameterizedConstructorInstantiator	java.lang.reflect.Constructor<?>	biggestConstructor	[java.lang.Class]
FieldInitializer		org.mockito.internal.util.reflection.FieldInitializer	[java.lang.Object, java.lang.reflect.Field]
FieldInitializer		org.mockito.internal.util.reflection.FieldInitializer	[java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver]
FieldInitializer		org.mockito.internal.util.reflection.FieldInitializer	[java.lang.Object, java.lang.reflect.Field, org.mockito.internal.util.reflection.FieldInitializer$ConstructorInstantiator]
FieldInitializer	org.mockito.internal.util.reflection.FieldInitializationReport	initialize	[]
FieldInitializer	void	checkNotLocal	[java.lang.reflect.Field]
FieldInitializer	void	checkNotInner	[java.lang.reflect.Field]
FieldInitializer	void	checkNotInterface	[java.lang.reflect.Field]
FieldInitializer	void	checkNotAbstract	[java.lang.reflect.Field]
FieldInitializer	org.mockito.internal.util.reflection.FieldInitializationReport	acquireFieldInstance	[]
