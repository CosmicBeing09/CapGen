Node		java.util.HashMap$Node	[int, K, V, java.util.HashMap$Node]
Node	K	getKey	[]
Node	V	getValue	[]
Node	java.lang.String	toString	[]
Node	int	hashCode	[]
Node	V	setValue	[V]
Node	boolean	equals	[java.lang.Object]
KeySet		java.util.HashMap$KeySet	[]
KeySet	int	size	[]
KeySet	void	clear	[]
KeySet	java.util.Iterator<K>	iterator	[]
KeySet	boolean	contains	[java.lang.Object]
KeySet	boolean	remove	[java.lang.Object]
KeySet	java.util.Spliterator<K>	spliterator	[]
KeySet	void	forEach	[java.util.function.Consumer]
Values		java.util.HashMap$Values	[]
Values	int	size	[]
Values	void	clear	[]
Values	java.util.Iterator<V>	iterator	[]
Values	boolean	contains	[java.lang.Object]
Values	java.util.Spliterator<V>	spliterator	[]
Values	void	forEach	[java.util.function.Consumer]
EntrySet		java.util.HashMap$EntrySet	[]
EntrySet	int	size	[]
EntrySet	void	clear	[]
EntrySet	java.util.Iterator<java.util.Map.Entry<K, V>>	iterator	[]
EntrySet	boolean	contains	[java.lang.Object]
EntrySet	boolean	remove	[java.lang.Object]
EntrySet	java.util.Spliterator<java.util.Map.Entry<K, V>>	spliterator	[]
EntrySet	void	forEach	[java.util.function.Consumer]
HashIterator		java.util.HashMap$HashIterator	[]
HashIterator	boolean	hasNext	[]
HashIterator	java.util.HashMap.Node<K, V>	nextNode	[]
HashIterator	void	remove	[]
KeyIterator		java.util.HashMap$KeyIterator	[]
KeyIterator	K	next	[]
ValueIterator		java.util.HashMap$ValueIterator	[]
ValueIterator	V	next	[]
EntryIterator		java.util.HashMap$EntryIterator	[]
EntryIterator	java.util.Map.Entry<K, V>	next	[]
HashMapSpliterator		java.util.HashMap$HashMapSpliterator	[java.util.HashMap, int, int, int, int]
HashMapSpliterator	int	getFence	[]
HashMapSpliterator	long	estimateSize	[]
KeySpliterator		java.util.HashMap$KeySpliterator	[java.util.HashMap, int, int, int, int]
KeySpliterator	java.util.HashMap.KeySpliterator<K, V>	trySplit	[]
KeySpliterator	void	forEachRemaining	[java.util.function.Consumer]
KeySpliterator	boolean	tryAdvance	[java.util.function.Consumer]
KeySpliterator	int	characteristics	[]
ValueSpliterator		java.util.HashMap$ValueSpliterator	[java.util.HashMap, int, int, int, int]
ValueSpliterator	java.util.HashMap.ValueSpliterator<K, V>	trySplit	[]
ValueSpliterator	void	forEachRemaining	[java.util.function.Consumer]
ValueSpliterator	boolean	tryAdvance	[java.util.function.Consumer]
ValueSpliterator	int	characteristics	[]
EntrySpliterator		java.util.HashMap$EntrySpliterator	[java.util.HashMap, int, int, int, int]
EntrySpliterator	java.util.HashMap.EntrySpliterator<K, V>	trySplit	[]
EntrySpliterator	void	forEachRemaining	[java.util.function.Consumer]
EntrySpliterator	boolean	tryAdvance	[java.util.function.Consumer]
EntrySpliterator	int	characteristics	[]
TreeNode		java.util.HashMap$TreeNode	[int, K, V, java.util.HashMap$Node]
TreeNode	java.util.HashMap.TreeNode<K, V>	root	[]
TreeNode	void	moveRootToFront	[java.util.HashMap$Node[], java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	find	[int, java.lang.Object, java.lang.Class]
TreeNode	java.util.HashMap.TreeNode<K, V>	getTreeNode	[int, java.lang.Object]
TreeNode	int	tieBreakOrder	[java.lang.Object, java.lang.Object]
TreeNode	void	treeify	[java.util.HashMap$Node[]]
TreeNode	java.util.HashMap.Node<K, V>	untreeify	[java.util.HashMap]
TreeNode	java.util.HashMap.TreeNode<K, V>	putTreeVal	[java.util.HashMap, java.util.HashMap$Node[], int, K, V]
TreeNode	void	removeTreeNode	[java.util.HashMap, java.util.HashMap$Node[], boolean]
TreeNode	void	split	[java.util.HashMap, java.util.HashMap$Node[], int, int]
TreeNode	java.util.HashMap.TreeNode<K, V>	rotateLeft	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	rotateRight	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	balanceInsertion	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	java.util.HashMap.TreeNode<K, V>	balanceDeletion	[java.util.HashMap$TreeNode, java.util.HashMap$TreeNode]
TreeNode	boolean	checkInvariants	[java.util.HashMap$TreeNode]
HashMap	int	hash	[java.lang.Object]
HashMap	java.lang.Class<?>	comparableClassFor	[java.lang.Object]
HashMap	int	compareComparables	[java.lang.Class, java.lang.Object, java.lang.Object]
HashMap	int	tableSizeFor	[int]
HashMap		java.util.HashMap	[int, float]
HashMap		java.util.HashMap	[int]
HashMap		java.util.HashMap	[]
HashMap		java.util.HashMap	[java.util.Map]
HashMap	void	putMapEntries	[java.util.Map, boolean]
HashMap	int	size	[]
HashMap	boolean	isEmpty	[]
HashMap	V	get	[java.lang.Object]
HashMap	java.util.HashMap.Node<K, V>	getNode	[int, java.lang.Object]
HashMap	boolean	containsKey	[java.lang.Object]
HashMap	V	put	[K, V]
HashMap	V	putVal	[int, K, V, boolean, boolean]
HashMap	java.util.HashMap.Node<K, V>[]	resize	[]
HashMap	void	treeifyBin	[java.util.HashMap$Node[], int]
HashMap	void	putAll	[java.util.Map]
HashMap	V	remove	[java.lang.Object]
HashMap	java.util.HashMap.Node<K, V>	removeNode	[int, java.lang.Object, java.lang.Object, boolean, boolean]
HashMap	void	clear	[]
HashMap	boolean	containsValue	[java.lang.Object]
HashMap	java.util.Set<K>	keySet	[]
HashMap	java.util.Collection<V>	values	[]
HashMap	java.util.Set<java.util.Map.Entry<K, V>>	entrySet	[]
HashMap	V	getOrDefault	[java.lang.Object, V]
HashMap	V	putIfAbsent	[K, V]
HashMap	boolean	remove	[java.lang.Object, java.lang.Object]
HashMap	boolean	replace	[K, V, V]
HashMap	V	replace	[K, V]
HashMap	V	computeIfAbsent	[K, java.util.function.Function]
HashMap	V	computeIfPresent	[K, java.util.function.BiFunction]
HashMap	V	compute	[K, java.util.function.BiFunction]
HashMap	V	merge	[K, V, java.util.function.BiFunction]
HashMap	void	forEach	[java.util.function.BiConsumer]
HashMap	void	replaceAll	[java.util.function.BiFunction]
HashMap	java.lang.Object	clone	[]
HashMap	float	loadFactor	[]
HashMap	int	capacity	[]
HashMap	void	writeObject	[java.io.ObjectOutputStream]
HashMap	void	readObject	[java.io.ObjectInputStream]
HashMap	java.util.HashMap.Node<K, V>	newNode	[int, K, V, java.util.HashMap$Node]
HashMap	java.util.HashMap.Node<K, V>	replacementNode	[java.util.HashMap$Node, java.util.HashMap$Node]
HashMap	java.util.HashMap.TreeNode<K, V>	newTreeNode	[int, K, V, java.util.HashMap$Node]
HashMap	java.util.HashMap.TreeNode<K, V>	replacementTreeNode	[java.util.HashMap$Node, java.util.HashMap$Node]
HashMap	void	reinitialize	[]
HashMap	void	afterNodeAccess	[java.util.HashMap$Node]
HashMap	void	afterNodeInsertion	[boolean]
HashMap	void	afterNodeRemoval	[java.util.HashMap$Node]
HashMap	void	internalWriteEntries	[java.io.ObjectOutputStream]
HashSet		java.util.HashSet	[]
HashSet		java.util.HashSet	[java.util.Collection]
HashSet		java.util.HashSet	[int, float]
HashSet		java.util.HashSet	[int]
HashSet		java.util.HashSet	[int, float, boolean]
HashSet	java.util.Iterator<E>	iterator	[]
HashSet	int	size	[]
HashSet	boolean	isEmpty	[]
HashSet	boolean	contains	[java.lang.Object]
HashSet	boolean	add	[E]
HashSet	boolean	remove	[java.lang.Object]
HashSet	void	clear	[]
HashSet	java.lang.Object	clone	[]
HashSet	void	writeObject	[java.io.ObjectOutputStream]
HashSet	void	readObject	[java.io.ObjectInputStream]
HashSet	java.util.Spliterator<E>	spliterator	[]
Validate		org.jsoup.helper.Validate	[]
Validate	void	notNull	[java.lang.Object]
Validate	void	notNull	[java.lang.Object, java.lang.String]
Validate	void	isTrue	[boolean]
Validate	void	isTrue	[boolean, java.lang.String]
Validate	void	isFalse	[boolean]
Validate	void	isFalse	[boolean, java.lang.String]
Validate	void	noNullElements	[java.lang.Object[]]
Validate	void	noNullElements	[java.lang.Object[], java.lang.String]
Validate	void	notEmpty	[java.lang.String]
Validate	void	notEmpty	[java.lang.String, java.lang.String]
Validate	void	fail	[java.lang.String]
Attribute		org.jsoup.nodes.Attribute	[java.lang.String, java.lang.String]
Attribute	java.lang.String	getKey	[]
Attribute	void	setKey	[java.lang.String]
Attribute	java.lang.String	getValue	[]
Attribute	java.lang.String	setValue	[java.lang.String]
Attribute	java.lang.String	html	[]
Attribute	void	html	[java.lang.StringBuilder, org.jsoup.nodes.Document$OutputSettings]
Attribute	java.lang.String	toString	[]
Attribute	org.jsoup.nodes.Attribute	createFromEncoded	[java.lang.String, java.lang.String]
Attribute	boolean	isDataAttribute	[]
Attribute	boolean	equals	[java.lang.Object]
Attribute	int	hashCode	[]
Attribute	org.jsoup.nodes.Attribute	clone	[]
EntrySet		org.jsoup.nodes.Attributes$Dataset$EntrySet	[]
EntrySet	java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.String>>	iterator	[]
EntrySet	int	size	[]
DatasetIterator		org.jsoup.nodes.Attributes$Dataset$DatasetIterator	[]
DatasetIterator	boolean	hasNext	[]
DatasetIterator	java.util.Map.Entry<java.lang.String, java.lang.String>	next	[]
DatasetIterator	void	remove	[]
Dataset		org.jsoup.nodes.Attributes$Dataset	[]
Dataset	java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.String>>	entrySet	[]
Dataset	java.lang.String	put	[java.lang.String, java.lang.String]
Attributes		org.jsoup.nodes.Attributes	[]
Attributes	java.lang.String	get	[java.lang.String]
Attributes	void	put	[java.lang.String, java.lang.String]
Attributes	void	put	[org.jsoup.nodes.Attribute]
Attributes	void	remove	[java.lang.String]
Attributes	boolean	hasKey	[java.lang.String]
Attributes	int	size	[]
Attributes	void	addAll	[org.jsoup.nodes.Attributes]
Attributes	java.util.Iterator<org.jsoup.nodes.Attribute>	iterator	[]
Attributes	java.util.List<org.jsoup.nodes.Attribute>	asList	[]
Attributes	java.util.Map<java.lang.String, java.lang.String>	dataset	[]
Attributes	java.lang.String	html	[]
Attributes	void	html	[java.lang.StringBuilder, org.jsoup.nodes.Document$OutputSettings]
Attributes	java.lang.String	toString	[]
Attributes	boolean	equals	[java.lang.Object]
Attributes	int	hashCode	[]
Attributes	org.jsoup.nodes.Attributes	clone	[]
Attributes	java.lang.String	dataKey	[java.lang.String]
Element		org.jsoup.nodes.Element	[org.jsoup.parser.Tag, java.lang.String, org.jsoup.nodes.Attributes]
Element		org.jsoup.nodes.Element	[org.jsoup.parser.Tag, java.lang.String]
Element	java.lang.String	nodeName	[]
Element	java.lang.String	tagName	[]
Element	org.jsoup.nodes.Element	tagName	[java.lang.String]
Element	org.jsoup.parser.Tag	tag	[]
Element	boolean	isBlock	[]
Element	java.lang.String	id	[]
Element	org.jsoup.nodes.Element	attr	[java.lang.String, java.lang.String]
Element	java.util.Map<java.lang.String, java.lang.String>	dataset	[]
Element	org.jsoup.nodes.Element	parent	[]
Element	org.jsoup.select.Elements	parents	[]
Element	void	accumulateParents	[org.jsoup.nodes.Element, org.jsoup.select.Elements]
Element	org.jsoup.nodes.Element	child	[int]
Element	org.jsoup.select.Elements	children	[]
Element	org.jsoup.select.Elements	select	[java.lang.String]
Element	org.jsoup.nodes.Element	appendChild	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	prependChild	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	appendElement	[java.lang.String]
Element	org.jsoup.nodes.Element	prependElement	[java.lang.String]
Element	org.jsoup.nodes.Element	appendText	[java.lang.String]
Element	org.jsoup.nodes.Element	prependText	[java.lang.String]
Element	org.jsoup.nodes.Element	append	[java.lang.String]
Element	org.jsoup.nodes.Element	prepend	[java.lang.String]
Element	org.jsoup.nodes.Element	before	[java.lang.String]
Element	org.jsoup.nodes.Element	before	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	after	[java.lang.String]
Element	org.jsoup.nodes.Element	after	[org.jsoup.nodes.Node]
Element	org.jsoup.nodes.Element	empty	[]
Element	org.jsoup.nodes.Element	wrap	[java.lang.String]
Element	org.jsoup.select.Elements	siblingElements	[]
Element	org.jsoup.nodes.Element	nextElementSibling	[]
Element	org.jsoup.nodes.Element	previousElementSibling	[]
Element	org.jsoup.nodes.Element	firstElementSibling	[]
Element	java.lang.Integer	elementSiblingIndex	[]
Element	org.jsoup.nodes.Element	lastElementSibling	[]
Element	java.lang.Integer	indexInList	[org.jsoup.nodes.Element, java.util.List]
Element	org.jsoup.select.Elements	getElementsByTag	[java.lang.String]
Element	org.jsoup.nodes.Element	getElementById	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByClass	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttribute	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeStarting	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValue	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueNot	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueStarting	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueEnding	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueContaining	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByAttributeValueMatching	[java.lang.String, java.util.regex.Pattern]
Element	org.jsoup.select.Elements	getElementsByAttributeValueMatching	[java.lang.String, java.lang.String]
Element	org.jsoup.select.Elements	getElementsByIndexLessThan	[int]
Element	org.jsoup.select.Elements	getElementsByIndexGreaterThan	[int]
Element	org.jsoup.select.Elements	getElementsByIndexEquals	[int]
Element	org.jsoup.select.Elements	getElementsContainingText	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsContainingOwnText	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsMatchingText	[java.util.regex.Pattern]
Element	org.jsoup.select.Elements	getElementsMatchingText	[java.lang.String]
Element	org.jsoup.select.Elements	getElementsMatchingOwnText	[java.util.regex.Pattern]
Element	org.jsoup.select.Elements	getElementsMatchingOwnText	[java.lang.String]
Element	org.jsoup.select.Elements	getAllElements	[]
Element	java.lang.String	text	[]
Element	void	text	[java.lang.StringBuilder]
Element	java.lang.String	ownText	[]
Element	void	ownText	[java.lang.StringBuilder]
Element	void	appendNormalisedText	[java.lang.StringBuilder, org.jsoup.nodes.TextNode]
Element	void	appendWhitespaceIfBr	[org.jsoup.nodes.Element, java.lang.StringBuilder]
Element	boolean	preserveWhitespace	[]
Element	org.jsoup.nodes.Element	text	[java.lang.String]
Element	boolean	hasText	[]
Element	java.lang.String	data	[]
Element	java.lang.String	className	[]
Element	java.util.Set<java.lang.String>	classNames	[]
Element	org.jsoup.nodes.Element	classNames	[java.util.Set]
Element	boolean	hasClass	[java.lang.String]
Element	org.jsoup.nodes.Element	addClass	[java.lang.String]
Element	org.jsoup.nodes.Element	removeClass	[java.lang.String]
Element	org.jsoup.nodes.Element	toggleClass	[java.lang.String]
Element	java.lang.String	val	[]
Element	org.jsoup.nodes.Element	val	[java.lang.String]
Element	void	outerHtmlHead	[java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings]
Element	void	outerHtmlTail	[java.lang.StringBuilder, int, org.jsoup.nodes.Document$OutputSettings]
Element	java.lang.String	html	[]
Element	void	html	[java.lang.StringBuilder]
Element	org.jsoup.nodes.Element	html	[java.lang.String]
Element	java.lang.String	toString	[]
Element	boolean	equals	[java.lang.Object]
Element	int	hashCode	[]
Element	org.jsoup.nodes.Element	clone	[]
TagName		org.jsoup.safety.Whitelist$TagName	[java.lang.String]
TagName	org.jsoup.safety.Whitelist.TagName	valueOf	[java.lang.String]
AttributeKey		org.jsoup.safety.Whitelist$AttributeKey	[java.lang.String]
AttributeKey	org.jsoup.safety.Whitelist.AttributeKey	valueOf	[java.lang.String]
AttributeValue		org.jsoup.safety.Whitelist$AttributeValue	[java.lang.String]
AttributeValue	org.jsoup.safety.Whitelist.AttributeValue	valueOf	[java.lang.String]
Protocol		org.jsoup.safety.Whitelist$Protocol	[java.lang.String]
Protocol	org.jsoup.safety.Whitelist.Protocol	valueOf	[java.lang.String]
TypedValue		org.jsoup.safety.Whitelist$TypedValue	[java.lang.String]
TypedValue	int	hashCode	[]
TypedValue	boolean	equals	[java.lang.Object]
TypedValue	java.lang.String	toString	[]
Whitelist	org.jsoup.safety.Whitelist	none	[]
Whitelist	org.jsoup.safety.Whitelist	simpleText	[]
Whitelist	org.jsoup.safety.Whitelist	basic	[]
Whitelist	org.jsoup.safety.Whitelist	basicWithImages	[]
Whitelist	org.jsoup.safety.Whitelist	relaxed	[]
Whitelist		org.jsoup.safety.Whitelist	[]
Whitelist	org.jsoup.safety.Whitelist	addTags	[java.lang.String[]]
Whitelist	org.jsoup.safety.Whitelist	addAttributes	[java.lang.String, java.lang.String[]]
Whitelist	org.jsoup.safety.Whitelist	addEnforcedAttribute	[java.lang.String, java.lang.String, java.lang.String]
Whitelist	org.jsoup.safety.Whitelist	preserveRelativeLinks	[boolean]
Whitelist	org.jsoup.safety.Whitelist	addProtocols	[java.lang.String, java.lang.String, java.lang.String[]]
Whitelist	boolean	isSafeTag	[java.lang.String]
Whitelist	boolean	isSafeAttribute	[java.lang.String, org.jsoup.nodes.Element, org.jsoup.nodes.Attribute]
Whitelist	boolean	testValidProtocol	[org.jsoup.nodes.Element, org.jsoup.nodes.Attribute, java.util.Set]
Whitelist	org.jsoup.nodes.Attributes	getEnforcedAttributes	[java.lang.String]
