org.mockito.internal.configuration.plugins.PluginFinder	Expression	class spoon.support.reflect.code.CtThisAccessImpl	371:374	15:15	this	[]	[]	[spoon.support.reflect.code.CtFieldWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.plugins.PluginSwitch	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	371:387	15:15	this.pluginSwitch	[]	[org.mockito.plugins.PluginSwitch:pluginSwitch]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.plugins.PluginSwitch	Expression	class spoon.support.reflect.code.CtVariableReadImpl	391:402	15:15	pluginSwitch	[]	[org.mockito.plugins.PluginSwitch:pluginSwitch]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	371:403	15:15	this.pluginSwitch = pluginSwitch	[]	[org.mockito.plugins.PluginSwitch:pluginSwitch]	[spoon.support.reflect.declaration.CtConstructorImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	479:502	19:19	java.net.URL resource	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Iterable<java.net.URL>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	494:502	19:19	resources	[]	[java.lang.Iterable<java.net.URL>:resources]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	535:538	20:20	null	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	519:539	20:20	java.io.InputStream s = null	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.InputStream	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	575:575	22:22	s	[]	[java.io.InputStream:s]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.net.URL	Expression	class spoon.support.reflect.code.CtVariableReadImpl	579:586	22:22	resource	[]	[java.net.URL:resource]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.InputStream	Expression	class spoon.support.reflect.code.CtInvocationImpl	579:599	22:22	resource.openStream()	[java.io.InputStream:openStream]	[java.net.URL:resource]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	575:600	22:22	s = resource.openStream()	[java.io.InputStream:openStream]	[java.net.URL:resource, java.io.InputStream:s]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.configuration.plugins.PluginFileReader	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	643:664	23:23	new org.mockito.internal.configuration.plugins.PluginFileReader()	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.io.InputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	682:682	23:23	s	[]	[java.io.InputStream:s]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	643:683	23:23	new org.mockito.internal.configuration.plugins.PluginFileReader().readPluginClass(s)	[java.lang.String:PluginFileReader]	[java.io.InputStream:s]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	618:684	23:23	java.lang.String pluginClassName = new org.mockito.internal.configuration.plugins.PluginFileReader().readPluginClass(s)	[java.lang.String:PluginFileReader]	[java.io.InputStream:s]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	706:720	24:24	pluginClassName	[]	[java.lang.String:pluginClassName]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	725:728	24:24	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	706:728	24:24	pluginClassName == null	[]	[java.lang.String:pluginClassName]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtContinueImpl	Statement	class spoon.support.reflect.code.CtContinueImpl	891:899	27:27	continue	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtContinueImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	702:917	24:28	if (pluginClassName == null) {    continue;}	[]	[java.lang.String:pluginClassName]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.plugins.PluginSwitch	Expression	class spoon.support.reflect.code.CtFieldReadImpl	940:951	29:29	pluginSwitch	[]	[org.mockito.plugins.PluginSwitch:pluginSwitch]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	963:977	29:29	pluginClassName	[]	[java.lang.String:pluginClassName]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	940:978	29:29	pluginSwitch.isEnabled(pluginClassName)	[:isEnabled]	[java.lang.String:pluginClassName, org.mockito.plugins.PluginSwitch:pluginSwitch]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	939:978	29:29	!(pluginSwitch.isEnabled(pluginClassName))	[:isEnabled]	[java.lang.String:pluginClassName, org.mockito.plugins.PluginSwitch:pluginSwitch]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtContinueImpl	Statement	class spoon.support.reflect.code.CtContinueImpl	1003:1011	30:30	continue	[]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtContinueImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	935:1029	29:31	if (!(pluginSwitch.isEnabled(pluginClassName))) {    continue;}	[:isEnabled]	[java.lang.String:pluginClassName, org.mockito.plugins.PluginSwitch:pluginSwitch]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1054:1068	32:32	pluginClassName	[]	[java.lang.String:pluginClassName]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1047:1069	32:32	return pluginClassName	[]	[java.lang.String:pluginClassName]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1149:1195	34:34	"Problems reading plugin implementation from: "	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.net.URL	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1199:1206	34:34	resource	[]	[java.net.URL:resource]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1149:1206	34:34	"Problems reading plugin implementation from: " + resource	[]	[java.net.URL:resource]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.Exception	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1209:1209	34:34	e	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
org.mockito.exceptions.base.MockitoException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1128:1210	34:34	new org.mockito.exceptions.base.MockitoException(("Problems reading plugin implementation from: " + resource), e)	[]	[java.lang.Exception:e, java.net.URL:resource]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1122:1211	34:34	throw new org.mockito.exceptions.base.MockitoException(("Problems reading plugin implementation from: " + resource), e)	[]	[java.lang.Exception:e, java.net.URL:resource]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtThrowImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1253:1258	36:36	org.mockito.internal.util.io.IOUtil	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.io.InputStream	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1273:1273	36:36	s	[]	[java.io.InputStream:s]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1253:1275	36:36	org.mockito.internal.util.io.IOUtil.closeQuietly(s)	[:closeQuietly]	[java.io.InputStream:s]	[spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	553:1289	21:37	try {    s = resource.openStream();    java.lang.String pluginClassName = new org.mockito.internal.configuration.plugins.PluginFileReader().readPluginClass(s);    if (pluginClassName == null) {        continue;    }    if (!(pluginSwitch.isEnabled(pluginClassName))) {        continue;    }    return pluginClassName;} catch (java.lang.Exception e) {    throw new org.mockito.exceptions.base.MockitoException(("Problems reading plugin implementation from: " + resource), e);} finally {    org.mockito.internal.util.io.IOUtil.closeQuietly(s);}	[:isEnabled, :closeQuietly, java.lang.String:PluginFileReader, java.io.InputStream:openStream]	[java.lang.Exception:e, java.net.URL:resource, java.lang.String:pluginClassName, org.mockito.plugins.PluginSwitch:pluginSwitch, java.io.InputStream:s]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	474:1299	19:38	for (java.net.URL resource : resources) {    java.io.InputStream s = null;    try {        s = resource.openStream();        java.lang.String pluginClassName = new org.mockito.internal.configuration.plugins.PluginFileReader().readPluginClass(s);        if (pluginClassName == null) {            continue;        }        if (!(pluginSwitch.isEnabled(pluginClassName))) {            continue;        }        return pluginClassName;    } catch (java.lang.Exception e) {        throw new org.mockito.exceptions.base.MockitoException(("Problems reading plugin implementation from: " + resource), e);    } finally {        org.mockito.internal.util.io.IOUtil.closeQuietly(s);    }}	[:isEnabled, :closeQuietly, java.lang.String:PluginFileReader, java.io.InputStream:openStream]	[java.lang.Exception:e, java.net.URL:resource, java.lang.String:pluginClassName, org.mockito.plugins.PluginSwitch:pluginSwitch, java.io.InputStream:s, java.lang.Iterable<java.net.URL>:resources]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1316:1319	39:39	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1309:1320	39:39	return null	[]	[]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtContinueImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
