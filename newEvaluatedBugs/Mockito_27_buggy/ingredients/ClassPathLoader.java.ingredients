java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	427:437	16:16	"unchecked"	[]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.declaration.CtAnnotationImpl]	[]
java.lang.String[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	426:438	16:16	{ "unchecked" }	[]	[]	[spoon.support.reflect.declaration.CtAnnotationImpl]	[]
java.lang.SuppressWarnings	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	408:439	16:16	@java.lang.SuppressWarnings({ "unchecked" })	[]	[]	[]	[]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	570:573	19:19	null	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	550:574	19:19	java.lang.Class configClass = null	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	602:612	21:21	configClass	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	624:628	21:21	java.lang.Class	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	638:685	21:21	"org.mockito.configuration.MockitoConfiguration"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<?>	Expression	class spoon.support.reflect.code.CtInvocationImpl	624:686	21:21	(java.lang.Class) (java.lang.Class.forName("org.mockito.configuration.MockitoConfiguration"))	[]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	602:687	21:21	configClass = ((java.lang.Class) (java.lang.Class.forName("org.mockito.configuration.MockitoConfiguration")))	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	834:837	24:24	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	827:838	24:24	return null	[]	[]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	584:848	20:25	try {    configClass = ((java.lang.Class) (java.lang.Class.forName("org.mockito.configuration.MockitoConfiguration")));} catch (java.lang.ClassNotFoundException e) {    return null;}	[]	[java.lang.Class:configClass]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class	Expression	class spoon.support.reflect.code.CtVariableReadImpl	916:926	28:28	configClass	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	916:940	28:28	(org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance())	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	885:941	28:28	return ((org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance()))	[]	[java.lang.Class:configClass]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1036:1039	30:30	"\n"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1063:1164	31:31	"MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1036:1164	30:31	"\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.ClassCastException	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1167:1167	31:31	e	[]	[java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
org.mockito.exceptions.misusing.MockitoConfigurationException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1002:1168	30:31	new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."), e)	[]	[java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	996:1169	30:31	throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."), e)	[]	[java.lang.ClassCastException:e]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1255:1258	33:33	"\n"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	1282:1399	34:34	"Unable to instantiate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1255:1399	33:34	"\n" + "Unable to instantiate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"	[]	[]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.Exception	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1402:1402	34:34	e	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtConstructorCallImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
org.mockito.exceptions.misusing.MockitoConfigurationException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1221:1403	33:34	new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "Unable to instantiate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"), e)	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	1215:1404	33:34	throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "Unable to instantiate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"), e)	[]	[java.lang.Exception:e]	[spoon.support.reflect.code.CtCatchImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	867:1414	27:35	try {    return ((org.mockito.configuration.IMockitoConfiguration) (configClass.newInstance()));} catch (java.lang.ClassCastException e) {    throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface."), e);} catch (java.lang.Exception e) {    throw new org.mockito.exceptions.misusing.MockitoConfigurationException(("\n" + "Unable to instantiate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?"), e);}	[]	[java.lang.Class:configClass, java.lang.Exception:e, java.lang.ClassCastException:e]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtThrowImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
