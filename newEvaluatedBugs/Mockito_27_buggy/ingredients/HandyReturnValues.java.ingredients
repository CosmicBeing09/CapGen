java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	383:393	17:17	"unchecked"	[]	[]	[spoon.support.reflect.declaration.CtAnnotationImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.SuppressWarnings	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	365:394	17:17	@java.lang.SuppressWarnings("unchecked")	[]	[]	[spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	441:444	20:20	byte	[]	[]	[]	[]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	476:476	21:21	0	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	469:477	21:21	return 0	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	532:532	25:25	0	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	525:533	25:25	return 0	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	589:592	29:29	null	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	582:593	29:29	return null	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	652:656	33:33	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	645:657	33:33	return false	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	716:717	37:37	""	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	709:718	37:37	return ""	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.lang.Class<T>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	803:807	41:41	clazz	[]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	784:808	41:41	isPrimitiveWrapper(clazz)	[boolean:isPrimitiveWrapper]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<T>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	851:855	42:42	clazz	[]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtInvocationImpl	832:856	42:42	primitiveWrapperOf(clazz)	[T:primitiveWrapperOf]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	825:857	42:42	return primitiveWrapperOf(clazz)	[T:primitiveWrapperOf]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	780:867	41:43	if (isPrimitiveWrapper(clazz)) {    return primitiveWrapperOf(clazz);}	[boolean:isPrimitiveWrapper, T:primitiveWrapperOf]	[java.lang.Class<T>:clazz]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<T>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	909:913	44:44	clazz	[]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtInvocationImpl	885:914	44:44	primitiveValueOrNullFor(clazz)	[T:primitiveValueOrNullFor]	[java.lang.Class<T>:clazz]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	878:915	44:44	return primitiveValueOrNullFor(clazz)	[T:primitiveValueOrNullFor]	[java.lang.Class<T>:clazz]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashMap	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	968:980	48:48	new java.util.HashMap()	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	961:981	48:48	return new java.util.HashMap()	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.util.LinkedList	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1036:1051	52:52	new java.util.LinkedList()	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1029:1052	52:52	return new java.util.LinkedList()	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
java.util.HashSet	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1105:1117	56:56	new java.util.HashSet()	[]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1098:1118	56:56	return new java.util.HashSet()	[]	[]	[]	[spoon.support.reflect.code.CtReturnImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1183:1190	60:60	instance	[]	[T:instance]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1195:1198	60:60	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	1183:1198	60:60	instance == null	[]	[T:instance]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	1202:1205	60:60	null	[]	[]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1223:1230	60:60	instance	[]	[T:instance]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<? extends java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	1223:1241	60:60	instance.getClass()	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
? extends java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	1213:1242	60:60	(T) (returnFor(instance.getClass()))	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtConditionalImpl	1183:1242	60:60	instance == null ? null : ((T) (returnFor(instance.getClass())))	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1176:1243	60:60	return instance == null ? null : ((T) (returnFor(instance.getClass())))	[java.lang.Class<? extends java.lang.Object>:getClass]	[T:instance]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
