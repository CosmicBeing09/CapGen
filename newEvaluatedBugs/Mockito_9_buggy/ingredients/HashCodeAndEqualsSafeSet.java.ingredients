java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	1000:1042	34:34	new java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>()	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1203:1216	38:38	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.code.CtNewClassImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	1203:1227	38:38	backingHashSet.iterator()	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.code.CtNewClassImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1293:1300	41:41	iterator	[]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1293:1310	41:41	iterator.hasNext()	[boolean:hasNext]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1286:1311	41:41	return iterator.hasNext()	[boolean:hasNext]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1386:1393	45:45	iterator	[]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1386:1400	45:45	iterator.next()	[:next]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	1386:1406	45:45	iterator.next().get()	[:next, java.lang.Object:next]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1379:1407	45:45	return iterator.next().get()	[:next, java.lang.Object:next]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1475:1482	49:49	iterator	[]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1475:1492	49:49	iterator.remove()	[:remove]	[java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtNewClassImpl	1102:1516	37:51	new java.util.Iterator<java.lang.Object>() {    private final java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();    public boolean hasNext() {        return iterator.hasNext();    }    public java.lang.Object next() {        return iterator.next().get();    }    public void remove() {        iterator.remove();    }}	[:next, boolean:hasNext, java.lang.Object:super, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator, java.lang.Object:next, :remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1095:1517	37:51	return new java.util.Iterator<java.lang.Object>() {    private final java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();    public boolean hasNext() {        return iterator.hasNext();    }    public java.lang.Object next() {        return iterator.next().get();    }    public void remove() {        iterator.remove();    }}	[:next, boolean:hasNext, java.lang.Object:super, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator, java.lang.Object:next, :remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Iterator<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:iterator]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1565:1578	55:55	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	1565:1585	55:55	backingHashSet.size()	[int:size]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1558:1586	55:55	return backingHashSet.size()	[int:size]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1641:1654	59:59	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1641:1664	59:59	backingHashSet.isEmpty()	[boolean:isEmpty]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1634:1665	59:59	return backingHashSet.isEmpty()	[boolean:isEmpty]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1732:1745	63:63	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1756:1783	63:63	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1788:1791	63:63	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1756:1792	63:63	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1732:1793	63:63	backingHashSet.contains(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[boolean:contains, :of]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1725:1794	63:63	return backingHashSet.contains(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[boolean:contains, :of]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1856:1869	67:67	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	1875:1902	67:67	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	1907:1910	67:67	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	1875:1911	67:67	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1856:1912	67:67	backingHashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:add]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1849:1913	67:67	return backingHashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:add]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	1978:1991	71:71	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	2000:2027	71:71	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2032:2035	71:71	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	2000:2036	71:71	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	1978:2037	71:71	backingHashSet.remove(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	1971:2038	71:71	return backingHashSet.remove(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:of, boolean:remove]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2081:2094	75:75	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	2081:2103	75:75	backingHashSet.clear()	[:clear]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2116:2124	78:78	@java.lang.Override	[]	[]	[]	[]
java.lang.CloneNotSupportedException	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	2198:2229	79:79	new java.lang.CloneNotSupportedException()	[]	[]	[spoon.support.reflect.code.CtThrowImpl]	[spoon.support.reflect.code.CtThrowImpl]
CtThrowImpl	Statement	class spoon.support.reflect.code.CtThrowImpl	2192:2230	79:79	throw new java.lang.CloneNotSupportedException()	[]	[]	[]	[spoon.support.reflect.code.CtThrowImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2243:2251	82:82	@java.lang.Override	[]	[]	[]	[]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2301:2301	83:83	o	[]	[java.lang.Object:o]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	2314:2337	83:83	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2300:2338	83:83	o instanceof org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	[]	[java.lang.Object:o]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	2299:2338	83:83	!(o instanceof org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet)	[]	[java.lang.Object:o]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	2362:2366	84:84	false	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2355:2367	84:84	return false	[]	[]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtReturnImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2295:2377	83:85	if (!(o instanceof org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet)) {    return false;}	[]	[java.lang.Object:o]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2446:2446	86:86	(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o)	[]	[java.lang.Object:(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o)]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2387:2447	86:86	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet that = ((org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o))	[]	[java.lang.Object:(org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet) (o)]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2464:2477	87:87	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2486:2489	87:87	that	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2486:2504	87:87	that.backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2464:2505	87:87	backingHashSet.equals(that.backingHashSet)	[boolean:equals]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2457:2506	87:87	return backingHashSet.equals(that.backingHashSet)	[boolean:equals]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:that]	[]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	2519:2527	90:90	@java.lang.Override	[]	[]	[]	[]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	2536:2538	90:90	int	[]	[]	[]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2568:2581	91:91	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2568:2592	91:91	backingHashSet.hashCode()	[int:hashCode]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2561:2593	91:91	return backingHashSet.hashCode()	[int:hashCode]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	2669:2674	95:95	size()	[int:size]	[]	[spoon.support.reflect.code.CtNewArrayImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtNewArrayImpl	2658:2675	95:95	new java.lang.Object[size()]	[int:size]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	2649:2676	95:95	unwrapTo(new java.lang.Object[size()])	[java.lang.Object[]:unwrapTo, int:size]	[]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2642:2677	95:95	return unwrapTo(new java.lang.Object[size()])	[java.lang.Object[]:unwrapTo, int:size]	[]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	2764:2773	99:99	iterator()	[java.util.Iterator<java.lang.Object>:iterator]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2736:2774	99:99	java.util.Iterator<java.lang.Object> iterator = iterator()	[java.util.Iterator<java.lang.Object>:iterator]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	2789:2791	100:100	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtLiteralImpl	2797:2797	100:100	0	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2789:2797	100:100	int i = 0	[]	[]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	2789:2791	100:100	int	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2816:2820	100:100	array	[]	[T[]:array]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	2816:2827	100:100	array.length	[]	[int:length, T[]:array]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	2789:2827	100:100	int objectsLength = array.length	[]	[int:length, T[]:array]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2830:2830	100:100	i	[]	[int:i]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2834:2846	100:100	objectsLength	[]	[int:objectsLength]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	2830:2846	100:100	i < objectsLength	[]	[int:i, int:objectsLength]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableWriteImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableWriteImpl	2849:2849	100:100	i	[]	[int:i]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	2849:2851	100:100	i++	[]	[int:i]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2872:2879	101:101	iterator	[]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	2872:2889	101:101	iterator.hasNext()	[boolean:hasNext]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2910:2914	102:102	array	[]	[T[]:array]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtLocalVariableReferenceImpl, spoon.support.reflect.code.CtVariableReadImpl, spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2916:2916	102:102	i	[]	[int:i]	[spoon.support.reflect.code.CtArrayWriteImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
T	Expression	class spoon.support.reflect.code.CtArrayWriteImpl	2910:2917	102:102	array[i]	[]	[int:i, T[]:array]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Iterator<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2925:2932	102:102	iterator	[]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	2925:2939	102:102	(T) (iterator.next())	[]	[java.util.Iterator<java.lang.Object>:iterator]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	2910:2940	102:102	array[i] = ((T) (iterator.next()))	[]	[int:i, java.util.Iterator<java.lang.Object>:iterator, T[]:array]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	2868:2954	101:103	if (iterator.hasNext()) {    array[i] = ((T) (iterator.next()));}	[boolean:hasNext]	[int:i, java.util.Iterator<java.lang.Object>:iterator, T[]:array]	[spoon.support.reflect.code.CtForImpl]	[spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForImpl	Statement	class spoon.support.reflect.code.CtForImpl	2784:2964	100:104	for (int i = 0, objectsLength = array.length; i < objectsLength; i++) {    if (iterator.hasNext()) {        array[i] = ((T) (iterator.next()));    }}	[boolean:hasNext]	[int:length, int:i, int:objectsLength, java.util.Iterator<java.lang.Object>:iterator, T[]:array]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	2981:2985	105:105	array	[]	[T[]:array]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	2974:2986	105:105	return array	[]	[T[]:array]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3061:3070	110:110	typedArray	[]	[T[]:typedArray]	[spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtFieldReferenceImpl, spoon.support.reflect.code.CtFieldReadImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3061:3077	110:110	typedArray.length	[]	[T[]:typedArray, int:length]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	3082:3087	110:110	size()	[int:size]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	3061:3087	110:110	typedArray.length) >= (size()	[int:size]	[T[]:typedArray, int:length]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3091:3100	110:110	typedArray	[]	[T[]:typedArray]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3138:3147	111:111	typedArray	[]	[T[]:typedArray]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<? extends java.lang.Object[]>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3138:3158	111:111	typedArray.getClass()	[java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Class<?>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3138:3177	111:111	typedArray.getClass().getComponentType()	[java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	PrimitiveType	class spoon.support.reflect.reference.CtTypeReferenceImpl	1537:1539	54:54	int	[]	[]	[spoon.support.reflect.reference.CtExecutableReferenceImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
int	Expression	class spoon.support.reflect.code.CtInvocationImpl	3180:3185	111:111	size()	[int:size]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtInvocationImpl	3126:3186	111:111	(T[]) (java.lang.reflect.Array.newInstance(typedArray.getClass().getComponentType(), size()))	[int:size, java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray]	[spoon.support.reflect.code.CtConditionalImpl, spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtConditionalImpl	3061:3186	110:111	(typedArray.length) >= (size())) ? typedArray : ((T[]) (java.lang.reflect.Array.newInstance(typedArray.getClass().getComponentType(), size()))	[int:size, java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray, int:length]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3049:3187	110:111	T[] array = ((typedArray.length) >= (size())) ? typedArray : ((T[]) (java.lang.reflect.Array.newInstance(typedArray.getClass().getComponentType(), size())))	[int:size, java.lang.Class<?>:getClass, java.lang.Class<? extends java.lang.Object[]>:getClass]	[T[]:typedArray, int:length]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3213:3217	112:112	array	[]	[T[]:array]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
T[]	Expression	class spoon.support.reflect.code.CtInvocationImpl	3204:3218	112:112	unwrapTo(array)	[T[]:unwrapTo]	[T[]:array]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3197:3219	112:112	return unwrapTo(array)	[T[]:unwrapTo]	[T[]:array]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3295:3308	116:116	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3335:3339	116:116	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3320:3340	116:116	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3295:3341	116:116	backingHashSet.removeAll(asWrappedMocks(mocks))	[boolean:removeAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3288:3342	116:116	return backingHashSet.removeAll(asWrappedMocks(mocks))	[boolean:removeAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3420:3433	120:120	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3462:3466	120:120	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3447:3467	120:120	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3420:3468	120:120	backingHashSet.containsAll(asWrappedMocks(mocks))	[boolean:containsAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3413:3469	120:120	return backingHashSet.containsAll(asWrappedMocks(mocks))	[boolean:containsAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3542:3555	124:124	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3579:3583	124:124	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3564:3584	124:124	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3542:3585	124:124	backingHashSet.addAll(asWrappedMocks(mocks))	[boolean:addAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3535:3586	124:124	return backingHashSet.addAll(asWrappedMocks(mocks))	[boolean:addAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	3662:3675	128:128	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3702:3706	128:128	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtInvocationImpl	3687:3707	128:128	asWrappedMocks(mocks)	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	3662:3708	128:128	backingHashSet.retainAll(asWrappedMocks(mocks))	[boolean:retainAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	3655:3709	128:128	return backingHashSet.retainAll(asWrappedMocks(mocks))	[boolean:retainAll, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:asWrappedMocks]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet, java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	3814:3819	132:132	org.mockito.internal.util.Checks	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	3834:3838	132:132	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	3841:3883	132:132	"Passed collection should notify() be null"	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	3814:3885	132:132	org.mockito.internal.util.Checks.checkNotNull(mocks, "Passed collection should notify() be null")	[:checkNotNull]	[java.util.Collection<?>:mocks]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	3943:3985	133:133	new java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	3895:3986	133:133	java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper> hashSet = new java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>()	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4001:4019	134:134	java.lang.Object mock	[]	[]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.Collection<?>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4015:4019	134:134	mocks	[]	[java.util.Collection<?>:mocks]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4046:4049	135:135	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4062:4089	135:135	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4045:4090	135:135	mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtUnaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtUnaryOperatorImpl	4043:4090	135:135	!(mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper)	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtLiteralImpl	4094:4100	135:135	"WRONG"	[]	[]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssertImpl	Statement	class spoon.support.reflect.code.CtAssertImpl	4036:4100	135:135	assert !(mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper) : "WRONG"	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4115:4121	136:136	hashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4127:4154	136:136	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4159:4162	136:136	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	4127:4163	136:136	org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock)	[:of]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
null	Expression	class spoon.support.reflect.code.CtInvocationImpl	4115:4165	136:136	hashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock))	[:add, :of]	[java.lang.Object:mock, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[spoon.support.reflect.code.CtForEachImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	3996:4175	134:137	for (java.lang.Object mock : mocks) {    assert !(mock instanceof org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper) : "WRONG";    hashSet.add(org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper.of(mock));}	[:add, :of]	[java.util.Collection<?>:mocks, java.lang.Object:mock, java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4192:4198	138:138	hashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4185:4199	138:138	return hashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:hashSet]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Override	Expression	class spoon.support.reflect.declaration.CtAnnotationImpl	4212:4220	141:141	@java.lang.Override	[]	[]	[]	[]
java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>	Expression	class spoon.support.reflect.code.CtFieldReadImpl	4264:4277	142:142	backingHashSet	[]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.String	Expression	class spoon.support.reflect.code.CtInvocationImpl	4264:4288	142:142	backingHashSet.toString()	[java.lang.String:toString]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4257:4289	142:142	return backingHashSet.toString()	[java.lang.String:toString]	[java.util.HashSet<org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper>:backingHashSet]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtTypeAccessImpl	4381:4386	146:146	java.util.Arrays	[]	[]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object[]	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4395:4399	146:146	mocks	[]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.util.List<java.lang.Object>	Expression	class spoon.support.reflect.code.CtInvocationImpl	4381:4400	146:146	java.util.Arrays.asList(mocks)	[java.util.List<java.lang.Object>:asList]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtInvocationImpl	4378:4401	146:146	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.util.Arrays.asList(mocks))	[java.util.List<java.lang.Object>:asList, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of]	[java.lang.Object[]:mocks]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4371:4402	146:146	return org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet.of(java.util.Arrays.asList(mocks))	[java.util.List<java.lang.Object>:asList, org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of]	[java.lang.Object[]:mocks]	[]	[spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtConstructorCallImpl	4545:4574	150:150	new org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4493:4575	150:150	org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet()	[]	[]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Iterable<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4589:4595	151:151	objects	[]	[java.lang.Iterable<java.lang.Object>:objects]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	4600:4603	151:151	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	4589:4603	151:151	objects != null	[]	[java.lang.Iterable<java.lang.Object>:objects]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtLocalVariableImpl	Statement	class spoon.support.reflect.code.CtLocalVariableImpl	4625:4645	152:152	java.lang.Object mock	[]	[]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Iterable<java.lang.Object>	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4639:4645	152:152	objects	[]	[java.lang.Iterable<java.lang.Object>:objects]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4666:4689	153:153	hashCodeAndEqualsSafeSet	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Object	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4695:4698	153:153	mock	[]	[java.lang.Object:mock]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	4666:4700	153:153	hashCodeAndEqualsSafeSet.add(mock)	[boolean:add]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet, java.lang.Object:mock]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtForEachImpl	Statement	class spoon.support.reflect.code.CtForEachImpl	4620:4714	152:154	for (java.lang.Object mock : objects) {    hashCodeAndEqualsSafeSet.add(mock);}	[boolean:add]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet, java.lang.Iterable<java.lang.Object>:objects, java.lang.Object:mock]	[spoon.support.reflect.code.CtIfImpl]	[spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtInvocationImpl]
CtIfImpl	Statement	class spoon.support.reflect.code.CtIfImpl	4585:4724	151:155	if (objects != null) {    for (java.lang.Object mock : objects) {        hashCodeAndEqualsSafeSet.add(mock);    }}	[boolean:add]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet, java.lang.Iterable<java.lang.Object>:objects, java.lang.Object:mock]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet	Expression	class spoon.support.reflect.code.CtVariableReadImpl	4741:4764	156:156	hashCodeAndEqualsSafeSet	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet]	[spoon.support.reflect.code.CtReturnImpl]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
CtReturnImpl	Statement	class spoon.support.reflect.code.CtReturnImpl	4734:4765	156:156	return hashCodeAndEqualsSafeSet	[]	[org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:hashCodeAndEqualsSafeSet]	[]	[spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtIfImpl, spoon.support.reflect.code.CtForEachImpl, spoon.support.reflect.code.CtLocalVariableImpl, spoon.support.reflect.code.CtReturnImpl, spoon.support.reflect.code.CtInvocationImpl]
