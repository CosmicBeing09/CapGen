<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	277:280	11:11	null	[]	[]	[spoon.support.reflect.declaration.CtFieldImpl, spoon.support.reflect.declaration.CtClassImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.support.reflect.declaration.CtPackageImpl, spoon.reflect.CtModelImpl$CtRootPackage, spoon.reflect.CtModelImpl$CtRootPackage$1]	[]
java.lang.Boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	396:408	17:17	wasAccessible	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
<nulltype>	Expression	class spoon.support.reflect.code.CtLiteralImpl	413:416	17:17	null	[]	[]	[spoon.support.reflect.code.CtBinaryOperatorImpl, spoon.support.reflect.code.CtAssertImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtBinaryOperatorImpl	396:416	17:17	(wasAccessible) != null	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtAssertImpl]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssertImpl	Statement	class spoon.support.reflect.code.CtAssertImpl	389:416	17:17	assert (wasAccessible) != null	[]	[java.lang.Boolean:wasAccessible]	[]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	445:449	19:19	field	[]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
java.lang.Boolean	Expression	class spoon.support.reflect.code.CtFieldReadImpl	465:477	19:19	wasAccessible	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	445:479	19:19	field.setAccessible(wasAccessible)	[void:setAccessible]	[java.lang.reflect.Field:field, java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtTryImpl]	[spoon.support.reflect.code.CtInvocationImpl]
CtTryImpl	Statement	class spoon.support.reflect.code.CtTryImpl	427:542	18:22	try {    field.setAccessible(wasAccessible);} catch (java.lang.Throwable t) {}	[void:setAccessible]	[java.lang.reflect.Field:field, java.lang.Boolean:wasAccessible]	[]	[spoon.support.reflect.code.CtAssertImpl, spoon.support.reflect.code.CtTryImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.Boolean	Expression	class spoon.support.reflect.code.CtFieldWriteImpl	704:716	29:29	wasAccessible	[]	[java.lang.Boolean:wasAccessible]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	720:724	29:29	field	[]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtInvocationImpl	720:739	29:29	field.isAccessible()	[boolean:isAccessible]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtAssignmentImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
CtAssignmentImpl	Statement	class spoon.support.reflect.code.CtAssignmentImpl	704:740	29:29	wasAccessible = field.isAccessible()	[boolean:isAccessible]	[java.lang.reflect.Field:field, java.lang.Boolean:wasAccessible]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
java.lang.reflect.Field	Expression	class spoon.support.reflect.code.CtVariableReadImpl	750:754	30:30	field	[]	[java.lang.reflect.Field:field]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
boolean	Expression	class spoon.support.reflect.code.CtLiteralImpl	770:773	30:30	true	[]	[]	[spoon.support.reflect.code.CtInvocationImpl]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
void	Expression	class spoon.support.reflect.code.CtInvocationImpl	750:775	30:30	field.setAccessible(true)	[void:setAccessible]	[java.lang.reflect.Field:field]	[]	[spoon.support.reflect.code.CtAssignmentImpl, spoon.support.reflect.code.CtInvocationImpl, spoon.support.reflect.code.CtInvocationImpl]
